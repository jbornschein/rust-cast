var N = null;var searchIndex = {};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For `std::io`.)",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For `std::io`.)",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,N],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,N],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"default","","",3,[[],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",4,N],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"default","","",4,[[],["littleendian"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_uint","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_uint","","",3,N],[11,"read_u16_into","","",3,N],[11,"read_u32_into","","",3,N],[11,"read_u64_into","","",3,N],[11,"write_u16_into","","",3,N],[11,"write_u32_into","","",3,N],[11,"write_u64_into","","",3,N],[11,"from_slice_u16","","",3,N],[11,"from_slice_u32","","",3,N],[11,"from_slice_u64","","",3,N],[11,"from_slice_f32","","",3,N],[11,"from_slice_f64","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_uint","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_uint","","",4,N],[11,"read_u16_into","","",4,N],[11,"read_u32_into","","",4,N],[11,"read_u64_into","","",4,N],[11,"write_u16_into","","",4,N],[11,"write_u32_into","","",4,N],[11,"write_u64_into","","",4,N],[11,"from_slice_u16","","",4,N],[11,"from_slice_u32","","",4,N],[11,"from_slice_u64","","",4,N],[11,"from_slice_f32","","",4,N],[11,"from_slice_f64","","",4,N],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["dtoa"]={"doc":"","items":[[5,"write","dtoa","",N,[[["w"],["v"]],["result",["usize"]]]],[8,"Floating","","",N,N],[10,"write","","",0,[[["self"],["w"]],["result",["usize"]]]],[14,"diyfp","","",N,N],[14,"dtoa","","",N,N]],"paths":[[8,"Floating"]]};
searchIndex["foreign_types"]={"doc":"A framework for Rust wrappers over C APIs.","items":[[3,"Opaque","foreign_types","An opaque type used to define `ForeignTypeRef` types.",N,N],[8,"ForeignType","","A type implemented by wrappers over foreign types.",N,N],[16,"CType","","The raw C type.",0,N],[16,"Ref","","The type representing a reference to this type.",0,N],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,N],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,N],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed foreign types.",N,N],[16,"CType","","The raw C type.",1,N],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,N],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",1,N],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,N],[14,"foreign_type","","A macro to easily define wrappers for foreign types.",N,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["foreign_types_shared"]={"doc":"Internal crate used by foreign-types","items":[[3,"Opaque","foreign_types_shared","An opaque type used to define `ForeignTypeRef` types.",N,N],[8,"ForeignType","","A type implemented by wrappers over foreign types.",N,N],[16,"CType","","The raw C type.",0,N],[16,"Ref","","The type representing a reference to this type.",0,N],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,N],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,N],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed foreign types.",N,N],[16,"CType","","The raw C type.",1,N],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,N],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw type.",1,N],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["itoa"]={"doc":"","items":[[5,"write","itoa","Write integer to an `io::Write`.",N,[[["w"],["v"]],["result",["usize"]]]],[5,"fmt","","Write integer to an `fmt::Write`.",N,[[["w"],["v"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and `itoa::fmt`.",N,N]],"paths":[]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"Crate docs","items":[[3,"group","libc","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",21,N],[12,"sin_port","","",21,N],[12,"sin_addr","","",21,N],[12,"sin_zero","","",21,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",22,N],[12,"sin6_port","","",22,N],[12,"sin6_flowinfo","","",22,N],[12,"sin6_addr","","",22,N],[12,"sin6_scope_id","","",22,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",23,N],[12,"sun_path","","",23,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",24,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",25,N],[12,"ai_family","","",25,N],[12,"ai_socktype","","",25,N],[12,"ai_protocol","","",25,N],[12,"ai_addrlen","","",25,N],[12,"ai_addr","","",25,N],[12,"ai_canonname","","",25,N],[12,"ai_next","","",25,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",26,N],[12,"nl_pid","","",26,N],[12,"nl_groups","","",26,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",27,N],[12,"sll_protocol","","",27,N],[12,"sll_ifindex","","",27,N],[12,"sll_hatype","","",27,N],[12,"sll_pkttype","","",27,N],[12,"sll_halen","","",27,N],[12,"sll_addr","","",27,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",28,N],[12,"tm_min","","",28,N],[12,"tm_hour","","",28,N],[12,"tm_mday","","",28,N],[12,"tm_mon","","",28,N],[12,"tm_year","","",28,N],[12,"tm_wday","","",28,N],[12,"tm_yday","","",28,N],[12,"tm_isdst","","",28,N],[12,"tm_gmtoff","","",28,N],[12,"tm_zone","","",28,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",29,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",30,N],[12,"dli_fbase","","",30,N],[12,"dli_sname","","",30,N],[12,"dli_saddr","","",30,N],[3,"epoll_event","","",N,N],[12,"events","","",31,N],[12,"u64","","",31,N],[3,"utsname","","",N,N],[12,"sysname","","",32,N],[12,"nodename","","",32,N],[12,"release","","",32,N],[12,"version","","",32,N],[12,"machine","","",32,N],[12,"domainname","","",32,N],[3,"lconv","","",N,N],[12,"decimal_point","","",33,N],[12,"thousands_sep","","",33,N],[12,"grouping","","",33,N],[12,"int_curr_symbol","","",33,N],[12,"currency_symbol","","",33,N],[12,"mon_decimal_point","","",33,N],[12,"mon_thousands_sep","","",33,N],[12,"mon_grouping","","",33,N],[12,"positive_sign","","",33,N],[12,"negative_sign","","",33,N],[12,"int_frac_digits","","",33,N],[12,"frac_digits","","",33,N],[12,"p_cs_precedes","","",33,N],[12,"p_sep_by_space","","",33,N],[12,"n_cs_precedes","","",33,N],[12,"n_sep_by_space","","",33,N],[12,"p_sign_posn","","",33,N],[12,"n_sign_posn","","",33,N],[12,"int_p_cs_precedes","","",33,N],[12,"int_p_sep_by_space","","",33,N],[12,"int_n_cs_precedes","","",33,N],[12,"int_n_sep_by_space","","",33,N],[12,"int_p_sign_posn","","",33,N],[12,"int_n_sign_posn","","",33,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",34,N],[12,"sigev_signo","","",34,N],[12,"sigev_notify","","",34,N],[12,"sigev_notify_thread_id","","",34,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",35,N],[12,"ipi_spec_dst","","",35,N],[12,"ipi_addr","","",35,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",36,N],[12,"ifa_name","","",36,N],[12,"ifa_flags","","",36,N],[12,"ifa_addr","","",36,N],[12,"ifa_netmask","","",36,N],[12,"ifa_ifu","","",36,N],[12,"ifa_data","","",36,N],[3,"in6_rtmsg","","",N,N],[3,"arpreq","","",N,N],[12,"arp_pa","","",37,N],[12,"arp_ha","","",37,N],[12,"arp_flags","","",37,N],[12,"arp_netmask","","",37,N],[12,"arp_dev","","",37,N],[3,"arpreq_old","","",N,N],[12,"arp_pa","","",38,N],[12,"arp_ha","","",38,N],[12,"arp_flags","","",38,N],[12,"arp_netmask","","",38,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",39,N],[12,"ar_pro","","",39,N],[12,"ar_hln","","",39,N],[12,"ar_pln","","",39,N],[12,"ar_op","","",39,N],[3,"dirent","","",N,N],[12,"d_ino","","",40,N],[12,"d_off","","",40,N],[12,"d_reclen","","",40,N],[12,"d_type","","",40,N],[12,"d_name","","",40,N],[3,"dirent64","","",N,N],[12,"d_ino","","",41,N],[12,"d_off","","",41,N],[12,"d_reclen","","",41,N],[12,"d_type","","",41,N],[12,"d_name","","",41,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",42,N],[12,"rlim_max","","",42,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",43,N],[12,"gl_pathv","","",43,N],[12,"gl_offs","","",43,N],[12,"gl_flags","","",43,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",44,N],[12,"pw_passwd","","",44,N],[12,"pw_uid","","",44,N],[12,"pw_gid","","",44,N],[12,"pw_gecos","","",44,N],[12,"pw_dir","","",44,N],[12,"pw_shell","","",44,N],[3,"spwd","","",N,N],[12,"sp_namp","","",45,N],[12,"sp_pwdp","","",45,N],[12,"sp_lstchg","","",45,N],[12,"sp_min","","",45,N],[12,"sp_max","","",45,N],[12,"sp_warn","","",45,N],[12,"sp_inact","","",45,N],[12,"sp_expire","","",45,N],[12,"sp_flag","","",45,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",46,N],[12,"dqb_bsoftlimit","","",46,N],[12,"dqb_curspace","","",46,N],[12,"dqb_ihardlimit","","",46,N],[12,"dqb_isoftlimit","","",46,N],[12,"dqb_curinodes","","",46,N],[12,"dqb_btime","","",46,N],[12,"dqb_itime","","",46,N],[12,"dqb_valid","","",46,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",47,N],[12,"ssi_errno","","",47,N],[12,"ssi_code","","",47,N],[12,"ssi_pid","","",47,N],[12,"ssi_uid","","",47,N],[12,"ssi_fd","","",47,N],[12,"ssi_tid","","",47,N],[12,"ssi_band","","",47,N],[12,"ssi_overrun","","",47,N],[12,"ssi_trapno","","",47,N],[12,"ssi_status","","",47,N],[12,"ssi_int","","",47,N],[12,"ssi_ptr","","",47,N],[12,"ssi_utime","","",47,N],[12,"ssi_stime","","",47,N],[12,"ssi_addr","","",47,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",48,N],[12,"it_value","","",48,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",49,N],[12,"mq_maxmsg","","",49,N],[12,"mq_msgsize","","",49,N],[12,"mq_curmsgs","","",49,N],[3,"packet_mreq","","",N,N],[12,"mr_ifindex","","",50,N],[12,"mr_type","","",50,N],[12,"mr_alen","","",50,N],[12,"mr_address","","",50,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",51,N],[12,"if_name","","",51,N],[3,"msginfo","","",N,N],[12,"msgpool","","",52,N],[12,"msgmap","","",52,N],[12,"msgmax","","",52,N],[12,"msgmnb","","",52,N],[12,"msgmni","","",52,N],[12,"msgssz","","",52,N],[12,"msgtql","","",52,N],[12,"msgseg","","",52,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",53,N],[12,"msg_len","","",53,N],[3,"sembuf","","",N,N],[12,"sem_num","","",54,N],[12,"sem_op","","",54,N],[12,"sem_flg","","",54,N],[3,"input_event","","",N,N],[12,"time","","",55,N],[12,"type_","","",55,N],[12,"code","","",55,N],[12,"value","","",55,N],[3,"input_id","","",N,N],[12,"bustype","","",56,N],[12,"vendor","","",56,N],[12,"product","","",56,N],[12,"version","","",56,N],[3,"input_absinfo","","",N,N],[12,"value","","",57,N],[12,"minimum","","",57,N],[12,"maximum","","",57,N],[12,"fuzz","","",57,N],[12,"flat","","",57,N],[12,"resolution","","",57,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",58,N],[12,"len","","",58,N],[12,"index","","",58,N],[12,"keycode","","",58,N],[12,"scancode","","",58,N],[3,"input_mask","","",N,N],[12,"type_","","",59,N],[12,"codes_size","","",59,N],[12,"codes_ptr","","",59,N],[3,"ff_replay","","",N,N],[12,"length","","",60,N],[12,"delay","","",60,N],[3,"ff_trigger","","",N,N],[12,"button","","",61,N],[12,"interval","","",61,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",62,N],[12,"attack_level","","",62,N],[12,"fade_length","","",62,N],[12,"fade_level","","",62,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",63,N],[12,"envelope","","",63,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",64,N],[12,"end_level","","",64,N],[12,"envelope","","",64,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",65,N],[12,"left_saturation","","",65,N],[12,"right_coeff","","",65,N],[12,"left_coeff","","",65,N],[12,"deadband","","",65,N],[12,"center","","",65,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",66,N],[12,"period","","",66,N],[12,"magnitude","","",66,N],[12,"offset","","",66,N],[12,"phase","","",66,N],[12,"envelope","","",66,N],[12,"custom_len","","",66,N],[12,"custom_data","","",66,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",67,N],[12,"weak_magnitude","","",67,N],[3,"ff_effect","","",N,N],[12,"type_","","",68,N],[12,"id","","",68,N],[12,"direction","","",68,N],[12,"trigger","","",68,N],[12,"replay","","",68,N],[12,"u","","",68,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",69,N],[12,"dlpi_name","","",69,N],[12,"dlpi_phdr","","",69,N],[12,"dlpi_phnum","","",69,N],[12,"dlpi_adds","","",69,N],[12,"dlpi_subs","","",69,N],[12,"dlpi_tls_modid","","",69,N],[12,"dlpi_tls_data","","",69,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",70,N],[12,"p_offset","","",70,N],[12,"p_vaddr","","",70,N],[12,"p_paddr","","",70,N],[12,"p_filesz","","",70,N],[12,"p_memsz","","",70,N],[12,"p_flags","","",70,N],[12,"p_align","","",70,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",71,N],[12,"p_flags","","",71,N],[12,"p_offset","","",71,N],[12,"p_vaddr","","",71,N],[12,"p_paddr","","",71,N],[12,"p_filesz","","",71,N],[12,"p_memsz","","",71,N],[12,"p_align","","",71,N],[3,"ucred","","",N,N],[12,"pid","","",72,N],[12,"uid","","",72,N],[12,"gid","","",72,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",73,N],[12,"mnt_dir","","",73,N],[12,"mnt_type","","",73,N],[12,"mnt_opts","","",73,N],[12,"mnt_freq","","",73,N],[12,"mnt_passno","","",73,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",74,N],[12,"version","","",74,N],[12,"reserved","","",74,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",75,N],[12,"ipi6_ifindex","","",75,N],[3,"arpd_request","","",N,N],[12,"req","","",76,N],[12,"ip","","",76,N],[12,"dev","","",76,N],[12,"stamp","","",76,N],[12,"updated","","",76,N],[12,"ha","","",76,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",77,N],[12,"aio_lio_opcode","","",77,N],[12,"aio_reqprio","","",77,N],[12,"aio_buf","","",77,N],[12,"aio_nbytes","","",77,N],[12,"aio_sigevent","","",77,N],[12,"aio_offset","","",77,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",78,N],[12,"e_exit","","",78,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",79,N],[12,"tv_usec","","",79,N],[3,"utmpx","","",N,N],[12,"ut_type","","",80,N],[12,"ut_pid","","",80,N],[12,"ut_line","","",80,N],[12,"ut_id","","",80,N],[12,"ut_user","","",80,N],[12,"ut_host","","",80,N],[12,"ut_exit","","",80,N],[12,"ut_session","","",80,N],[12,"ut_tv","","",80,N],[12,"ut_addr_v6","","",80,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",81,N],[12,"sa_mask","","",81,N],[12,"sa_flags","","",81,N],[12,"sa_restorer","","",81,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",82,N],[12,"ss_flags","","",82,N],[12,"ss_size","","",82,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",83,N],[12,"si_errno","","",83,N],[12,"si_code","","",83,N],[12,"_pad","","",83,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",84,N],[12,"gl_pathv","","",84,N],[12,"gl_offs","","",84,N],[12,"gl_flags","","",84,N],[3,"statfs","","",N,N],[12,"f_type","","",85,N],[12,"f_bsize","","",85,N],[12,"f_blocks","","",85,N],[12,"f_bfree","","",85,N],[12,"f_bavail","","",85,N],[12,"f_files","","",85,N],[12,"f_ffree","","",85,N],[12,"f_fsid","","",85,N],[12,"f_namelen","","",85,N],[12,"f_frsize","","",85,N],[3,"msghdr","","",N,N],[12,"msg_name","","",86,N],[12,"msg_namelen","","",86,N],[12,"msg_iov","","",86,N],[12,"msg_iovlen","","",86,N],[12,"msg_control","","",86,N],[12,"msg_controllen","","",86,N],[12,"msg_flags","","",86,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",87,N],[12,"cmsg_level","","",87,N],[12,"cmsg_type","","",87,N],[3,"termios","","",N,N],[12,"c_iflag","","",88,N],[12,"c_oflag","","",88,N],[12,"c_cflag","","",88,N],[12,"c_lflag","","",88,N],[12,"c_line","","",88,N],[12,"c_cc","","",88,N],[12,"c_ispeed","","",88,N],[12,"c_ospeed","","",88,N],[3,"flock","","",N,N],[12,"l_type","","",89,N],[12,"l_whence","","",89,N],[12,"l_start","","",89,N],[12,"l_len","","",89,N],[12,"l_pid","","",89,N],[3,"sem_t","","",N,N],[3,"mallinfo","","",N,N],[12,"arena","","",90,N],[12,"ordblks","","",90,N],[12,"smblks","","",90,N],[12,"hblks","","",90,N],[12,"hblkhd","","",90,N],[12,"usmblks","","",90,N],[12,"fsmblks","","",90,N],[12,"uordblks","","",90,N],[12,"fordblks","","",90,N],[12,"keepcost","","",90,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",91,N],[12,"nlmsg_type","","",91,N],[12,"nlmsg_flags","","",91,N],[12,"nlmsg_seq","","",91,N],[12,"nlmsg_pid","","",91,N],[3,"nlmsgerr","","",N,N],[12,"error","","",92,N],[12,"msg","","",92,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",93,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",94,N],[12,"nm_block_nr","","",94,N],[12,"nm_frame_size","","",94,N],[12,"nm_frame_nr","","",94,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",95,N],[12,"nm_len","","",95,N],[12,"nm_group","","",95,N],[12,"nm_pid","","",95,N],[12,"nm_uid","","",95,N],[12,"nm_gid","","",95,N],[3,"nlattr","","",N,N],[12,"nla_len","","",96,N],[12,"nla_type","","",96,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",97,N],[12,"rt_dst","","",97,N],[12,"rt_gateway","","",97,N],[12,"rt_genmask","","",97,N],[12,"rt_flags","","",97,N],[12,"rt_pad2","","",97,N],[12,"rt_pad3","","",97,N],[12,"rt_tos","","",97,N],[12,"rt_class","","",97,N],[12,"rt_pad4","","",97,N],[12,"rt_metric","","",97,N],[12,"rt_dev","","",97,N],[12,"rt_mtu","","",97,N],[12,"rt_window","","",97,N],[12,"rt_irtt","","",97,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",98,N],[12,"loads","","",98,N],[12,"totalram","","",98,N],[12,"freeram","","",98,N],[12,"sharedram","","",98,N],[12,"bufferram","","",98,N],[12,"totalswap","","",98,N],[12,"freeswap","","",98,N],[12,"procs","","",98,N],[12,"pad","","",98,N],[12,"totalhigh","","",98,N],[12,"freehigh","","",98,N],[12,"mem_unit","","",98,N],[12,"_f","","",98,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",99,N],[12,"msg_stime","","",99,N],[12,"msg_rtime","","",99,N],[12,"msg_ctime","","",99,N],[12,"msg_qnum","","",99,N],[12,"msg_qbytes","","",99,N],[12,"msg_lspid","","",99,N],[12,"msg_lrpid","","",99,N],[3,"stat","","",N,N],[12,"st_dev","","",100,N],[12,"st_ino","","",100,N],[12,"st_nlink","","",100,N],[12,"st_mode","","",100,N],[12,"st_uid","","",100,N],[12,"st_gid","","",100,N],[12,"st_rdev","","",100,N],[12,"st_size","","",100,N],[12,"st_blksize","","",100,N],[12,"st_blocks","","",100,N],[12,"st_atime","","",100,N],[12,"st_atime_nsec","","",100,N],[12,"st_mtime","","",100,N],[12,"st_mtime_nsec","","",100,N],[12,"st_ctime","","",100,N],[12,"st_ctime_nsec","","",100,N],[3,"stat64","","",N,N],[12,"st_dev","","",101,N],[12,"st_ino","","",101,N],[12,"st_nlink","","",101,N],[12,"st_mode","","",101,N],[12,"st_uid","","",101,N],[12,"st_gid","","",101,N],[12,"st_rdev","","",101,N],[12,"st_size","","",101,N],[12,"st_blksize","","",101,N],[12,"st_blocks","","",101,N],[12,"st_atime","","",101,N],[12,"st_atime_nsec","","",101,N],[12,"st_mtime","","",101,N],[12,"st_mtime_nsec","","",101,N],[12,"st_ctime","","",101,N],[12,"st_ctime_nsec","","",101,N],[3,"statfs64","","",N,N],[12,"f_type","","",102,N],[12,"f_bsize","","",102,N],[12,"f_blocks","","",102,N],[12,"f_bfree","","",102,N],[12,"f_bavail","","",102,N],[12,"f_files","","",102,N],[12,"f_ffree","","",102,N],[12,"f_fsid","","",102,N],[12,"f_namelen","","",102,N],[12,"f_frsize","","",102,N],[12,"f_flags","","",102,N],[12,"f_spare","","",102,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",103,N],[12,"f_frsize","","",103,N],[12,"f_blocks","","",103,N],[12,"f_bfree","","",103,N],[12,"f_bavail","","",103,N],[12,"f_files","","",103,N],[12,"f_ffree","","",103,N],[12,"f_favail","","",103,N],[12,"f_fsid","","",103,N],[12,"f_flag","","",103,N],[12,"f_namemax","","",103,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",104,N],[12,"exponent","","",104,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",105,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",106,N],[12,"swd","","",106,N],[12,"ftw","","",106,N],[12,"fop","","",106,N],[12,"rip","","",106,N],[12,"rdp","","",106,N],[12,"mxcsr","","",106,N],[12,"mxcr_mask","","",106,N],[12,"_st","","",106,N],[12,"_xmm","","",106,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",107,N],[12,"swd","","",107,N],[12,"ftw","","",107,N],[12,"fop","","",107,N],[12,"rip","","",107,N],[12,"rdp","","",107,N],[12,"mxcsr","","",107,N],[12,"mxcr_mask","","",107,N],[12,"st_space","","",107,N],[12,"xmm_space","","",107,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",108,N],[12,"r14","","",108,N],[12,"r13","","",108,N],[12,"r12","","",108,N],[12,"rbp","","",108,N],[12,"rbx","","",108,N],[12,"r11","","",108,N],[12,"r10","","",108,N],[12,"r9","","",108,N],[12,"r8","","",108,N],[12,"rax","","",108,N],[12,"rcx","","",108,N],[12,"rdx","","",108,N],[12,"rsi","","",108,N],[12,"rdi","","",108,N],[12,"orig_rax","","",108,N],[12,"rip","","",108,N],[12,"cs","","",108,N],[12,"eflags","","",108,N],[12,"rsp","","",108,N],[12,"ss","","",108,N],[12,"fs_base","","",108,N],[12,"gs_base","","",108,N],[12,"ds","","",108,N],[12,"es","","",108,N],[12,"fs","","",108,N],[12,"gs","","",108,N],[3,"user","","",N,N],[12,"regs","","",109,N],[12,"u_fpvalid","","",109,N],[12,"i387","","",109,N],[12,"u_tsize","","",109,N],[12,"u_dsize","","",109,N],[12,"u_ssize","","",109,N],[12,"start_code","","",109,N],[12,"start_stack","","",109,N],[12,"signal","","",109,N],[12,"u_ar0","","",109,N],[12,"u_fpstate","","",109,N],[12,"magic","","",109,N],[12,"u_comm","","",109,N],[12,"u_debugreg","","",109,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",110,N],[12,"fpregs","","",110,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",111,N],[12,"uc_link","","",111,N],[12,"uc_stack","","",111,N],[12,"uc_mcontext","","",111,N],[12,"uc_sigmask","","",111,N],[3,"ipc_perm","","",N,N],[12,"__key","","",112,N],[12,"uid","","",112,N],[12,"gid","","",112,N],[12,"cuid","","",112,N],[12,"cgid","","",112,N],[12,"mode","","",112,N],[12,"__seq","","",112,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",113,N],[12,"shm_segsz","","",113,N],[12,"shm_atime","","",113,N],[12,"shm_dtime","","",113,N],[12,"shm_ctime","","",113,N],[12,"shm_cpid","","",113,N],[12,"shm_lpid","","",113,N],[12,"shm_nattch","","",113,N],[3,"termios2","","",N,N],[12,"c_iflag","","",114,N],[12,"c_oflag","","",114,N],[12,"c_cflag","","",114,N],[12,"c_lflag","","",114,N],[12,"c_line","","",114,N],[12,"c_cc","","",114,N],[12,"c_ispeed","","",114,N],[12,"c_ospeed","","",114,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",115,N],[12,"f_frsize","","",115,N],[12,"f_blocks","","",115,N],[12,"f_bfree","","",115,N],[12,"f_bavail","","",115,N],[12,"f_files","","",115,N],[12,"f_ffree","","",115,N],[12,"f_favail","","",115,N],[12,"f_fsid","","",115,N],[12,"f_flag","","",115,N],[12,"f_namemax","","",115,N],[4,"c_void","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"posix_fallocate","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[11,"clone","","",100,[[["self"]],["stat"]]],[11,"clone","","",101,[[["self"]],["stat64"]]],[11,"clone","","",102,[[["self"]],["statfs64"]]],[11,"clone","","",103,[[["self"]],["statvfs64"]]],[11,"clone","","",116,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",104,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",105,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",106,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",107,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",108,[[["self"]],["user_regs_struct"]]],[11,"clone","","",109,[[["self"]],["user"]]],[11,"clone","","",110,[[["self"]],["mcontext_t"]]],[11,"clone","","",111,[[["self"]],["ucontext_t"]]],[11,"clone","","",112,[[["self"]],["ipc_perm"]]],[11,"clone","","",113,[[["self"]],["shmid_ds"]]],[11,"clone","","",114,[[["self"]],["termios2"]]],[11,"clone","","",115,[[["self"]],["statvfs"]]],[11,"clone","","",117,[[["self"]],["sigset_t"]]],[11,"clone","","",98,[[["self"]],["sysinfo"]]],[11,"clone","","",99,[[["self"]],["msqid_ds"]]],[11,"clone","","",77,[[["self"]],["aiocb"]]],[11,"clone","","",78,[[["self"]],["__exit_status"]]],[11,"clone","","",79,[[["self"]],["__timeval"]]],[11,"clone","","",80,[[["self"]],["utmpx"]]],[11,"clone","","",81,[[["self"]],["sigaction"]]],[11,"clone","","",82,[[["self"]],["stack_t"]]],[11,"clone","","",83,[[["self"]],["siginfo_t"]]],[11,"clone","","",84,[[["self"]],["glob64_t"]]],[11,"clone","","",85,[[["self"]],["statfs"]]],[11,"clone","","",86,[[["self"]],["msghdr"]]],[11,"clone","","",87,[[["self"]],["cmsghdr"]]],[11,"clone","","",88,[[["self"]],["termios"]]],[11,"clone","","",89,[[["self"]],["flock"]]],[11,"clone","","",118,[[["self"]],["sem_t"]]],[11,"clone","","",90,[[["self"]],["mallinfo"]]],[11,"clone","","",91,[[["self"]],["nlmsghdr"]]],[11,"clone","","",92,[[["self"]],["nlmsgerr"]]],[11,"clone","","",93,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",94,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",95,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",96,[[["self"]],["nlattr"]]],[11,"clone","","",97,[[["self"]],["rtentry"]]],[11,"clone","","",40,[[["self"]],["dirent"]]],[11,"clone","","",41,[[["self"]],["dirent64"]]],[11,"clone","","",42,[[["self"]],["rlimit64"]]],[11,"clone","","",43,[[["self"]],["glob_t"]]],[11,"clone","","",119,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",120,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",121,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",122,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",123,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",124,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",44,[[["self"]],["passwd"]]],[11,"clone","","",45,[[["self"]],["spwd"]]],[11,"clone","","",46,[[["self"]],["dqblk"]]],[11,"clone","","",47,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",48,[[["self"]],["itimerspec"]]],[11,"clone","","",125,[[["self"]],["fsid_t"]]],[11,"clone","","",49,[[["self"]],["mq_attr"]]],[11,"clone","","",50,[[["self"]],["packet_mreq"]]],[11,"clone","","",126,[[["self"]],["cpu_set_t"]]],[11,"clone","","",51,[[["self"]],["if_nameindex"]]],[11,"clone","","",52,[[["self"]],["msginfo"]]],[11,"clone","","",53,[[["self"]],["mmsghdr"]]],[11,"clone","","",54,[[["self"]],["sembuf"]]],[11,"clone","","",55,[[["self"]],["input_event"]]],[11,"clone","","",56,[[["self"]],["input_id"]]],[11,"clone","","",57,[[["self"]],["input_absinfo"]]],[11,"clone","","",58,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",59,[[["self"]],["input_mask"]]],[11,"clone","","",60,[[["self"]],["ff_replay"]]],[11,"clone","","",61,[[["self"]],["ff_trigger"]]],[11,"clone","","",62,[[["self"]],["ff_envelope"]]],[11,"clone","","",63,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",64,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",65,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",66,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",67,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",68,[[["self"]],["ff_effect"]]],[11,"clone","","",69,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",70,[[["self"]],["elf32_phdr"]]],[11,"clone","","",71,[[["self"]],["elf64_phdr"]]],[11,"clone","","",72,[[["self"]],["ucred"]]],[11,"clone","","",73,[[["self"]],["mntent"]]],[11,"clone","","",127,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",128,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",74,[[["self"]],["genlmsghdr"]]],[11,"clone","","",75,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",76,[[["self"]],["arpd_request"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["sockaddr_un"]]],[11,"clone","","",24,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",25,[[["self"]],["addrinfo"]]],[11,"clone","","",26,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",27,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",129,[[["self"]],["fd_set"]]],[11,"clone","","",28,[[["self"]],["tm"]]],[11,"clone","","",29,[[["self"]],["sched_param"]]],[11,"clone","","",30,[[["self"]],["dl_info"]]],[11,"clone","","",31,[[["self"]],["epoll_event"]]],[11,"clone","","",32,[[["self"]],["utsname"]]],[11,"clone","","",33,[[["self"]],["lconv"]]],[11,"clone","","",34,[[["self"]],["sigevent"]]],[11,"clone","","",35,[[["self"]],["in_pktinfo"]]],[11,"clone","","",36,[[["self"]],["ifaddrs"]]],[11,"clone","","",130,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",37,[[["self"]],["arpreq"]]],[11,"clone","","",38,[[["self"]],["arpreq_old"]]],[11,"clone","","",39,[[["self"]],["arphdr"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ARPOP_RREQUEST","","",N,N],[17,"ARPOP_RREPLY","","",N,N],[17,"ARPOP_InREQUEST","","",N,N],[17,"ARPOP_InREPLY","","",N,N],[17,"ARPOP_NAK","","",N,N],[17,"ATF_NETMASK","","",N,N],[17,"ATF_DONTPUB","","",N,N],[17,"ARPHRD_NETROM","","",N,N],[17,"ARPHRD_ETHER","","",N,N],[17,"ARPHRD_EETHER","","",N,N],[17,"ARPHRD_AX25","","",N,N],[17,"ARPHRD_PRONET","","",N,N],[17,"ARPHRD_CHAOS","","",N,N],[17,"ARPHRD_IEEE802","","",N,N],[17,"ARPHRD_ARCNET","","",N,N],[17,"ARPHRD_APPLETLK","","",N,N],[17,"ARPHRD_DLCI","","",N,N],[17,"ARPHRD_ATM","","",N,N],[17,"ARPHRD_METRICOM","","",N,N],[17,"ARPHRD_IEEE1394","","",N,N],[17,"ARPHRD_EUI64","","",N,N],[17,"ARPHRD_INFINIBAND","","",N,N],[17,"ARPHRD_SLIP","","",N,N],[17,"ARPHRD_CSLIP","","",N,N],[17,"ARPHRD_SLIP6","","",N,N],[17,"ARPHRD_CSLIP6","","",N,N],[17,"ARPHRD_RSRVD","","",N,N],[17,"ARPHRD_ADAPT","","",N,N],[17,"ARPHRD_ROSE","","",N,N],[17,"ARPHRD_X25","","",N,N],[17,"ARPHRD_HWX25","","",N,N],[17,"ARPHRD_PPP","","",N,N],[17,"ARPHRD_CISCO","","",N,N],[17,"ARPHRD_HDLC","","",N,N],[17,"ARPHRD_LAPB","","",N,N],[17,"ARPHRD_DDCMP","","",N,N],[17,"ARPHRD_RAWHDLC","","",N,N],[17,"ARPHRD_TUNNEL","","",N,N],[17,"ARPHRD_TUNNEL6","","",N,N],[17,"ARPHRD_FRAD","","",N,N],[17,"ARPHRD_SKIP","","",N,N],[17,"ARPHRD_LOOPBACK","","",N,N],[17,"ARPHRD_LOCALTLK","","",N,N],[17,"ARPHRD_FDDI","","",N,N],[17,"ARPHRD_BIF","","",N,N],[17,"ARPHRD_SIT","","",N,N],[17,"ARPHRD_IPDDP","","",N,N],[17,"ARPHRD_IPGRE","","",N,N],[17,"ARPHRD_PIMREG","","",N,N],[17,"ARPHRD_HIPPI","","",N,N],[17,"ARPHRD_ASH","","",N,N],[17,"ARPHRD_ECONET","","",N,N],[17,"ARPHRD_IRDA","","",N,N],[17,"ARPHRD_FCPP","","",N,N],[17,"ARPHRD_FCAL","","",N,N],[17,"ARPHRD_FCPL","","",N,N],[17,"ARPHRD_FCFABRIC","","",N,N],[17,"ARPHRD_IEEE802_TR","","",N,N],[17,"ARPHRD_IEEE80211","","",N,N],[17,"ARPHRD_IEEE80211_PRISM","","",N,N],[17,"ARPHRD_IEEE80211_RADIOTAP","","",N,N],[17,"ARPHRD_IEEE802154","","",N,N],[17,"ARPHRD_VOID","","",N,N],[17,"ARPHRD_NONE","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"PACKET_ADD_MEMBERSHIP","","",N,N],[17,"PACKET_DROP_MEMBERSHIP","","",N,N],[17,"PACKET_MR_MULTICAST","","",N,N],[17,"PACKET_MR_PROMISC","","",N,N],[17,"PACKET_MR_ALLMULTI","","",N,N],[17,"PACKET_MR_UNICAST","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"MAX_ADDR_LEN","","",N,N],[17,"ARPD_UPDATE","","",N,N],[17,"ARPD_LOOKUP","","",N,N],[17,"ARPD_FLUSH","","",N,N],[17,"ATF_MAGIC","","",N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_ALG","","",N,N],[17,"SOL_NFC","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N],[11,"into","","",131,[[["self"]],["u"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"c_void"],[4,"FILE"],[4,"fpos_t"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,"RecordBuilder","","Builder for `Record`.",N,N],[3,"Metadata","","Metadata about a log message.",N,N],[3,"MetadataBuilder","","Builder for `Metadata`.",N,N],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has already been called.",N,N],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't match any of the log levels.",N,N],[4,"Level","","An enum representing the available verbosity levels of the logger.",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LevelFilter","","An enum representing the available verbosity level filters of the logger.",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"set_max_level","","Sets the global maximum log level.",N,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",N,[[],["levelfilter"]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",N,[[["log"]],["result",["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",N,N],[8,"Log","","A trait encapsulating the operations required of a logger.",N,N],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"clone","","",0,[[["self"]],["level"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"from_str","","",0,[[["str"]],["result",["level"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"from_str","","",1,[[["str"]],["result",["levelfilter"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],["option",["level"]]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],["option",["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],["option",["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],["option",["u32"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with `MetadataBuilder`.",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"hash","","",5,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"hash","","",6,N],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",N,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]]],"paths":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["openssl"]={"doc":"","items":[[5,"init","openssl","",N,N],[0,"aes","","Low level AES IGE functionality",N,N],[3,"KeyError","openssl::aes","Provides Error handling for parsing keys.",N,N],[3,"AesKey","","The key used to encrypt or decrypt cipher blocks.",N,N],[5,"aes_ige","","Performs AES IGE encryption or decryption",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new_encrypt","","Prepares a key for encryption.",1,N],[11,"new_decrypt","","Prepares a key for decryption.",1,N],[0,"asn1","openssl","Defines the format of certificiates",N,N],[3,"Asn1GeneralizedTime","openssl::asn1","Non-UTC representation of time",N,N],[3,"Asn1GeneralizedTimeRef","","Reference to a [`Asn1GeneralizedTime`]",N,N],[3,"Asn1Time","","Time storage and comparison",N,N],[3,"Asn1TimeRef","","Reference to an [`Asn1Time`]",N,N],[3,"Asn1String","","Primary ASN.1 type used by OpenSSL",N,N],[3,"Asn1StringRef","","Reference to [`Asn1String`]",N,N],[3,"Asn1Integer","","Numeric representation",N,N],[3,"Asn1IntegerRef","","Reference to [`Asn1Integer`]",N,N],[3,"Asn1BitString","","Sequence of bytes",N,N],[3,"Asn1BitStringRef","","Reference to [`Asn1BitString`]",N,N],[3,"Asn1Object","","Object Identifier",N,N],[3,"Asn1ObjectRef","","Reference to [`Asn1Object`]",N,N],[11,"from_ptr","","",2,N],[11,"as_ptr","","",2,N],[11,"drop","","",2,[[["self"]]]],[11,"deref","","",2,[[["self"]],["asn1generalizedtimeref"]]],[11,"deref_mut","","",2,[[["self"]],["asn1generalizedtimeref"]]],[11,"borrow","","",2,[[["self"]],["asn1generalizedtimeref"]]],[11,"as_ref","","",2,[[["self"]],["asn1generalizedtimeref"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"from_ptr","","",4,N],[11,"as_ptr","","",4,N],[11,"drop","","",4,[[["self"]]]],[11,"deref","","",4,[[["self"]],["asn1timeref"]]],[11,"deref_mut","","",4,[[["self"]],["asn1timeref"]]],[11,"borrow","","",4,[[["self"]],["asn1timeref"]]],[11,"as_ref","","",4,[[["self"]],["asn1timeref"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"days_from_now","","Creates a new time on specified interval in days from now",4,[[["u32"]],["result",["asn1time","errorstack"]]]],[11,"from_ptr","","",6,N],[11,"as_ptr","","",6,N],[11,"drop","","",6,[[["self"]]]],[11,"deref","","",6,[[["self"]],["asn1stringref"]]],[11,"deref_mut","","",6,[[["self"]],["asn1stringref"]]],[11,"borrow","","",6,[[["self"]],["asn1stringref"]]],[11,"as_ref","","",6,[[["self"]],["asn1stringref"]]],[11,"as_utf8","","Converts the ASN.1 underlying format to UTF8",7,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"as_slice","","Return the string as an array of bytes",7,N],[11,"len","","Return the length of the Asn1String (number of bytes)",7,[[["self"]],["usize"]]],[11,"from_ptr","","",8,N],[11,"as_ptr","","",8,N],[11,"drop","","",8,[[["self"]]]],[11,"deref","","",8,[[["self"]],["asn1integerref"]]],[11,"deref_mut","","",8,[[["self"]],["asn1integerref"]]],[11,"borrow","","",8,[[["self"]],["asn1integerref"]]],[11,"as_ref","","",8,[[["self"]],["asn1integerref"]]],[11,"get","","",9,[[["self"]],["i64"]]],[11,"to_bn","","Converts the integer to a `BigNum`.",9,[[["self"]],["result",["bignum","errorstack"]]]],[11,"set","","Sets the ASN.1 value to the value of a signed 32-bit integer, for larger numbers see [`bn`].",9,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"from_ptr","","",10,N],[11,"as_ptr","","",10,N],[11,"drop","","",10,[[["self"]]]],[11,"deref","","",10,[[["self"]],["asn1bitstringref"]]],[11,"deref_mut","","",10,[[["self"]],["asn1bitstringref"]]],[11,"borrow","","",10,[[["self"]],["asn1bitstringref"]]],[11,"as_ref","","",10,[[["self"]],["asn1bitstringref"]]],[11,"as_slice","","Returns the Asn1BitString as a slice",11,N],[11,"len","","Length of Asn1BitString in number of bytes.",11,[[["self"]],["usize"]]],[11,"from_ptr","","",12,N],[11,"as_ptr","","",12,N],[11,"drop","","",12,[[["self"]]]],[11,"deref","","",12,[[["self"]],["asn1objectref"]]],[11,"deref_mut","","",12,[[["self"]],["asn1objectref"]]],[11,"borrow","","",12,[[["self"]],["asn1objectref"]]],[11,"as_ref","","",12,[[["self"]],["asn1objectref"]]],[11,"nid","","Returns the NID associated with this OID.",13,[[["self"]],["nid"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[0,"bn","openssl","BigNum implementation",N,N],[3,"MsbOption","openssl::bn","Options for the most significant bits of a randomly generated `BigNum`.",N,N],[3,"BigNumContext","","Temporary storage for BigNums on the secure heap",N,N],[3,"BigNumContextRef","","Reference to [`BigNumContext`]",N,N],[3,"BigNum","","Dynamically sized large number impelementation",N,N],[3,"BigNumRef","","Reference to a [`BigNum`]",N,N],[18,"MAYBE_ZERO","","The most significant bit of the number may be 0.",14,N],[18,"ONE","","The most significant bit of the number must be 1.",14,N],[18,"TWO_ONES","","The most significant two bits of the number must be 1.",14,N],[11,"from_ptr","","",15,N],[11,"as_ptr","","",15,N],[11,"drop","","",15,[[["self"]]]],[11,"deref","","",15,[[["self"]],["bignumcontextref"]]],[11,"deref_mut","","",15,[[["self"]],["bignumcontextref"]]],[11,"borrow","","",15,[[["self"]],["bignumcontextref"]]],[11,"as_ref","","",15,[[["self"]],["bignumcontextref"]]],[11,"new","","Returns a new `BigNumContext`.",15,[[],["result",["bignumcontext","errorstack"]]]],[11,"from_ptr","","",16,N],[11,"as_ptr","","",16,N],[11,"drop","","",16,[[["self"]]]],[11,"deref","","",16,[[["self"]],["bignumref"]]],[11,"deref_mut","","",16,[[["self"]],["bignumref"]]],[11,"borrow","","",16,[[["self"]],["bignumref"]]],[11,"as_ref","","",16,[[["self"]],["bignumref"]]],[11,"clear","","Erases the memory used by this `BigNum`, resetting its value to 0.",17,[[["self"]]]],[11,"add_word","","Adds a `u32` to `self`.",17,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"sub_word","","Subtracts a `u32` from `self`.",17,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"mul_word","","Multiplies a `u32` by `self`.",17,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"div_word","","Divides `self` by a `u32`, returning the remainder.",17,[[["self"],["u32"]],["result",["u64","errorstack"]]]],[11,"mod_word","","Returns the result of `self` modulo `w`.",17,[[["self"],["u32"]],["result",["u64","errorstack"]]]],[11,"rand_range","","Places a cryptographically-secure pseudo-random nonnegative number less than `self` in `rnd`.",17,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"pseudo_rand_range","","The cryptographically weak counterpart to `rand_in_range`.",17,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 << n)`.",17,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &= ~(1 << n)`.",17,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",17,[[["self"],["i32"]],["bool"]]],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",17,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"lshift1","","Places `a << 1` in `self`.  Equivalent to `self * 2`.",17,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"rshift1","","Places `a >> 1` in `self`. Equivalent to `self / 2`.",17,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"checked_add","","Places `a + b` in `self`.  [`core::ops::Add`] is also implemented for `BigNumRef`.",17,[[["self"],["bignumref"],["bignumref"]],["result",["errorstack"]]]],[11,"checked_sub","","Places `a - b` in `self`. [`core::ops::Sub`] is also implemented for `BigNumRef`.",17,[[["self"],["bignumref"],["bignumref"]],["result",["errorstack"]]]],[11,"lshift","","Places `a << n` in `self`.  Equivalent to `a * 2 ^ n`.",17,[[["self"],["bignumref"],["i32"]],["result",["errorstack"]]]],[11,"rshift","","Places `a >> n` in `self`. Equivalent to `a / 2 ^ n`.",17,[[["self"],["bignumref"],["i32"]],["result",["errorstack"]]]],[11,"to_owned","","Creates a new BigNum with the same value.",17,[[["self"]],["result",["bignum","errorstack"]]]],[11,"set_negative","","Sets the sign of `self`.  Pass true to set `self` to a negative.  False sets `self` positive.",17,[[["self"],["bool"]]]],[11,"ucmp","","Compare the absolute values of `self` and `oth`.",17,[[["self"],["bignumref"]],["ordering"]]],[11,"is_negative","","Returns `true` if `self` is negative.",17,[[["self"]],["bool"]]],[11,"num_bits","","Returns the number of significant bits in `self`.",17,[[["self"]],["i32"]]],[11,"num_bytes","","Returns the size of `self` in bytes. Implemented natively.",17,[[["self"]],["i32"]]],[11,"rand","","Generates a cryptographically strong pseudo-random `BigNum`, placing it in `self`.",17,[[["self"],["i32"],["msboption"],["bool"]],["result",["errorstack"]]]],[11,"pseudo_rand","","The cryptographically weak counterpart to `rand`.  Not suitable for key generation.",17,[[["self"],["i32"],["msboption"],["bool"]],["result",["errorstack"]]]],[11,"generate_prime","","Generates a prime number, placing it in `self`.",17,[[["self"],["i32"],["bool"],["option",["bignumref"]],["option",["bignumref"]]],["result",["errorstack"]]]],[11,"checked_mul","","Places the result of `a * b` in `self`. [`core::ops::Mul`] is also implemented for `BigNumRef`.",17,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"checked_div","","Places the result of `a / b` in `self`. The remainder is discarded. [`core::ops::Div`] is also implemented for `BigNumRef`.",17,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"checked_rem","","Places the result of `a % b` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"div_rem","","Places the result of `a / b` in `self` and `a % b` in `rem`.",17,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"sqr","","Places the result of `a²` in `self`.",17,[[["self"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"nnmod","","Places the result of `a mod m` in `self`.  As opposed to `div_rem` the result is non-negative.",17,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_add","","Places the result of `(a + b) mod m` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_sub","","Places the result of `(a - b) mod m` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_mul","","Places the result of `(a * b) mod m` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_sqr","","Places the result of `a² mod m` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"exp","","Places the result of `a^p` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_exp","","Places the result of `a^p mod m` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_inverse","","Places the inverse of `a` modulo `n` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"gcd","","Places the greatest common denominator of `a` and `b` in `self`.",17,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"is_prime","","Checks whether `self` is prime.",17,[[["self"],["i32"],["bignumcontextref"]],["result",["bool","errorstack"]]]],[11,"is_prime_fasttest","","Checks whether `self` is prime with optional trial division.",17,[[["self"],["i32"],["bignumcontextref"],["bool"]],["result",["bool","errorstack"]]]],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",17,[[["self"]],["vec",["u8"]]]],[11,"to_dec_str","","Returns a decimal string representation of `self`.",17,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",17,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"to_asn1_integer","","Returns an `Asn1Integer` containing the value of `self`.",17,[[["self"]],["result",["asn1integer","errorstack"]]]],[11,"new","","Creates a new `BigNum` with the value 0.",16,[[],["result",["bignum","errorstack"]]]],[11,"from_u32","","Creates a new `BigNum` with the given value.",16,[[["u32"]],["result",["bignum","errorstack"]]]],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",16,[[["str"]],["result",["bignum","errorstack"]]]],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",16,[[["str"]],["result",["bignum","errorstack"]]]],[11,"get_rfc2409_prime_768","","Returns a constant used in IKE as defined in [`RFC 2409`].  This prime number is in the order of magnitude of `2 ^ 768`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled Oakley group id 1.",16,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc2409_prime_1024","","Returns a constant used in IKE as defined in [`RFC 2409`].  This prime number is in the order of magnitude of `2 ^ 1024`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled Oakly group 2.",16,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_1536","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 1536`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 5.",16,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_2048","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 2048`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 14.",16,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_3072","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 3072`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 15.",16,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_4096","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 4096`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 16.",16,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_6144","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 6144`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 17.",16,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_8192","","Returns a constant used in IKE as defined in [`RFC 3526`].  The prime is in the order of magnitude of `2 ^ 8192`.  This number is used during calculated key exchanges such as Diffie-Hellman.  This number is labeled MODP group 18.",16,[[],["result",["bignum","errorstack"]]]],[11,"from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",16,N],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"eq","","",17,[[["self"],["bignumref"]],["bool"]]],[11,"eq","","",17,[[["self"],["bignum"]],["bool"]]],[11,"eq","","",16,[[["self"],["bignum"]],["bool"]]],[11,"eq","","",16,[[["self"],["bignumref"]],["bool"]]],[11,"partial_cmp","","",17,[[["self"],["bignumref"]],["option",["ordering"]]]],[11,"partial_cmp","","",17,[[["self"],["bignum"]],["option",["ordering"]]]],[11,"cmp","","",17,[[["self"],["bignumref"]],["ordering"]]],[11,"partial_cmp","","",16,[[["self"],["bignum"]],["option",["ordering"]]]],[11,"partial_cmp","","",16,[[["self"],["bignumref"]],["option",["ordering"]]]],[11,"cmp","","",16,[[["self"],["bignum"]],["ordering"]]],[11,"neg","","",16,[[["self"]],["bignum"]]],[0,"cms","openssl","SMIME implementation using CMS",N,N],[3,"CMSOptions","openssl::cms","",N,N],[3,"CmsContentInfo","","High level CMS wrapper",N,N],[3,"CmsContentInfoRef","","Reference to [`CMSContentInfo`]",N,N],[11,"eq","","",18,[[["self"],["cmsoptions"]],["bool"]]],[11,"ne","","",18,[[["self"],["cmsoptions"]],["bool"]]],[11,"clone","","",18,[[["self"]],["cmsoptions"]]],[11,"partial_cmp","","",18,[[["self"],["cmsoptions"]],["option",["ordering"]]]],[11,"lt","","",18,[[["self"],["cmsoptions"]],["bool"]]],[11,"le","","",18,[[["self"],["cmsoptions"]],["bool"]]],[11,"gt","","",18,[[["self"],["cmsoptions"]],["bool"]]],[11,"ge","","",18,[[["self"],["cmsoptions"]],["bool"]]],[11,"cmp","","",18,[[["self"],["cmsoptions"]],["ordering"]]],[11,"hash","","",18,N],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[18,"TEXT","","",18,N],[18,"CMS_NOCERTS","","",18,N],[18,"NO_CONTENT_VERIFY","","",18,N],[18,"NO_ATTR_VERIFY","","",18,N],[18,"NOSIGS","","",18,N],[18,"NOINTERN","","",18,N],[18,"NO_SIGNER_CERT_VERIFY","","",18,N],[18,"NOVERIFY","","",18,N],[18,"DETACHED","","",18,N],[18,"BINARY","","",18,N],[18,"NOATTR","","",18,N],[18,"NOSMIMECAP","","",18,N],[18,"NOOLDMIMETYPE","","",18,N],[18,"CRLFEOL","","",18,N],[18,"STREAM","","",18,N],[18,"NOCRL","","",18,N],[18,"PARTIAL","","",18,N],[18,"REUSE_DIGEST","","",18,N],[18,"USE_KEYID","","",18,N],[18,"DEBUG_DECRYPT","","",18,N],[11,"empty","","Returns an empty set of flags.",18,[[],["cmsoptions"]]],[11,"all","","Returns the set containing all flags.",18,[[],["cmsoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",18,[[["c_uint"]],["option",["cmsoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",18,[[["c_uint"]],["cmsoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,[[["self"],["cmsoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,[[["self"],["cmsoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["self"],["cmsoptions"]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["self"],["cmsoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["self"],["cmsoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",18,[[["self"],["cmsoptions"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["self"],["cmsoptions"]],["cmsoptions"]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["self"],["cmsoptions"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,[[["self"],["cmsoptions"]],["cmsoptions"]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["self"],["cmsoptions"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["self"],["cmsoptions"]],["cmsoptions"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["self"],["cmsoptions"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["self"],["cmsoptions"]],["cmsoptions"]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["self"],["cmsoptions"]]]],[11,"not","","Returns the complement of this set of flags.",18,[[["self"]],["cmsoptions"]]],[11,"extend","","",18,[[["self"],["t"]]]],[11,"from_iter","","",18,[[["t"]],["cmsoptions"]]],[11,"from_ptr","","",19,N],[11,"as_ptr","","",19,N],[11,"drop","","",19,[[["self"]]]],[11,"deref","","",19,[[["self"]],["cmscontentinforef"]]],[11,"deref_mut","","",19,[[["self"]],["cmscontentinforef"]]],[11,"borrow","","",19,[[["self"]],["cmscontentinforef"]]],[11,"as_ref","","",19,[[["self"]],["cmscontentinforef"]]],[11,"decrypt","","Given the sender's private key, `pkey` and the recipient's certificiate, `cert`, decrypt the data in `self`.",20,[[["self"],["pkeyref"],["x509"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes this CmsContentInfo using DER.",20,[[["self"]],["result",["vec","errorstack"]]]],[11,"smime_read_cms","","Parses a smime formatted `vec` of bytes into a `CmsContentInfo`.",19,N],[11,"sign","","Given a signing cert `signcert`, private key `pkey`, a certificate stack `certs`, data `data` and flags `flags`, create a CmsContentInfo struct.",19,[[["option",["x509ref"]],["option",["pkeyref"]],["option",["stackref"]],["option"],["cmsoptions"]],["result",["cmscontentinfo","errorstack"]]]],[0,"conf","openssl","Interface for processing OpenSSL configuration files.",N,N],[3,"ConfMethod","openssl::conf","",N,N],[3,"Conf","","",N,N],[3,"ConfRef","","",N,N],[11,"default","","Retrieve handle to the default OpenSSL configuration file processing function.",21,[[],["confmethod"]]],[11,"from_ptr","","Construct from raw pointer.",21,N],[11,"as_ptr","","Convert to raw pointer.",21,N],[11,"from_ptr","","",22,N],[11,"as_ptr","","",22,N],[11,"drop","","",22,[[["self"]]]],[11,"deref","","",22,[[["self"]],["confref"]]],[11,"deref_mut","","",22,[[["self"]],["confref"]]],[11,"borrow","","",22,[[["self"]],["confref"]]],[11,"as_ref","","",22,[[["self"]],["confref"]]],[11,"new","","Create a configuration parser.",22,[[["confmethod"]],["result",["conf","errorstack"]]]],[0,"derive","openssl","Shared secret derivation.",N,N],[3,"Deriver","openssl::derive","A type used to derive a shared secret between two keys.",N,N],[11,"new","","Creates a new `Deriver` using the provided private key.",23,[[["pkeyref"]],["result",["deriver","errorstack"]]]],[11,"set_peer","","Sets the peer key used for secret derivation.",23,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"len","","Returns the size of the shared secret.",23,[[["self"]],["result",["usize","errorstack"]]]],[11,"derive","","Derives a shared secret between the two keys, writing it into the buffer.",23,N],[11,"derive_to_vec","","A convenience function which derives a shared secret and returns it in a new buffer.",23,[[["self"]],["result",["vec","errorstack"]]]],[0,"dh","openssl","",N,N],[3,"Dh","openssl::dh","",N,N],[3,"DhRef","","",N,N],[11,"from_ptr","","",24,N],[11,"as_ptr","","",24,N],[11,"drop","","",24,[[["self"]]]],[11,"deref","","",24,[[["self"]],["dhref"]]],[11,"deref_mut","","",24,[[["self"]],["dhref"]]],[11,"borrow","","",24,[[["self"]],["dhref"]]],[11,"as_ref","","",24,[[["self"]],["dhref"]]],[11,"params_to_pem","","Serializes the parameters into a PEM-encoded PKCS#3 DHparameter structure.",25,[[["self"]],["result",["vec","errorstack"]]]],[11,"params_to_der","","Serializes the parameters into a DER-encoded PKCS#3 DHparameter structure.",25,[[["self"]],["result",["vec","errorstack"]]]],[11,"from_params","","",24,[[["bignum"],["bignum"],["bignum"]],["result",["dh","errorstack"]]]],[11,"params_from_pem","","Deserializes a PEM-encoded PKCS#3 DHpararameters structure.",24,N],[11,"params_from_der","","Deserializes a DER-encoded PKCS#3 DHparameters structure.",24,N],[11,"get_1024_160","","Requires OpenSSL 1.0.2 or newer.",24,[[],["result",["dh","errorstack"]]]],[11,"get_2048_224","","Requires OpenSSL 1.0.2 or newer.",24,[[],["result",["dh","errorstack"]]]],[11,"get_2048_256","","Requires OpenSSL 1.0.2 or newer.",24,[[],["result",["dh","errorstack"]]]],[0,"dsa","openssl","Digital Signatures",N,N],[3,"Dsa","openssl::dsa","Object representing DSA keys.",N,N],[3,"DsaRef","","Reference to [`Dsa`].",N,N],[11,"from_ptr","","",26,N],[11,"as_ptr","","",26,N],[11,"drop","","",26,[[["self"]]]],[11,"deref","","",26,[[["self"]],["dsaref"]]],[11,"deref_mut","","",26,[[["self"]],["dsaref"]]],[11,"borrow","","",26,[[["self"]],["dsaref"]]],[11,"as_ref","","",26,[[["self"]],["dsaref"]]],[11,"public_key_to_pem","","Serialies the public key into a PEM-encoded SubjectPublicKeyInfo structure.",27,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded SubjectPublicKeyInfo structure.",27,[[["self"]],["result",["vec","errorstack"]]]],[11,"pub_key","","Returns a reference to the public key component of `self`.",27,[[["self"]],["bignumref"]]],[11,"priv_key","","Returns a reference to the private key component of `self`.",27,[[["self"]],["bignumref"]]],[11,"size","","Returns the maximum size of the signature output by `self` in bytes.",27,[[["self"]],["u32"]]],[11,"p","","Returns the DSA prime parameter of `self`.",27,[[["self"]],["bignumref"]]],[11,"q","","Returns the DSA sub-prime parameter of `self`.",27,[[["self"]],["bignumref"]]],[11,"g","","Returns the DSA base parameter of `self`.",27,[[["self"]],["bignumref"]]],[11,"generate","","Generate a DSA key pair.",26,[[["u32"]],["result",["dsa","errorstack"]]]],[11,"from_private_components","","Create a DSA key pair with the given parameters",26,[[["bignum"],["bignum"],["bignum"],["bignum"],["bignum"]],["result",["dsa","errorstack"]]]],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure containing a DSA key.",26,N],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure containing a DSA key.",26,N],[11,"from_public_components","","Create a new DSA key with only public components.",26,[[["bignum"],["bignum"],["bignum"],["bignum"]],["result",["dsa","errorstack"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[0,"ec","openssl","Elliptic Curve",N,N],[3,"PointConversionForm","openssl::ec","Compressed or Uncompressed conversion",N,N],[3,"Asn1Flag","","Named Curve or Explicit",N,N],[3,"EcGroup","","Describes the curve",N,N],[3,"EcGroupRef","","Reference to [`EcGroup`]",N,N],[3,"EcPoint","","Represents a point on the curve",N,N],[3,"EcPointRef","","Reference to [`EcPoint`]",N,N],[3,"EcKey","","Public and optional Private key on the given curve",N,N],[3,"EcKeyRef","","Reference to [`EcKey`]",N,N],[11,"clone","","",28,[[["self"]],["pointconversionform"]]],[18,"COMPRESSED","","Compressed conversion from point value.",28,N],[18,"UNCOMPRESSED","","Uncompressed conversion from point value.",28,N],[18,"HYBRID","","Performs both compressed and uncompressed conversions.",28,N],[11,"clone","","",29,[[["self"]],["asn1flag"]]],[18,"EXPLICIT_CURVE","","Curve defined using polynomial parameters",29,N],[18,"NAMED_CURVE","","Standard Curves",29,N],[11,"from_ptr","","",30,N],[11,"as_ptr","","",30,N],[11,"drop","","",30,[[["self"]]]],[11,"deref","","",30,[[["self"]],["ecgroupref"]]],[11,"deref_mut","","",30,[[["self"]],["ecgroupref"]]],[11,"borrow","","",30,[[["self"]],["ecgroupref"]]],[11,"as_ref","","",30,[[["self"]],["ecgroupref"]]],[11,"from_curve_name","","Returns the group of a standard named curve.",30,[[["nid"]],["result",["ecgroup","errorstack"]]]],[11,"components_gfp","","Places the components of a curve over a prime field in the provided `BigNum`s. The components make up the formula `y^2 mod p = x^3 + ax + b mod p`.",31,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"components_gf2m","","Places the components of a curve over a binary field in the provided `BigNum`s. The components make up the formula `y^2 + xy = x^3 + ax^2 + b`.",31,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"degree","","Returns the degree of the curve.",31,[[["self"]],["u32"]]],[11,"order","","Places the order of the curve in the provided `BigNum`.",31,[[["self"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"set_asn1_flag","","Sets the flag determining if the group corresponds to a named curve or must be explicitly parameterized.",31,[[["self"],["asn1flag"]]]],[11,"from_ptr","","",32,N],[11,"as_ptr","","",32,N],[11,"drop","","",32,[[["self"]]]],[11,"deref","","",32,[[["self"]],["ecpointref"]]],[11,"deref_mut","","",32,[[["self"]],["ecpointref"]]],[11,"borrow","","",32,[[["self"]],["ecpointref"]]],[11,"as_ref","","",32,[[["self"]],["ecpointref"]]],[11,"add","","Computes `a + b`, storing the result in `self`.",33,[[["self"],["ecgroupref"],["ecpointref"],["ecpointref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul","","Computes `q * m`, storing the result in `self`.",33,[[["self"],["ecgroupref"],["ecpointref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul_generator","","Computes `generator * n`, storing the result ing `self`.",33,[[["self"],["ecgroupref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul_full","","Computes `generator * n + q * m`, storing the result in `self`.",33,[[["self"],["ecgroupref"],["bignumref"],["ecpointref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"invert","","Inverts `self`.",33,[[["self"],["ecgroupref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"to_bytes","","Serializes the point to a binary representation.",33,[[["self"],["ecgroupref"],["pointconversionform"],["bignumcontextref"]],["result",["vec","errorstack"]]]],[11,"eq","","Determines if this point is equal to another.",33,[[["self"],["ecgroupref"],["ecpointref"],["bignumcontextref"]],["result",["bool","errorstack"]]]],[11,"affine_coordinates_gfp","","Place affine coordinates of a curve over a prime field in the provided `x` and `y` `BigNum`s",33,[[["self"],["ecgroupref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"affine_coordinates_gf2m","","Place affine coordinates of a curve over a binary field in the provided `x` and `y` `BigNum`s",33,[[["self"],["ecgroupref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"new","","Creates a new point on the specified curve.",32,[[["ecgroupref"]],["result",["ecpoint","errorstack"]]]],[11,"from_bytes","","Creates point from a binary representation",32,N],[11,"from_ptr","","",34,N],[11,"as_ptr","","",34,N],[11,"drop","","",34,[[["self"]]]],[11,"deref","","",34,[[["self"]],["eckeyref"]]],[11,"deref_mut","","",34,[[["self"]],["eckeyref"]]],[11,"borrow","","",34,[[["self"]],["eckeyref"]]],[11,"as_ref","","",34,[[["self"]],["eckeyref"]]],[11,"private_key_to_pem","","Serializes the private key to a PEM-encoded ECPrivateKey structure.",35,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to a PEM-encoded encrypted ECPrivateKey structure.",35,N],[11,"private_key_to_der","","Serializes the private key into a DER-encoded ECPrivateKey structure.",35,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key","","Return [`EcPoint`] associated with the private key",35,[[["self"]],["bignumref"]]],[11,"public_key","","Returns the public key.",35,[[["self"]],["ecpointref"]]],[11,"group","","Return [`EcGroup`] of the `EcKey`",35,[[["self"]],["ecgroupref"]]],[11,"check_key","","Checks the key for validity.",35,[[["self"]],["result",["errorstack"]]]],[11,"to_owned","","",35,[[["self"]],["eckey"]]],[11,"from_curve_name","","Constructs an `EcKey` corresponding to a known curve.",34,[[["nid"]],["result",["eckey","errorstack"]]]],[11,"from_group","","Constructs an `EcKey` corresponding to a curve.",34,[[["ecgroupref"]],["result",["eckey","errorstack"]]]],[11,"from_public_key","","Constructs an `EcKey` from the specified group with the associated `EcPoint`, public_key.",34,[[["ecgroupref"],["ecpointref"]],["result",["eckey","errorstack"]]]],[11,"from_public_key_affine_coordinates","","Constructs a public key from its affine coordinates.",34,[[["ecgroupref"],["bignumref"],["bignumref"]],["result",["eckey","errorstack"]]]],[11,"generate","","Generates a new public/private key pair on the specified curve.",34,[[["ecgroupref"]],["result",["eckey","errorstack"]]]],[11,"from_private_components","","Constructs an public/private key pair given a curve, a private key and a public key point.",34,[[["ecgroupref"],["bignumref"],["ecpointref"]],["result",["eckey","errorstack"]]]],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded ECPrivateKey structure.",34,N],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.",34,N],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.",34,N],[11,"private_key_from_der","","Decodes a DER-encoded elliptic curve private key structure.",34,N],[11,"clone","","",34,[[["self"]],["eckey"]]],[0,"ecdsa","openssl","Low level Elliptic Curve Digital Signature Algorithm (ECDSA) functions.",N,N],[3,"EcdsaSig","openssl::ecdsa","A low level interface to ECDSA",N,N],[3,"EcdsaSigRef","","Reference to [`EcdsaSig`]",N,N],[11,"from_ptr","","",36,N],[11,"as_ptr","","",36,N],[11,"drop","","",36,[[["self"]]]],[11,"deref","","",36,[[["self"]],["ecdsasigref"]]],[11,"deref_mut","","",36,[[["self"]],["ecdsasigref"]]],[11,"borrow","","",36,[[["self"]],["ecdsasigref"]]],[11,"as_ref","","",36,[[["self"]],["ecdsasigref"]]],[11,"sign","","Computes a digital signature of the hash value `data` using the private EC key eckey.",36,N],[11,"from_private_components","","Returns a new `EcdsaSig` by setting the `r` and `s` values associated with a ECDSA signature.",36,[[["bignum"],["bignum"]],["result",["ecdsasig","errorstack"]]]],[11,"verify","","Verifies if the signature is a valid ECDSA signature using the given public key.",36,N],[11,"r","","Returns internal component: `r` of a `EcdsaSig`. (See X9.62 or FIPS 186-2)",36,[[["self"]],["bignumref"]]],[11,"s","","Returns internal components: `s` of a `EcdsaSig`. (See X9.62 or FIPS 186-2)",36,[[["self"]],["bignumref"]]],[0,"error","openssl","Errors returned by OpenSSL library.",N,N],[3,"ErrorStack","openssl::error","Collection of [`Error`]s from OpenSSL.",N,N],[3,"Error","","An error reported from OpenSSL.",N,N],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"clone","","",37,[[["self"]],["errorstack"]]],[11,"get","","Returns the contents of the OpenSSL error stack.",37,[[],["errorstack"]]],[11,"put","","Pushes the errors back onto the OpenSSL error stack.",37,[[["self"]]]],[11,"errors","","Returns the errors in the stack.",37,N],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"description","","",37,[[["self"]],["str"]]],[11,"clone","","",38,[[["self"]],["error"]]],[11,"get","","Returns the first error on the OpenSSL error stack.",38,[[],["option",["error"]]]],[11,"put","","Pushes the error back onto the OpenSSL error stack.",38,[[["self"]]]],[11,"code","","Returns the raw OpenSSL error code for this error.",38,[[["self"]],["c_ulong"]]],[11,"library","","Returns the name of the library reporting the error, if available.",38,[[["self"]],["option",["str"]]]],[11,"function","","Returns the name of the function reporting the error.",38,[[["self"]],["option",["str"]]]],[11,"reason","","Returns the reason for the error.",38,[[["self"]],["option",["str"]]]],[11,"file","","Returns the name of the source file which encountered the error.",38,[[["self"]],["str"]]],[11,"line","","Returns the line in the source file which encountered the error.",38,[[["self"]],["u32"]]],[11,"data","","Returns additional data describing the error.",38,[[["self"]],["option",["str"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"description","","",38,[[["self"]],["str"]]],[0,"ex_data","openssl","",N,N],[3,"Index","openssl::ex_data","A slot in a type's \"extra data\" structure.",N,N],[11,"clone","","",39,[[["self"]],["index"]]],[11,"from_raw","","",39,[[["c_int"]],["index"]]],[11,"as_raw","","",39,[[["self"]],["c_int"]]],[0,"fips","openssl","FIPS 140-2 support.",N,N],[5,"enable","openssl::fips","Moves the library into or out of the FIPS 140-2 mode of operation.",N,[[["bool"]],["result",["errorstack"]]]],[5,"enabled","","Determines if the library is running in the FIPS 140-2 mode of operation.",N,[[],["bool"]]],[0,"hash","openssl","",N,N],[3,"MessageDigest","openssl::hash","",N,N],[3,"Hasher","","Provides message digest (hash) computation.",N,N],[3,"DigestBytes","","The resulting bytes of a digest.",N,N],[5,"hash","","Computes the hash of the `data` with the hash `t`.",N,N],[11,"clone","","",40,[[["self"]],["messagedigest"]]],[11,"from_ptr","","",40,N],[11,"from_nid","","Returns the `MessageDigest` corresponding to an `Nid`.",40,[[["nid"]],["option",["messagedigest"]]]],[11,"md5","","",40,[[],["messagedigest"]]],[11,"sha1","","",40,[[],["messagedigest"]]],[11,"sha224","","",40,[[],["messagedigest"]]],[11,"sha256","","",40,[[],["messagedigest"]]],[11,"sha384","","",40,[[],["messagedigest"]]],[11,"sha512","","",40,[[],["messagedigest"]]],[11,"ripemd160","","",40,[[],["messagedigest"]]],[11,"as_ptr","","",40,N],[11,"size","","The size of the digest in bytes",40,[[["self"]],["usize"]]],[11,"new","","Creates a new `Hasher` with the specified hash type.",41,[[["messagedigest"]],["result",["hasher","errorstack"]]]],[11,"update","","Feeds data into the hasher.",41,N],[11,"finish","","Returns the hash of the data written and resets the hasher.",41,[[["self"]],["result",["digestbytes","errorstack"]]]],[11,"write","","",41,N],[11,"flush","","",41,[[["self"]],["result"]]],[11,"clone","","",41,[[["self"]],["hasher"]]],[11,"drop","","",41,[[["self"]]]],[11,"clone","","",42,[[["self"]],["digestbytes"]]],[11,"deref","","",42,N],[11,"deref_mut","","",42,N],[11,"as_ref","","",42,N],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[0,"memcmp","openssl","Utilities to safely compare cryptographic values.",N,N],[5,"eq","openssl::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",N,N],[0,"nid","openssl","A collection of numerical identifiers for OpenSSL objects.",N,N],[3,"SignatureAlgorithms","openssl::nid","The digest and public-key algorithms associated with a signature.",N,N],[12,"digest","","The signature's digest.",43,N],[12,"pkey","","The signature's public-key.",43,N],[3,"Nid","","A numerical identifier for an OpenSSL object.",N,N],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"clone","","",44,[[["self"]],["nid"]]],[11,"eq","","",44,[[["self"],["nid"]],["bool"]]],[11,"ne","","",44,[[["self"],["nid"]],["bool"]]],[11,"hash","","",44,N],[11,"from_raw","","Create a `Nid` from an integer representation.",44,[[["c_int"]],["nid"]]],[11,"as_raw","","Return the integer representation of a `Nid`.",44,[[["self"]],["c_int"]]],[11,"signature_algorithms","","Returns the `Nid`s of the digest and public key algorithms associated with a signature ID.",44,[[["self"]],["option",["signaturealgorithms"]]]],[11,"long_name","","Return the string representation of a `Nid` (long) This corresponds to [`OBJ_nid2ln`]",44,[[["self"]],["result",["str","errorstack"]]]],[11,"short_name","","Return the string representation of a `Nid` (short) This corresponds to [`OBJ_nid2sn`]",44,[[["self"]],["result",["str","errorstack"]]]],[18,"UNDEF","","",44,N],[18,"ITU_T","","",44,N],[18,"CCITT","","",44,N],[18,"ISO","","",44,N],[18,"JOINT_ISO_ITU_T","","",44,N],[18,"JOINT_ISO_CCITT","","",44,N],[18,"MEMBER_BODY","","",44,N],[18,"IDENTIFIED_ORGANIZATION","","",44,N],[18,"HMAC_MD5","","",44,N],[18,"HMAC_SHA1","","",44,N],[18,"CERTICOM_ARC","","",44,N],[18,"INTERNATIONAL_ORGANIZATIONS","","",44,N],[18,"WAP","","",44,N],[18,"WAP_WSG","","",44,N],[18,"SELECTED_ATTRIBUTE_TYPES","","",44,N],[18,"CLEARANCE","","",44,N],[18,"ISO_US","","",44,N],[18,"X9_57","","",44,N],[18,"X9CM","","",44,N],[18,"DSA","","",44,N],[18,"DSAWITHSHA1","","",44,N],[18,"ANSI_X9_62","","",44,N],[18,"X9_62_PRIME_FIELD","","",44,N],[18,"X9_62_CHARACTERISTIC_TWO_FIELD","","",44,N],[18,"X9_62_ID_CHARACTERISTIC_TWO_BASIS","","",44,N],[18,"X9_62_ONBASIS","","",44,N],[18,"X9_62_TPBASIS","","",44,N],[18,"X9_62_PPBASIS","","",44,N],[18,"X9_62_ID_ECPUBLICKEY","","",44,N],[18,"X9_62_C2PNB163V1","","",44,N],[18,"X9_62_C2PNB163V2","","",44,N],[18,"X9_62_C2PNB163V3","","",44,N],[18,"X9_62_C2PNB176V1","","",44,N],[18,"X9_62_C2TNB191V1","","",44,N],[18,"X9_62_C2TNB191V2","","",44,N],[18,"X9_62_C2TNB191V3","","",44,N],[18,"X9_62_C2ONB191V4","","",44,N],[18,"X9_62_C2ONB191V5","","",44,N],[18,"X9_62_C2PNB208W1","","",44,N],[18,"X9_62_C2TNB239V1","","",44,N],[18,"X9_62_C2TNB239V2","","",44,N],[18,"X9_62_C2TNB239V3","","",44,N],[18,"X9_62_C2ONB239V4","","",44,N],[18,"X9_62_C2ONB239V5","","",44,N],[18,"X9_62_C2PNB272W1","","",44,N],[18,"X9_62_C2PNB304W1","","",44,N],[18,"X9_62_C2TNB359V1","","",44,N],[18,"X9_62_C2PNB368W1","","",44,N],[18,"X9_62_C2TNB431R1","","",44,N],[18,"X9_62_PRIME192V1","","",44,N],[18,"X9_62_PRIME192V2","","",44,N],[18,"X9_62_PRIME192V3","","",44,N],[18,"X9_62_PRIME239V1","","",44,N],[18,"X9_62_PRIME239V2","","",44,N],[18,"X9_62_PRIME239V3","","",44,N],[18,"X9_62_PRIME256V1","","",44,N],[18,"ECDSA_WITH_SHA1","","",44,N],[18,"ECDSA_WITH_RECOMMENDED","","",44,N],[18,"ECDSA_WITH_SPECIFIED","","",44,N],[18,"ECDSA_WITH_SHA224","","",44,N],[18,"ECDSA_WITH_SHA256","","",44,N],[18,"ECDSA_WITH_SHA384","","",44,N],[18,"ECDSA_WITH_SHA512","","",44,N],[18,"SECP112R1","","",44,N],[18,"SECP112R2","","",44,N],[18,"SECP128R1","","",44,N],[18,"SECP128R2","","",44,N],[18,"SECP160K1","","",44,N],[18,"SECP160R1","","",44,N],[18,"SECP160R2","","",44,N],[18,"SECP192K1","","",44,N],[18,"SECP224K1","","",44,N],[18,"SECP224R1","","",44,N],[18,"SECP256K1","","",44,N],[18,"SECP384R1","","",44,N],[18,"SECP521R1","","",44,N],[18,"SECT113R1","","",44,N],[18,"SECT113R2","","",44,N],[18,"SECT131R1","","",44,N],[18,"SECT131R2","","",44,N],[18,"SECT163K1","","",44,N],[18,"SECT163R1","","",44,N],[18,"SECT163R2","","",44,N],[18,"SECT193R1","","",44,N],[18,"SECT193R2","","",44,N],[18,"SECT233K1","","",44,N],[18,"SECT233R1","","",44,N],[18,"SECT239K1","","",44,N],[18,"SECT283K1","","",44,N],[18,"SECT283R1","","",44,N],[18,"SECT409K1","","",44,N],[18,"SECT409R1","","",44,N],[18,"SECT571K1","","",44,N],[18,"SECT571R1","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS1","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS3","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS4","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS5","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS6","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS7","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS8","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS9","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS10","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS11","","",44,N],[18,"WAP_WSG_IDM_ECID_WTLS12","","",44,N],[18,"CAST5_CBC","","",44,N],[18,"CAST5_ECB","","",44,N],[18,"CAST5_CFB64","","",44,N],[18,"CAST5_OFB64","","",44,N],[18,"PBEWITHMD5ANDCAST5_CBC","","",44,N],[18,"ID_PASSWORDBASEDMAC","","",44,N],[18,"ID_DHBASEDMAC","","",44,N],[18,"RSADSI","","",44,N],[18,"PKCS","","",44,N],[18,"PKCS1","","",44,N],[18,"RSAENCRYPTION","","",44,N],[18,"MD2WITHRSAENCRYPTION","","",44,N],[18,"MD4WITHRSAENCRYPTION","","",44,N],[18,"MD5WITHRSAENCRYPTION","","",44,N],[18,"SHA1WITHRSAENCRYPTION","","",44,N],[18,"RSAESOAEP","","",44,N],[18,"MGF1","","",44,N],[18,"RSASSAPSS","","",44,N],[18,"SHA256WITHRSAENCRYPTION","","",44,N],[18,"SHA384WITHRSAENCRYPTION","","",44,N],[18,"SHA512WITHRSAENCRYPTION","","",44,N],[18,"SHA224WITHRSAENCRYPTION","","",44,N],[18,"PKCS3","","",44,N],[18,"DHKEYAGREEMENT","","",44,N],[18,"PKCS5","","",44,N],[18,"PBEWITHMD2ANDDES_CBC","","",44,N],[18,"PBEWITHMD5ANDDES_CBC","","",44,N],[18,"PBEWITHMD2ANDRC2_CBC","","",44,N],[18,"PBEWITHMD5ANDRC2_CBC","","",44,N],[18,"PBEWITHSHA1ANDDES_CBC","","",44,N],[18,"PBEWITHSHA1ANDRC2_CBC","","",44,N],[18,"ID_PBKDF2","","",44,N],[18,"PBES2","","",44,N],[18,"PBMAC1","","",44,N],[18,"PKCS7","","",44,N],[18,"PKCS7_DATA","","",44,N],[18,"PKCS7_SIGNED","","",44,N],[18,"PKCS7_ENVELOPED","","",44,N],[18,"PKCS7_SIGNEDANDENVELOPED","","",44,N],[18,"PKCS7_DIGEST","","",44,N],[18,"PKCS7_ENCRYPTED","","",44,N],[18,"PKCS9","","",44,N],[18,"PKCS9_EMAILADDRESS","","",44,N],[18,"PKCS9_UNSTRUCTUREDNAME","","",44,N],[18,"PKCS9_CONTENTTYPE","","",44,N],[18,"PKCS9_MESSAGEDIGEST","","",44,N],[18,"PKCS9_SIGNINGTIME","","",44,N],[18,"PKCS9_COUNTERSIGNATURE","","",44,N],[18,"PKCS9_CHALLENGEPASSWORD","","",44,N],[18,"PKCS9_UNSTRUCTUREDADDRESS","","",44,N],[18,"PKCS9_EXTCERTATTRIBUTES","","",44,N],[18,"EXT_REQ","","",44,N],[18,"SMIMECAPABILITIES","","",44,N],[18,"SMIME","","",44,N],[18,"ID_SMIME_MOD","","",44,N],[18,"ID_SMIME_CT","","",44,N],[18,"ID_SMIME_AA","","",44,N],[18,"ID_SMIME_ALG","","",44,N],[18,"ID_SMIME_CD","","",44,N],[18,"ID_SMIME_SPQ","","",44,N],[18,"ID_SMIME_CTI","","",44,N],[18,"ID_SMIME_MOD_CMS","","",44,N],[18,"ID_SMIME_MOD_ESS","","",44,N],[18,"ID_SMIME_MOD_OID","","",44,N],[18,"ID_SMIME_MOD_MSG_V3","","",44,N],[18,"ID_SMIME_MOD_ETS_ESIGNATURE_88","","",44,N],[18,"ID_SMIME_MOD_ETS_ESIGNATURE_97","","",44,N],[18,"ID_SMIME_MOD_ETS_ESIGPOLICY_88","","",44,N],[18,"ID_SMIME_MOD_ETS_ESIGPOLICY_97","","",44,N],[18,"ID_SMIME_CT_RECEIPT","","",44,N],[18,"ID_SMIME_CT_AUTHDATA","","",44,N],[18,"ID_SMIME_CT_PUBLISHCERT","","",44,N],[18,"ID_SMIME_CT_TSTINFO","","",44,N],[18,"ID_SMIME_CT_TDTINFO","","",44,N],[18,"ID_SMIME_CT_CONTENTINFO","","",44,N],[18,"ID_SMIME_CT_DVCSREQUESTDATA","","",44,N],[18,"ID_SMIME_CT_DVCSRESPONSEDATA","","",44,N],[18,"ID_SMIME_CT_COMPRESSEDDATA","","",44,N],[18,"ID_CT_ASCIITEXTWITHCRLF","","",44,N],[18,"ID_SMIME_AA_RECEIPTREQUEST","","",44,N],[18,"ID_SMIME_AA_SECURITYLABEL","","",44,N],[18,"ID_SMIME_AA_MLEXPANDHISTORY","","",44,N],[18,"ID_SMIME_AA_CONTENTHINT","","",44,N],[18,"ID_SMIME_AA_MSGSIGDIGEST","","",44,N],[18,"ID_SMIME_AA_ENCAPCONTENTTYPE","","",44,N],[18,"ID_SMIME_AA_CONTENTIDENTIFIER","","",44,N],[18,"ID_SMIME_AA_MACVALUE","","",44,N],[18,"ID_SMIME_AA_EQUIVALENTLABELS","","",44,N],[18,"ID_SMIME_AA_CONTENTREFERENCE","","",44,N],[18,"ID_SMIME_AA_ENCRYPKEYPREF","","",44,N],[18,"ID_SMIME_AA_SIGNINGCERTIFICATE","","",44,N],[18,"ID_SMIME_AA_SMIMEENCRYPTCERTS","","",44,N],[18,"ID_SMIME_AA_TIMESTAMPTOKEN","","",44,N],[18,"ID_SMIME_AA_ETS_SIGPOLICYID","","",44,N],[18,"ID_SMIME_AA_ETS_COMMITMENTTYPE","","",44,N],[18,"ID_SMIME_AA_ETS_SIGNERLOCATION","","",44,N],[18,"ID_SMIME_AA_ETS_SIGNERATTR","","",44,N],[18,"ID_SMIME_AA_ETS_OTHERSIGCERT","","",44,N],[18,"ID_SMIME_AA_ETS_CONTENTTIMESTAMP","","",44,N],[18,"ID_SMIME_AA_ETS_CERTIFICATEREFS","","",44,N],[18,"ID_SMIME_AA_ETS_REVOCATIONREFS","","",44,N],[18,"ID_SMIME_AA_ETS_CERTVALUES","","",44,N],[18,"ID_SMIME_AA_ETS_REVOCATIONVALUES","","",44,N],[18,"ID_SMIME_AA_ETS_ESCTIMESTAMP","","",44,N],[18,"ID_SMIME_AA_ETS_CERTCRLTIMESTAMP","","",44,N],[18,"ID_SMIME_AA_ETS_ARCHIVETIMESTAMP","","",44,N],[18,"ID_SMIME_AA_SIGNATURETYPE","","",44,N],[18,"ID_SMIME_AA_DVCS_DVC","","",44,N],[18,"ID_SMIME_ALG_ESDHWITH3DES","","",44,N],[18,"ID_SMIME_ALG_ESDHWITHRC2","","",44,N],[18,"ID_SMIME_ALG_3DESWRAP","","",44,N],[18,"ID_SMIME_ALG_RC2WRAP","","",44,N],[18,"ID_SMIME_ALG_ESDH","","",44,N],[18,"ID_SMIME_ALG_CMS3DESWRAP","","",44,N],[18,"ID_SMIME_ALG_CMSRC2WRAP","","",44,N],[18,"ID_ALG_PWRI_KEK","","",44,N],[18,"ID_SMIME_CD_LDAP","","",44,N],[18,"ID_SMIME_SPQ_ETS_SQT_URI","","",44,N],[18,"ID_SMIME_SPQ_ETS_SQT_UNOTICE","","",44,N],[18,"ID_SMIME_CTI_ETS_PROOFOFORIGIN","","",44,N],[18,"ID_SMIME_CTI_ETS_PROOFOFRECEIPT","","",44,N],[18,"ID_SMIME_CTI_ETS_PROOFOFDELIVERY","","",44,N],[18,"ID_SMIME_CTI_ETS_PROOFOFSENDER","","",44,N],[18,"ID_SMIME_CTI_ETS_PROOFOFAPPROVAL","","",44,N],[18,"ID_SMIME_CTI_ETS_PROOFOFCREATION","","",44,N],[18,"FRIENDLYNAME","","",44,N],[18,"LOCALKEYID","","",44,N],[18,"MS_CSP_NAME","","",44,N],[18,"LOCALKEYSET","","",44,N],[18,"X509CERTIFICATE","","",44,N],[18,"SDSICERTIFICATE","","",44,N],[18,"X509CRL","","",44,N],[18,"PBE_WITHSHA1AND128BITRC4","","",44,N],[18,"PBE_WITHSHA1AND40BITRC4","","",44,N],[18,"PBE_WITHSHA1AND3_KEY_TRIPLEDES_CBC","","",44,N],[18,"PBE_WITHSHA1AND2_KEY_TRIPLEDES_CBC","","",44,N],[18,"PBE_WITHSHA1AND128BITRC2_CBC","","",44,N],[18,"PBE_WITHSHA1AND40BITRC2_CBC","","",44,N],[18,"KEYBAG","","",44,N],[18,"PKCS8SHROUDEDKEYBAG","","",44,N],[18,"CERTBAG","","",44,N],[18,"CRLBAG","","",44,N],[18,"SECRETBAG","","",44,N],[18,"SAFECONTENTSBAG","","",44,N],[18,"MD2","","",44,N],[18,"MD4","","",44,N],[18,"MD5","","",44,N],[18,"MD5_SHA1","","",44,N],[18,"HMACWITHMD5","","",44,N],[18,"HMACWITHSHA1","","",44,N],[18,"HMACWITHSHA224","","",44,N],[18,"HMACWITHSHA256","","",44,N],[18,"HMACWITHSHA384","","",44,N],[18,"HMACWITHSHA512","","",44,N],[18,"RC2_CBC","","",44,N],[18,"RC2_ECB","","",44,N],[18,"RC2_CFB64","","",44,N],[18,"RC2_OFB64","","",44,N],[18,"RC2_40_CBC","","",44,N],[18,"RC2_64_CBC","","",44,N],[18,"RC4","","",44,N],[18,"RC4_40","","",44,N],[18,"DES_EDE3_CBC","","",44,N],[18,"RC5_CBC","","",44,N],[18,"RC5_ECB","","",44,N],[18,"RC5_CFB64","","",44,N],[18,"RC5_OFB64","","",44,N],[18,"MS_EXT_REQ","","",44,N],[18,"MS_CODE_IND","","",44,N],[18,"MS_CODE_COM","","",44,N],[18,"MS_CTL_SIGN","","",44,N],[18,"MS_SGC","","",44,N],[18,"MS_EFS","","",44,N],[18,"MS_SMARTCARD_LOGIN","","",44,N],[18,"MS_UPN","","",44,N],[18,"IDEA_CBC","","",44,N],[18,"IDEA_ECB","","",44,N],[18,"IDEA_CFB64","","",44,N],[18,"IDEA_OFB64","","",44,N],[18,"BF_CBC","","",44,N],[18,"BF_ECB","","",44,N],[18,"BF_CFB64","","",44,N],[18,"BF_OFB64","","",44,N],[18,"ID_PKIX","","",44,N],[18,"ID_PKIX_MOD","","",44,N],[18,"ID_PE","","",44,N],[18,"ID_QT","","",44,N],[18,"ID_KP","","",44,N],[18,"ID_IT","","",44,N],[18,"ID_PKIP","","",44,N],[18,"ID_ALG","","",44,N],[18,"ID_CMC","","",44,N],[18,"ID_ON","","",44,N],[18,"ID_PDA","","",44,N],[18,"ID_ACA","","",44,N],[18,"ID_QCS","","",44,N],[18,"ID_CCT","","",44,N],[18,"ID_PPL","","",44,N],[18,"ID_AD","","",44,N],[18,"ID_PKIX1_EXPLICIT_88","","",44,N],[18,"ID_PKIX1_IMPLICIT_88","","",44,N],[18,"ID_PKIX1_EXPLICIT_93","","",44,N],[18,"ID_PKIX1_IMPLICIT_93","","",44,N],[18,"ID_MOD_CRMF","","",44,N],[18,"ID_MOD_CMC","","",44,N],[18,"ID_MOD_KEA_PROFILE_88","","",44,N],[18,"ID_MOD_KEA_PROFILE_93","","",44,N],[18,"ID_MOD_CMP","","",44,N],[18,"ID_MOD_QUALIFIED_CERT_88","","",44,N],[18,"ID_MOD_QUALIFIED_CERT_93","","",44,N],[18,"ID_MOD_ATTRIBUTE_CERT","","",44,N],[18,"ID_MOD_TIMESTAMP_PROTOCOL","","",44,N],[18,"ID_MOD_OCSP","","",44,N],[18,"ID_MOD_DVCS","","",44,N],[18,"ID_MOD_CMP2000","","",44,N],[18,"INFO_ACCESS","","",44,N],[18,"BIOMETRICINFO","","",44,N],[18,"QCSTATEMENTS","","",44,N],[18,"AC_AUDITENTITY","","",44,N],[18,"AC_TARGETING","","",44,N],[18,"AACONTROLS","","",44,N],[18,"SBGP_IPADDRBLOCK","","",44,N],[18,"SBGP_AUTONOMOUSSYSNUM","","",44,N],[18,"SBGP_ROUTERIDENTIFIER","","",44,N],[18,"AC_PROXYING","","",44,N],[18,"SINFO_ACCESS","","",44,N],[18,"PROXYCERTINFO","","",44,N],[18,"ID_QT_CPS","","",44,N],[18,"ID_QT_UNOTICE","","",44,N],[18,"TEXTNOTICE","","",44,N],[18,"SERVER_AUTH","","",44,N],[18,"CLIENT_AUTH","","",44,N],[18,"CODE_SIGN","","",44,N],[18,"EMAIL_PROTECT","","",44,N],[18,"IPSECENDSYSTEM","","",44,N],[18,"IPSECTUNNEL","","",44,N],[18,"IPSECUSER","","",44,N],[18,"TIME_STAMP","","",44,N],[18,"OCSP_SIGN","","",44,N],[18,"DVCS","","",44,N],[18,"ID_IT_CAPROTENCCERT","","",44,N],[18,"ID_IT_SIGNKEYPAIRTYPES","","",44,N],[18,"ID_IT_ENCKEYPAIRTYPES","","",44,N],[18,"ID_IT_PREFERREDSYMMALG","","",44,N],[18,"ID_IT_CAKEYUPDATEINFO","","",44,N],[18,"ID_IT_CURRENTCRL","","",44,N],[18,"ID_IT_UNSUPPORTEDOIDS","","",44,N],[18,"ID_IT_SUBSCRIPTIONREQUEST","","",44,N],[18,"ID_IT_SUBSCRIPTIONRESPONSE","","",44,N],[18,"ID_IT_KEYPAIRPARAMREQ","","",44,N],[18,"ID_IT_KEYPAIRPARAMREP","","",44,N],[18,"ID_IT_REVPASSPHRASE","","",44,N],[18,"ID_IT_IMPLICITCONFIRM","","",44,N],[18,"ID_IT_CONFIRMWAITTIME","","",44,N],[18,"ID_IT_ORIGPKIMESSAGE","","",44,N],[18,"ID_IT_SUPPLANGTAGS","","",44,N],[18,"ID_REGCTRL","","",44,N],[18,"ID_REGINFO","","",44,N],[18,"ID_REGCTRL_REGTOKEN","","",44,N],[18,"ID_REGCTRL_AUTHENTICATOR","","",44,N],[18,"ID_REGCTRL_PKIPUBLICATIONINFO","","",44,N],[18,"ID_REGCTRL_PKIARCHIVEOPTIONS","","",44,N],[18,"ID_REGCTRL_OLDCERTID","","",44,N],[18,"ID_REGCTRL_PROTOCOLENCRKEY","","",44,N],[18,"ID_REGINFO_UTF8PAIRS","","",44,N],[18,"ID_REGINFO_CERTREQ","","",44,N],[18,"ID_ALG_DES40","","",44,N],[18,"ID_ALG_NOSIGNATURE","","",44,N],[18,"ID_ALG_DH_SIG_HMAC_SHA1","","",44,N],[18,"ID_ALG_DH_POP","","",44,N],[18,"ID_CMC_STATUSINFO","","",44,N],[18,"ID_CMC_IDENTIFICATION","","",44,N],[18,"ID_CMC_IDENTITYPROOF","","",44,N],[18,"ID_CMC_DATARETURN","","",44,N],[18,"ID_CMC_TRANSACTIONID","","",44,N],[18,"ID_CMC_SENDERNONCE","","",44,N],[18,"ID_CMC_RECIPIENTNONCE","","",44,N],[18,"ID_CMC_ADDEXTENSIONS","","",44,N],[18,"ID_CMC_ENCRYPTEDPOP","","",44,N],[18,"ID_CMC_DECRYPTEDPOP","","",44,N],[18,"ID_CMC_LRAPOPWITNESS","","",44,N],[18,"ID_CMC_GETCERT","","",44,N],[18,"ID_CMC_GETCRL","","",44,N],[18,"ID_CMC_REVOKEREQUEST","","",44,N],[18,"ID_CMC_REGINFO","","",44,N],[18,"ID_CMC_RESPONSEINFO","","",44,N],[18,"ID_CMC_QUERYPENDING","","",44,N],[18,"ID_CMC_POPLINKRANDOM","","",44,N],[18,"ID_CMC_POPLINKWITNESS","","",44,N],[18,"ID_CMC_CONFIRMCERTACCEPTANCE","","",44,N],[18,"ID_ON_PERSONALDATA","","",44,N],[18,"ID_ON_PERMANENTIDENTIFIER","","",44,N],[18,"ID_PDA_DATEOFBIRTH","","",44,N],[18,"ID_PDA_PLACEOFBIRTH","","",44,N],[18,"ID_PDA_GENDER","","",44,N],[18,"ID_PDA_COUNTRYOFCITIZENSHIP","","",44,N],[18,"ID_PDA_COUNTRYOFRESIDENCE","","",44,N],[18,"ID_ACA_AUTHENTICATIONINFO","","",44,N],[18,"ID_ACA_ACCESSIDENTITY","","",44,N],[18,"ID_ACA_CHARGINGIDENTITY","","",44,N],[18,"ID_ACA_GROUP","","",44,N],[18,"ID_ACA_ROLE","","",44,N],[18,"ID_ACA_ENCATTRS","","",44,N],[18,"ID_QCS_PKIXQCSYNTAX_V1","","",44,N],[18,"ID_CCT_CRS","","",44,N],[18,"ID_CCT_PKIDATA","","",44,N],[18,"ID_CCT_PKIRESPONSE","","",44,N],[18,"ID_PPL_ANYLANGUAGE","","",44,N],[18,"ID_PPL_INHERITALL","","",44,N],[18,"INDEPENDENT","","",44,N],[18,"AD_OCSP","","",44,N],[18,"AD_CA_ISSUERS","","",44,N],[18,"AD_TIMESTAMPING","","",44,N],[18,"AD_DVCS","","",44,N],[18,"CAREPOSITORY","","",44,N],[18,"ID_PKIX_OCSP_BASIC","","",44,N],[18,"ID_PKIX_OCSP_NONCE","","",44,N],[18,"ID_PKIX_OCSP_CRLID","","",44,N],[18,"ID_PKIX_OCSP_ACCEPTABLERESPONSES","","",44,N],[18,"ID_PKIX_OCSP_NOCHECK","","",44,N],[18,"ID_PKIX_OCSP_ARCHIVECUTOFF","","",44,N],[18,"ID_PKIX_OCSP_SERVICELOCATOR","","",44,N],[18,"ID_PKIX_OCSP_EXTENDEDSTATUS","","",44,N],[18,"ID_PKIX_OCSP_VALID","","",44,N],[18,"ID_PKIX_OCSP_PATH","","",44,N],[18,"ID_PKIX_OCSP_TRUSTROOT","","",44,N],[18,"ALGORITHM","","",44,N],[18,"MD5WITHRSA","","",44,N],[18,"DES_ECB","","",44,N],[18,"DES_CBC","","",44,N],[18,"DES_OFB64","","",44,N],[18,"DES_CFB64","","",44,N],[18,"RSASIGNATURE","","",44,N],[18,"DSA_2","","",44,N],[18,"DSAWITHSHA","","",44,N],[18,"SHAWITHRSAENCRYPTION","","",44,N],[18,"DES_EDE_ECB","","",44,N],[18,"DES_EDE3_ECB","","",44,N],[18,"DES_EDE_CBC","","",44,N],[18,"DES_EDE_CFB64","","",44,N],[18,"DES_EDE3_CFB64","","",44,N],[18,"DES_EDE_OFB64","","",44,N],[18,"DES_EDE3_OFB64","","",44,N],[18,"DESX_CBC","","",44,N],[18,"SHA","","",44,N],[18,"SHA1","","",44,N],[18,"DSAWITHSHA1_2","","",44,N],[18,"SHA1WITHRSA","","",44,N],[18,"RIPEMD160","","",44,N],[18,"RIPEMD160WITHRSA","","",44,N],[18,"SXNET","","",44,N],[18,"X500","","",44,N],[18,"X509","","",44,N],[18,"COMMONNAME","","",44,N],[18,"SURNAME","","",44,N],[18,"SERIALNUMBER","","",44,N],[18,"COUNTRYNAME","","",44,N],[18,"LOCALITYNAME","","",44,N],[18,"STATEORPROVINCENAME","","",44,N],[18,"STREETADDRESS","","",44,N],[18,"ORGANIZATIONNAME","","",44,N],[18,"ORGANIZATIONALUNITNAME","","",44,N],[18,"TITLE","","",44,N],[18,"DESCRIPTION","","",44,N],[18,"SEARCHGUIDE","","",44,N],[18,"BUSINESSCATEGORY","","",44,N],[18,"POSTALADDRESS","","",44,N],[18,"POSTALCODE","","",44,N],[18,"POSTOFFICEBOX","","",44,N],[18,"PHYSICALDELIVERYOFFICENAME","","",44,N],[18,"TELEPHONENUMBER","","",44,N],[18,"TELEXNUMBER","","",44,N],[18,"TELETEXTERMINALIDENTIFIER","","",44,N],[18,"FACSIMILETELEPHONENUMBER","","",44,N],[18,"X121ADDRESS","","",44,N],[18,"INTERNATIONALISDNNUMBER","","",44,N],[18,"REGISTEREDADDRESS","","",44,N],[18,"DESTINATIONINDICATOR","","",44,N],[18,"PREFERREDDELIVERYMETHOD","","",44,N],[18,"PRESENTATIONADDRESS","","",44,N],[18,"SUPPORTEDAPPLICATIONCONTEXT","","",44,N],[18,"MEMBER","","",44,N],[18,"OWNER","","",44,N],[18,"ROLEOCCUPANT","","",44,N],[18,"SEEALSO","","",44,N],[18,"USERPASSWORD","","",44,N],[18,"USERCERTIFICATE","","",44,N],[18,"CACERTIFICATE","","",44,N],[18,"AUTHORITYREVOCATIONLIST","","",44,N],[18,"CERTIFICATEREVOCATIONLIST","","",44,N],[18,"CROSSCERTIFICATEPAIR","","",44,N],[18,"NAME","","",44,N],[18,"GIVENNAME","","",44,N],[18,"INITIALS","","",44,N],[18,"GENERATIONQUALIFIER","","",44,N],[18,"X500UNIQUEIDENTIFIER","","",44,N],[18,"DNQUALIFIER","","",44,N],[18,"ENHANCEDSEARCHGUIDE","","",44,N],[18,"PROTOCOLINFORMATION","","",44,N],[18,"DISTINGUISHEDNAME","","",44,N],[18,"UNIQUEMEMBER","","",44,N],[18,"HOUSEIDENTIFIER","","",44,N],[18,"SUPPORTEDALGORITHMS","","",44,N],[18,"DELTAREVOCATIONLIST","","",44,N],[18,"DMDNAME","","",44,N],[18,"PSEUDONYM","","",44,N],[18,"ROLE","","",44,N],[18,"X500ALGORITHMS","","",44,N],[18,"RSA","","",44,N],[18,"MDC2WITHRSA","","",44,N],[18,"MDC2","","",44,N],[18,"ID_CE","","",44,N],[18,"SUBJECT_DIRECTORY_ATTRIBUTES","","",44,N],[18,"SUBJECT_KEY_IDENTIFIER","","",44,N],[18,"KEY_USAGE","","",44,N],[18,"PRIVATE_KEY_USAGE_PERIOD","","",44,N],[18,"SUBJECT_ALT_NAME","","",44,N],[18,"ISSUER_ALT_NAME","","",44,N],[18,"BASIC_CONSTRAINTS","","",44,N],[18,"CRL_NUMBER","","",44,N],[18,"CRL_REASON","","",44,N],[18,"INVALIDITY_DATE","","",44,N],[18,"DELTA_CRL","","",44,N],[18,"ISSUING_DISTRIBUTION_POINT","","",44,N],[18,"CERTIFICATE_ISSUER","","",44,N],[18,"NAME_CONSTRAINTS","","",44,N],[18,"CRL_DISTRIBUTION_POINTS","","",44,N],[18,"CERTIFICATE_POLICIES","","",44,N],[18,"ANY_POLICY","","",44,N],[18,"POLICY_MAPPINGS","","",44,N],[18,"AUTHORITY_KEY_IDENTIFIER","","",44,N],[18,"POLICY_CONSTRAINTS","","",44,N],[18,"EXT_KEY_USAGE","","",44,N],[18,"FRESHEST_CRL","","",44,N],[18,"INHIBIT_ANY_POLICY","","",44,N],[18,"TARGET_INFORMATION","","",44,N],[18,"NO_REV_AVAIL","","",44,N],[18,"ANYEXTENDEDKEYUSAGE","","",44,N],[18,"NETSCAPE","","",44,N],[18,"NETSCAPE_CERT_EXTENSION","","",44,N],[18,"NETSCAPE_DATA_TYPE","","",44,N],[18,"NETSCAPE_CERT_TYPE","","",44,N],[18,"NETSCAPE_BASE_URL","","",44,N],[18,"NETSCAPE_REVOCATION_URL","","",44,N],[18,"NETSCAPE_CA_REVOCATION_URL","","",44,N],[18,"NETSCAPE_RENEWAL_URL","","",44,N],[18,"NETSCAPE_CA_POLICY_URL","","",44,N],[18,"NETSCAPE_SSL_SERVER_NAME","","",44,N],[18,"NETSCAPE_COMMENT","","",44,N],[18,"NETSCAPE_CERT_SEQUENCE","","",44,N],[18,"NS_SGC","","",44,N],[18,"ORG","","",44,N],[18,"DOD","","",44,N],[18,"IANA","","",44,N],[18,"DIRECTORY","","",44,N],[18,"MANAGEMENT","","",44,N],[18,"EXPERIMENTAL","","",44,N],[18,"PRIVATE","","",44,N],[18,"SECURITY","","",44,N],[18,"SNMPV2","","",44,N],[18,"MAIL","","",44,N],[18,"ENTERPRISES","","",44,N],[18,"DCOBJECT","","",44,N],[18,"MIME_MHS","","",44,N],[18,"MIME_MHS_HEADINGS","","",44,N],[18,"MIME_MHS_BODIES","","",44,N],[18,"ID_HEX_PARTIAL_MESSAGE","","",44,N],[18,"ID_HEX_MULTIPART_MESSAGE","","",44,N],[18,"ZLIB_COMPRESSION","","",44,N],[18,"AES_128_ECB","","",44,N],[18,"AES_128_CBC","","",44,N],[18,"AES_128_OFB128","","",44,N],[18,"AES_128_CFB128","","",44,N],[18,"ID_AES128_WRAP","","",44,N],[18,"AES_128_GCM","","",44,N],[18,"AES_128_CCM","","",44,N],[18,"ID_AES128_WRAP_PAD","","",44,N],[18,"AES_192_ECB","","",44,N],[18,"AES_192_CBC","","",44,N],[18,"AES_192_OFB128","","",44,N],[18,"AES_192_CFB128","","",44,N],[18,"ID_AES192_WRAP","","",44,N],[18,"AES_192_GCM","","",44,N],[18,"AES_192_CCM","","",44,N],[18,"ID_AES192_WRAP_PAD","","",44,N],[18,"AES_256_ECB","","",44,N],[18,"AES_256_CBC","","",44,N],[18,"AES_256_OFB128","","",44,N],[18,"AES_256_CFB128","","",44,N],[18,"ID_AES256_WRAP","","",44,N],[18,"AES_256_GCM","","",44,N],[18,"AES_256_CCM","","",44,N],[18,"ID_AES256_WRAP_PAD","","",44,N],[18,"AES_128_CFB1","","",44,N],[18,"AES_192_CFB1","","",44,N],[18,"AES_256_CFB1","","",44,N],[18,"AES_128_CFB8","","",44,N],[18,"AES_192_CFB8","","",44,N],[18,"AES_256_CFB8","","",44,N],[18,"AES_128_CTR","","",44,N],[18,"AES_192_CTR","","",44,N],[18,"AES_256_CTR","","",44,N],[18,"AES_128_XTS","","",44,N],[18,"AES_256_XTS","","",44,N],[18,"DES_CFB1","","",44,N],[18,"DES_CFB8","","",44,N],[18,"DES_EDE3_CFB1","","",44,N],[18,"DES_EDE3_CFB8","","",44,N],[18,"SHA256","","",44,N],[18,"SHA384","","",44,N],[18,"SHA512","","",44,N],[18,"SHA224","","",44,N],[18,"DSA_WITH_SHA224","","",44,N],[18,"DSA_WITH_SHA256","","",44,N],[18,"HOLD_INSTRUCTION_CODE","","",44,N],[18,"HOLD_INSTRUCTION_NONE","","",44,N],[18,"HOLD_INSTRUCTION_CALL_ISSUER","","",44,N],[18,"HOLD_INSTRUCTION_REJECT","","",44,N],[18,"DATA","","",44,N],[18,"PSS","","",44,N],[18,"UCL","","",44,N],[18,"PILOT","","",44,N],[18,"PILOTATTRIBUTETYPE","","",44,N],[18,"PILOTATTRIBUTESYNTAX","","",44,N],[18,"PILOTOBJECTCLASS","","",44,N],[18,"PILOTGROUPS","","",44,N],[18,"IA5STRINGSYNTAX","","",44,N],[18,"CASEIGNOREIA5STRINGSYNTAX","","",44,N],[18,"PILOTOBJECT","","",44,N],[18,"PILOTPERSON","","",44,N],[18,"ACCOUNT","","",44,N],[18,"DOCUMENT","","",44,N],[18,"ROOM","","",44,N],[18,"DOCUMENTSERIES","","",44,N],[18,"DOMAIN","","",44,N],[18,"RFC822LOCALPART","","",44,N],[18,"DNSDOMAIN","","",44,N],[18,"DOMAINRELATEDOBJECT","","",44,N],[18,"FRIENDLYCOUNTRY","","",44,N],[18,"SIMPLESECURITYOBJECT","","",44,N],[18,"PILOTORGANIZATION","","",44,N],[18,"PILOTDSA","","",44,N],[18,"QUALITYLABELLEDDATA","","",44,N],[18,"USERID","","",44,N],[18,"TEXTENCODEDORADDRESS","","",44,N],[18,"RFC822MAILBOX","","",44,N],[18,"INFO","","",44,N],[18,"FAVOURITEDRINK","","",44,N],[18,"ROOMNUMBER","","",44,N],[18,"PHOTO","","",44,N],[18,"USERCLASS","","",44,N],[18,"HOST","","",44,N],[18,"MANAGER","","",44,N],[18,"DOCUMENTIDENTIFIER","","",44,N],[18,"DOCUMENTTITLE","","",44,N],[18,"DOCUMENTVERSION","","",44,N],[18,"DOCUMENTAUTHOR","","",44,N],[18,"DOCUMENTLOCATION","","",44,N],[18,"HOMETELEPHONENUMBER","","",44,N],[18,"SECRETARY","","",44,N],[18,"OTHERMAILBOX","","",44,N],[18,"LASTMODIFIEDTIME","","",44,N],[18,"LASTMODIFIEDBY","","",44,N],[18,"DOMAINCOMPONENT","","",44,N],[18,"ARECORD","","",44,N],[18,"PILOTATTRIBUTETYPE27","","",44,N],[18,"MXRECORD","","",44,N],[18,"NSRECORD","","",44,N],[18,"SOARECORD","","",44,N],[18,"CNAMERECORD","","",44,N],[18,"ASSOCIATEDDOMAIN","","",44,N],[18,"ASSOCIATEDNAME","","",44,N],[18,"HOMEPOSTALADDRESS","","",44,N],[18,"PERSONALTITLE","","",44,N],[18,"MOBILETELEPHONENUMBER","","",44,N],[18,"PAGERTELEPHONENUMBER","","",44,N],[18,"FRIENDLYCOUNTRYNAME","","",44,N],[18,"ORGANIZATIONALSTATUS","","",44,N],[18,"JANETMAILBOX","","",44,N],[18,"MAILPREFERENCEOPTION","","",44,N],[18,"BUILDINGNAME","","",44,N],[18,"DSAQUALITY","","",44,N],[18,"SINGLELEVELQUALITY","","",44,N],[18,"SUBTREEMINIMUMQUALITY","","",44,N],[18,"SUBTREEMAXIMUMQUALITY","","",44,N],[18,"PERSONALSIGNATURE","","",44,N],[18,"DITREDIRECT","","",44,N],[18,"AUDIO","","",44,N],[18,"DOCUMENTPUBLISHER","","",44,N],[18,"ID_SET","","",44,N],[18,"SET_CTYPE","","",44,N],[18,"SET_MSGEXT","","",44,N],[18,"SET_ATTR","","",44,N],[18,"SET_POLICY","","",44,N],[18,"SET_CERTEXT","","",44,N],[18,"SET_BRAND","","",44,N],[18,"SETCT_PANDATA","","",44,N],[18,"SETCT_PANTOKEN","","",44,N],[18,"SETCT_PANONLY","","",44,N],[18,"SETCT_OIDATA","","",44,N],[18,"SETCT_PI","","",44,N],[18,"SETCT_PIDATA","","",44,N],[18,"SETCT_PIDATAUNSIGNED","","",44,N],[18,"SETCT_HODINPUT","","",44,N],[18,"SETCT_AUTHRESBAGGAGE","","",44,N],[18,"SETCT_AUTHREVREQBAGGAGE","","",44,N],[18,"SETCT_AUTHREVRESBAGGAGE","","",44,N],[18,"SETCT_CAPTOKENSEQ","","",44,N],[18,"SETCT_PINITRESDATA","","",44,N],[18,"SETCT_PI_TBS","","",44,N],[18,"SETCT_PRESDATA","","",44,N],[18,"SETCT_AUTHREQTBS","","",44,N],[18,"SETCT_AUTHRESTBS","","",44,N],[18,"SETCT_AUTHRESTBSX","","",44,N],[18,"SETCT_AUTHTOKENTBS","","",44,N],[18,"SETCT_CAPTOKENDATA","","",44,N],[18,"SETCT_CAPTOKENTBS","","",44,N],[18,"SETCT_ACQCARDCODEMSG","","",44,N],[18,"SETCT_AUTHREVREQTBS","","",44,N],[18,"SETCT_AUTHREVRESDATA","","",44,N],[18,"SETCT_AUTHREVRESTBS","","",44,N],[18,"SETCT_CAPREQTBS","","",44,N],[18,"SETCT_CAPREQTBSX","","",44,N],[18,"SETCT_CAPRESDATA","","",44,N],[18,"SETCT_CAPREVREQTBS","","",44,N],[18,"SETCT_CAPREVREQTBSX","","",44,N],[18,"SETCT_CAPREVRESDATA","","",44,N],[18,"SETCT_CREDREQTBS","","",44,N],[18,"SETCT_CREDREQTBSX","","",44,N],[18,"SETCT_CREDRESDATA","","",44,N],[18,"SETCT_CREDREVREQTBS","","",44,N],[18,"SETCT_CREDREVREQTBSX","","",44,N],[18,"SETCT_CREDREVRESDATA","","",44,N],[18,"SETCT_PCERTREQDATA","","",44,N],[18,"SETCT_PCERTRESTBS","","",44,N],[18,"SETCT_BATCHADMINREQDATA","","",44,N],[18,"SETCT_BATCHADMINRESDATA","","",44,N],[18,"SETCT_CARDCINITRESTBS","","",44,N],[18,"SETCT_MEAQCINITRESTBS","","",44,N],[18,"SETCT_REGFORMRESTBS","","",44,N],[18,"SETCT_CERTREQDATA","","",44,N],[18,"SETCT_CERTREQTBS","","",44,N],[18,"SETCT_CERTRESDATA","","",44,N],[18,"SETCT_CERTINQREQTBS","","",44,N],[18,"SETCT_ERRORTBS","","",44,N],[18,"SETCT_PIDUALSIGNEDTBE","","",44,N],[18,"SETCT_PIUNSIGNEDTBE","","",44,N],[18,"SETCT_AUTHREQTBE","","",44,N],[18,"SETCT_AUTHRESTBE","","",44,N],[18,"SETCT_AUTHRESTBEX","","",44,N],[18,"SETCT_AUTHTOKENTBE","","",44,N],[18,"SETCT_CAPTOKENTBE","","",44,N],[18,"SETCT_CAPTOKENTBEX","","",44,N],[18,"SETCT_ACQCARDCODEMSGTBE","","",44,N],[18,"SETCT_AUTHREVREQTBE","","",44,N],[18,"SETCT_AUTHREVRESTBE","","",44,N],[18,"SETCT_AUTHREVRESTBEB","","",44,N],[18,"SETCT_CAPREQTBE","","",44,N],[18,"SETCT_CAPREQTBEX","","",44,N],[18,"SETCT_CAPRESTBE","","",44,N],[18,"SETCT_CAPREVREQTBE","","",44,N],[18,"SETCT_CAPREVREQTBEX","","",44,N],[18,"SETCT_CAPREVRESTBE","","",44,N],[18,"SETCT_CREDREQTBE","","",44,N],[18,"SETCT_CREDREQTBEX","","",44,N],[18,"SETCT_CREDRESTBE","","",44,N],[18,"SETCT_CREDREVREQTBE","","",44,N],[18,"SETCT_CREDREVREQTBEX","","",44,N],[18,"SETCT_CREDREVRESTBE","","",44,N],[18,"SETCT_BATCHADMINREQTBE","","",44,N],[18,"SETCT_BATCHADMINRESTBE","","",44,N],[18,"SETCT_REGFORMREQTBE","","",44,N],[18,"SETCT_CERTREQTBE","","",44,N],[18,"SETCT_CERTREQTBEX","","",44,N],[18,"SETCT_CERTRESTBE","","",44,N],[18,"SETCT_CRLNOTIFICATIONTBS","","",44,N],[18,"SETCT_CRLNOTIFICATIONRESTBS","","",44,N],[18,"SETCT_BCIDISTRIBUTIONTBS","","",44,N],[18,"SETEXT_GENCRYPT","","",44,N],[18,"SETEXT_MIAUTH","","",44,N],[18,"SETEXT_PINSECURE","","",44,N],[18,"SETEXT_PINANY","","",44,N],[18,"SETEXT_TRACK2","","",44,N],[18,"SETEXT_CV","","",44,N],[18,"SET_POLICY_ROOT","","",44,N],[18,"SETCEXT_HASHEDROOT","","",44,N],[18,"SETCEXT_CERTTYPE","","",44,N],[18,"SETCEXT_MERCHDATA","","",44,N],[18,"SETCEXT_CCERTREQUIRED","","",44,N],[18,"SETCEXT_TUNNELING","","",44,N],[18,"SETCEXT_SETEXT","","",44,N],[18,"SETCEXT_SETQUALF","","",44,N],[18,"SETCEXT_PGWYCAPABILITIES","","",44,N],[18,"SETCEXT_TOKENIDENTIFIER","","",44,N],[18,"SETCEXT_TRACK2DATA","","",44,N],[18,"SETCEXT_TOKENTYPE","","",44,N],[18,"SETCEXT_ISSUERCAPABILITIES","","",44,N],[18,"SETATTR_CERT","","",44,N],[18,"SETATTR_PGWYCAP","","",44,N],[18,"SETATTR_TOKENTYPE","","",44,N],[18,"SETATTR_ISSCAP","","",44,N],[18,"SET_ROOTKEYTHUMB","","",44,N],[18,"SET_ADDPOLICY","","",44,N],[18,"SETATTR_TOKEN_EMV","","",44,N],[18,"SETATTR_TOKEN_B0PRIME","","",44,N],[18,"SETATTR_ISSCAP_CVM","","",44,N],[18,"SETATTR_ISSCAP_T2","","",44,N],[18,"SETATTR_ISSCAP_SIG","","",44,N],[18,"SETATTR_GENCRYPTGRM","","",44,N],[18,"SETATTR_T2ENC","","",44,N],[18,"SETATTR_T2CLEARTXT","","",44,N],[18,"SETATTR_TOKICCSIG","","",44,N],[18,"SETATTR_SECDEVSIG","","",44,N],[18,"SET_BRAND_IATA_ATA","","",44,N],[18,"SET_BRAND_DINERS","","",44,N],[18,"SET_BRAND_AMERICANEXPRESS","","",44,N],[18,"SET_BRAND_JCB","","",44,N],[18,"SET_BRAND_VISA","","",44,N],[18,"SET_BRAND_MASTERCARD","","",44,N],[18,"SET_BRAND_NOVUS","","",44,N],[18,"DES_CDMF","","",44,N],[18,"RSAOAEPENCRYPTIONSET","","",44,N],[18,"IPSEC3","","",44,N],[18,"IPSEC4","","",44,N],[18,"WHIRLPOOL","","",44,N],[18,"CRYPTOPRO","","",44,N],[18,"CRYPTOCOM","","",44,N],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_2001","","",44,N],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_94","","",44,N],[18,"ID_GOSTR3411_94","","",44,N],[18,"ID_HMACGOSTR3411_94","","",44,N],[18,"ID_GOSTR3410_2001","","",44,N],[18,"ID_GOSTR3410_94","","",44,N],[18,"ID_GOST28147_89","","",44,N],[18,"GOST89_CNT","","",44,N],[18,"ID_GOST28147_89_MAC","","",44,N],[18,"ID_GOSTR3411_94_PRF","","",44,N],[18,"ID_GOSTR3410_2001DH","","",44,N],[18,"ID_GOSTR3410_94DH","","",44,N],[18,"ID_GOST28147_89_CRYPTOPRO_KEYMESHING","","",44,N],[18,"ID_GOST28147_89_NONE_KEYMESHING","","",44,N],[18,"ID_GOSTR3411_94_TESTPARAMSET","","",44,N],[18,"ID_GOSTR3411_94_CRYPTOPROPARAMSET","","",44,N],[18,"ID_GOST28147_89_TESTPARAMSET","","",44,N],[18,"ID_GOST28147_89_CRYPTOPRO_A_PARAMSET","","",44,N],[18,"ID_GOST28147_89_CRYPTOPRO_B_PARAMSET","","",44,N],[18,"ID_GOST28147_89_CRYPTOPRO_C_PARAMSET","","",44,N],[18,"ID_GOST28147_89_CRYPTOPRO_D_PARAMSET","","",44,N],[18,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_1_PARAMSET","","",44,N],[18,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_0_PARAMSET","","",44,N],[18,"ID_GOST28147_89_CRYPTOPRO_RIC_1_PARAMSET","","",44,N],[18,"ID_GOSTR3410_94_TESTPARAMSET","","",44,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_A_PARAMSET","","",44,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_B_PARAMSET","","",44,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_C_PARAMSET","","",44,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_D_PARAMSET","","",44,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHA_PARAMSET","","",44,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHB_PARAMSET","","",44,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHC_PARAMSET","","",44,N],[18,"ID_GOSTR3410_2001_TESTPARAMSET","","",44,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_A_PARAMSET","","",44,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_B_PARAMSET","","",44,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_C_PARAMSET","","",44,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_XCHA_PARAMSET","","",44,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_XCHB_PARAMSET","","",44,N],[18,"ID_GOSTR3410_94_A","","",44,N],[18,"ID_GOSTR3410_94_ABIS","","",44,N],[18,"ID_GOSTR3410_94_B","","",44,N],[18,"ID_GOSTR3410_94_BBIS","","",44,N],[18,"ID_GOST28147_89_CC","","",44,N],[18,"ID_GOSTR3410_94_CC","","",44,N],[18,"ID_GOSTR3410_2001_CC","","",44,N],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_94_CC","","",44,N],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_2001_CC","","",44,N],[18,"ID_GOSTR3410_2001_PARAMSET_CC","","",44,N],[18,"CAMELLIA_128_CBC","","",44,N],[18,"CAMELLIA_192_CBC","","",44,N],[18,"CAMELLIA_256_CBC","","",44,N],[18,"ID_CAMELLIA128_WRAP","","",44,N],[18,"ID_CAMELLIA192_WRAP","","",44,N],[18,"ID_CAMELLIA256_WRAP","","",44,N],[18,"CAMELLIA_128_ECB","","",44,N],[18,"CAMELLIA_128_OFB128","","",44,N],[18,"CAMELLIA_128_CFB128","","",44,N],[18,"CAMELLIA_192_ECB","","",44,N],[18,"CAMELLIA_192_OFB128","","",44,N],[18,"CAMELLIA_192_CFB128","","",44,N],[18,"CAMELLIA_256_ECB","","",44,N],[18,"CAMELLIA_256_OFB128","","",44,N],[18,"CAMELLIA_256_CFB128","","",44,N],[18,"CAMELLIA_128_CFB1","","",44,N],[18,"CAMELLIA_192_CFB1","","",44,N],[18,"CAMELLIA_256_CFB1","","",44,N],[18,"CAMELLIA_128_CFB8","","",44,N],[18,"CAMELLIA_192_CFB8","","",44,N],[18,"CAMELLIA_256_CFB8","","",44,N],[18,"KISA","","",44,N],[18,"SEED_ECB","","",44,N],[18,"SEED_CBC","","",44,N],[18,"SEED_CFB128","","",44,N],[18,"SEED_OFB128","","",44,N],[18,"HMAC","","",44,N],[18,"CMAC","","",44,N],[18,"RC4_HMAC_MD5","","",44,N],[18,"AES_128_CBC_HMAC_SHA1","","",44,N],[18,"AES_192_CBC_HMAC_SHA1","","",44,N],[18,"AES_256_CBC_HMAC_SHA1","","",44,N],[0,"ocsp","openssl","",N,N],[3,"OcspFlag","openssl::ocsp","",N,N],[3,"OcspResponseStatus","","",N,N],[3,"OcspCertStatus","","",N,N],[3,"OcspRevokedStatus","","",N,N],[3,"OcspStatus","","",N,N],[12,"status","","The overall status of the response.",45,N],[12,"reason","","If `status` is `CERT_STATUS_REVOKED`, the reason for the revocation.",45,N],[12,"revocation_time","","If `status` is `CERT_STATUS_REVOKED`, the time at which the certificate was revoked.",45,N],[12,"this_update","","The time that this revocation check was performed.",45,N],[12,"next_update","","The time at which this revocation check expires.",45,N],[3,"OcspBasicResponse","","",N,N],[3,"OcspBasicResponseRef","","",N,N],[3,"OcspCertId","","",N,N],[3,"OcspCertIdRef","","",N,N],[3,"OcspResponse","","",N,N],[3,"OcspResponseRef","","",N,N],[3,"OcspRequest","","",N,N],[3,"OcspRequestRef","","",N,N],[3,"OcspOneReq","","",N,N],[3,"OcspOneReqRef","","",N,N],[11,"eq","","",46,[[["self"],["ocspflag"]],["bool"]]],[11,"ne","","",46,[[["self"],["ocspflag"]],["bool"]]],[11,"clone","","",46,[[["self"]],["ocspflag"]]],[11,"partial_cmp","","",46,[[["self"],["ocspflag"]],["option",["ordering"]]]],[11,"lt","","",46,[[["self"],["ocspflag"]],["bool"]]],[11,"le","","",46,[[["self"],["ocspflag"]],["bool"]]],[11,"gt","","",46,[[["self"],["ocspflag"]],["bool"]]],[11,"ge","","",46,[[["self"],["ocspflag"]],["bool"]]],[11,"cmp","","",46,[[["self"],["ocspflag"]],["ordering"]]],[11,"hash","","",46,N],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[18,"NO_CERTS","","",46,N],[18,"NO_INTERN","","",46,N],[18,"NO_CHAIN","","",46,N],[18,"NO_VERIFY","","",46,N],[18,"NO_EXPLICIT","","",46,N],[18,"NO_CA_SIGN","","",46,N],[18,"NO_DELEGATED","","",46,N],[18,"NO_CHECKS","","",46,N],[18,"TRUST_OTHER","","",46,N],[18,"RESPID_KEY","","",46,N],[18,"NO_TIME","","",46,N],[11,"empty","","Returns an empty set of flags.",46,[[],["ocspflag"]]],[11,"all","","Returns the set containing all flags.",46,[[],["ocspflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",46,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",46,[[["c_ulong"]],["option",["ocspflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",46,[[["c_ulong"]],["ocspflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",46,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",46,[[["self"],["ocspflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",46,[[["self"],["ocspflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",46,[[["self"],["ocspflag"]]]],[11,"remove","","Removes the specified flags in-place.",46,[[["self"],["ocspflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",46,[[["self"],["ocspflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",46,[[["self"],["ocspflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",46,[[["self"],["ocspflag"]],["ocspflag"]]],[11,"bitor_assign","","Adds the set of flags.",46,[[["self"],["ocspflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",46,[[["self"],["ocspflag"]],["ocspflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",46,[[["self"],["ocspflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",46,[[["self"],["ocspflag"]],["ocspflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",46,[[["self"],["ocspflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",46,[[["self"],["ocspflag"]],["ocspflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",46,[[["self"],["ocspflag"]]]],[11,"not","","Returns the complement of this set of flags.",46,[[["self"]],["ocspflag"]]],[11,"extend","","",46,[[["self"],["t"]]]],[11,"from_iter","","",46,[[["t"]],["ocspflag"]]],[11,"clone","","",47,[[["self"]],["ocspresponsestatus"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"eq","","",47,[[["self"],["ocspresponsestatus"]],["bool"]]],[11,"ne","","",47,[[["self"],["ocspresponsestatus"]],["bool"]]],[11,"from_raw","","",47,[[["c_int"]],["ocspresponsestatus"]]],[11,"as_raw","","",47,[[["self"]],["c_int"]]],[18,"SUCCESSFUL","","",47,N],[18,"MALFORMED_REQUEST","","",47,N],[18,"INTERNAL_ERROR","","",47,N],[18,"TRY_LATER","","",47,N],[18,"SIG_REQUIRED","","",47,N],[18,"UNAUTHORIZED","","",47,N],[11,"clone","","",48,[[["self"]],["ocspcertstatus"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"eq","","",48,[[["self"],["ocspcertstatus"]],["bool"]]],[11,"ne","","",48,[[["self"],["ocspcertstatus"]],["bool"]]],[11,"from_raw","","",48,[[["c_int"]],["ocspcertstatus"]]],[11,"as_raw","","",48,[[["self"]],["c_int"]]],[18,"GOOD","","",48,N],[18,"REVOKED","","",48,N],[18,"UNKNOWN","","",48,N],[11,"clone","","",49,[[["self"]],["ocsprevokedstatus"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"eq","","",49,[[["self"],["ocsprevokedstatus"]],["bool"]]],[11,"ne","","",49,[[["self"],["ocsprevokedstatus"]],["bool"]]],[11,"from_raw","","",49,[[["c_int"]],["ocsprevokedstatus"]]],[11,"as_raw","","",49,[[["self"]],["c_int"]]],[18,"NO_STATUS","","",49,N],[18,"UNSPECIFIED","","",49,N],[18,"KEY_COMPROMISE","","",49,N],[18,"CA_COMPROMISE","","",49,N],[18,"AFFILIATION_CHANGED","","",49,N],[18,"STATUS_SUPERSEDED","","",49,N],[18,"STATUS_CESSATION_OF_OPERATION","","",49,N],[18,"STATUS_CERTIFICATE_HOLD","","",49,N],[18,"REMOVE_FROM_CRL","","",49,N],[11,"check_validity","","Checks validity of the `this_update` and `next_update` fields.",45,[[["self"],["u32"],["option",["u32"]]],["result",["errorstack"]]]],[11,"from_ptr","","",50,N],[11,"as_ptr","","",50,N],[11,"drop","","",50,[[["self"]]]],[11,"deref","","",50,[[["self"]],["ocspbasicresponseref"]]],[11,"deref_mut","","",50,[[["self"]],["ocspbasicresponseref"]]],[11,"borrow","","",50,[[["self"]],["ocspbasicresponseref"]]],[11,"as_ref","","",50,[[["self"]],["ocspbasicresponseref"]]],[11,"verify","","Verifies the validity of the response.",51,[[["self"],["stackref"],["x509storeref"],["ocspflag"]],["result",["errorstack"]]]],[11,"find_status","","Looks up the status for the specified certificate ID.",51,[[["self"],["ocspcertidref"]],["option",["ocspstatus"]]]],[11,"from_ptr","","",52,N],[11,"as_ptr","","",52,N],[11,"drop","","",52,[[["self"]]]],[11,"deref","","",52,[[["self"]],["ocspcertidref"]]],[11,"deref_mut","","",52,[[["self"]],["ocspcertidref"]]],[11,"borrow","","",52,[[["self"]],["ocspcertidref"]]],[11,"as_ref","","",52,[[["self"]],["ocspcertidref"]]],[11,"from_cert","","Constructs a certificate ID for certificate `subject`.",52,[[["messagedigest"],["x509ref"],["x509ref"]],["result",["ocspcertid","errorstack"]]]],[11,"from_ptr","","",53,N],[11,"as_ptr","","",53,N],[11,"drop","","",53,[[["self"]]]],[11,"deref","","",53,[[["self"]],["ocspresponseref"]]],[11,"deref_mut","","",53,[[["self"]],["ocspresponseref"]]],[11,"borrow","","",53,[[["self"]],["ocspresponseref"]]],[11,"as_ref","","",53,[[["self"]],["ocspresponseref"]]],[11,"create","","Creates an OCSP response from the status and optional body.",53,[[["ocspresponsestatus"],["option",["ocspbasicresponseref"]]],["result",["ocspresponse","errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded OCSP response.",53,N],[11,"to_der","","Serializes the response to its standard DER encoding.",54,[[["self"]],["result",["vec","errorstack"]]]],[11,"status","","Returns the status of the response.",54,[[["self"]],["ocspresponsestatus"]]],[11,"basic","","Returns the basic response.",54,[[["self"]],["result",["ocspbasicresponse","errorstack"]]]],[11,"from_ptr","","",55,N],[11,"as_ptr","","",55,N],[11,"drop","","",55,[[["self"]]]],[11,"deref","","",55,[[["self"]],["ocsprequestref"]]],[11,"deref_mut","","",55,[[["self"]],["ocsprequestref"]]],[11,"borrow","","",55,[[["self"]],["ocsprequestref"]]],[11,"as_ref","","",55,[[["self"]],["ocsprequestref"]]],[11,"new","","",55,[[],["result",["ocsprequest","errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded OCSP request.",55,N],[11,"to_der","","Serializes the request to its standard DER encoding.",56,[[["self"]],["result",["vec","errorstack"]]]],[11,"add_id","","",56,[[["self"],["ocspcertid"]],["result",["ocsponereqref","errorstack"]]]],[11,"from_ptr","","",57,N],[11,"as_ptr","","",57,N],[11,"drop","","",57,[[["self"]]]],[11,"deref","","",57,[[["self"]],["ocsponereqref"]]],[11,"deref_mut","","",57,[[["self"]],["ocsponereqref"]]],[11,"borrow","","",57,[[["self"]],["ocsponereqref"]]],[11,"as_ref","","",57,[[["self"]],["ocsponereqref"]]],[0,"pkcs12","openssl","PKCS #12 archives.",N,N],[3,"Pkcs12","openssl::pkcs12","",N,N],[3,"Pkcs12Ref","","",N,N],[3,"ParsedPkcs12","","",N,N],[12,"pkey","","",58,N],[12,"cert","","",58,N],[12,"chain","","",58,N],[3,"Pkcs12Builder","","",N,N],[11,"from_ptr","","",59,N],[11,"as_ptr","","",59,N],[11,"drop","","",59,[[["self"]]]],[11,"deref","","",59,[[["self"]],["pkcs12ref"]]],[11,"deref_mut","","",59,[[["self"]],["pkcs12ref"]]],[11,"borrow","","",59,[[["self"]],["pkcs12ref"]]],[11,"as_ref","","",59,[[["self"]],["pkcs12ref"]]],[11,"to_der","","Serializes the `Pkcs12` to its standard DER encoding.",60,[[["self"]],["result",["vec","errorstack"]]]],[11,"parse","","Extracts the contents of the `Pkcs12`.",60,[[["self"],["str"]],["result",["parsedpkcs12","errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded PKCS#12 archive.",59,N],[11,"builder","","Creates a new builder for a protected pkcs12 certificate.",59,[[],["pkcs12builder"]]],[11,"key_algorithm","","The encryption algorithm that should be used for the key",61,[[["self"],["nid"]],["self"]]],[11,"cert_algorithm","","The encryption algorithm that should be used for the cert",61,[[["self"],["nid"]],["self"]]],[11,"key_iter","","Key iteration count, default is 2048 as of this writing",61,[[["self"],["u32"]],["self"]]],[11,"mac_iter","","MAC iteration count, default is the same as key_iter.",61,[[["self"],["u32"]],["self"]]],[11,"ca","","An additional set of certificates to include in the archive beyond the one provided to `build`.",61,[[["self"],["stack",["x509"]]],["self"]]],[11,"build","","Builds the PKCS #12 object",61,[[["self"],["str"],["str"],["pkeyref"],["x509ref"]],["result",["pkcs12","errorstack"]]]],[0,"pkcs5","openssl","",N,N],[3,"KeyIvPair","openssl::pkcs5","",N,N],[12,"key","","",62,N],[12,"iv","","",62,N],[5,"bytes_to_key","","Derives a key and an IV from various parameters.",N,N],[5,"pbkdf2_hmac","","Derives a key from a password and salt using the PBKDF2-HMAC algorithm with a digest function.",N,N],[5,"scrypt","","Derives a key from a password and salt using the scrypt algorithm.",N,N],[11,"clone","","",62,[[["self"]],["keyivpair"]]],[11,"eq","","",62,[[["self"],["keyivpair"]],["bool"]]],[11,"ne","","",62,[[["self"],["keyivpair"]],["bool"]]],[11,"hash","","",62,N],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[0,"pkey","openssl","Public/private key processing.",N,N],[3,"Id","openssl::pkey","An identifier of a kind of key.",N,N],[3,"PKey","","A public or private key.",N,N],[3,"PKeyRef","","Reference to `PKey`.",N,N],[4,"Params","","A tag type indicating that a key only has parameters.",N,N],[4,"Public","","A tag type indicating that a key only has public components.",N,N],[4,"Private","","A tag type indicating that a key has private components.",N,N],[8,"HasParams","","A trait indicating that a key has parameters.",N,N],[8,"HasPublic","","A trait indicating that a key has public components.",N,N],[8,"HasPrivate","","A trait indicating that a key has private components.",N,N],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"clone","","",63,[[["self"]],["id"]]],[11,"eq","","",63,[[["self"],["id"]],["bool"]]],[11,"ne","","",63,[[["self"],["id"]],["bool"]]],[11,"from_raw","","Creates a `Id` from an integer representation.",63,[[["c_int"]],["id"]]],[11,"as_raw","","Returns the integer representation of the `Id`.",63,[[["self"]],["c_int"]]],[18,"RSA","","",63,N],[18,"HMAC","","",63,N],[18,"DSA","","",63,N],[18,"DH","","",63,N],[18,"EC","","",63,N],[11,"from_ptr","","",64,N],[11,"as_ptr","","",64,N],[11,"drop","","",64,[[["self"]]]],[11,"deref","","",64,[[["self"]],["pkeyref"]]],[11,"deref_mut","","",64,[[["self"]],["pkeyref"]]],[11,"borrow","","",64,[[["self"]],["pkeyref"]]],[11,"as_ref","","",64,[[["self"]],["pkeyref"]]],[11,"rsa","","Returns a copy of the internal RSA key.",65,[[["self"]],["result",["rsa","errorstack"]]]],[11,"dsa","","Returns a copy of the internal DSA key.",65,[[["self"]],["result",["dsa","errorstack"]]]],[11,"dh","","Returns a copy of the internal DH key.",65,[[["self"]],["result",["dh","errorstack"]]]],[11,"ec_key","","Returns a copy of the internal elliptic curve key.",65,[[["self"]],["result",["eckey","errorstack"]]]],[11,"id","","Returns the `Id` that represents the type of this key.",65,[[["self"]],["id"]]],[11,"public_key_to_pem","","Serializes the public key into a PEM-encoded SubjectPublicKeyInfo structure.",65,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded SubjectPublicKeyInfo structure.",65,[[["self"]],["result",["vec","errorstack"]]]],[11,"bits","","Returns the size of the key.",65,[[["self"]],["u32"]]],[11,"public_eq","","Compares the public component of this key with another.",65,[[["self"],["pkeyref"]],["bool"]]],[11,"private_key_to_pem_pkcs8","","Serializes the private key to a PEM-encoded PKCS#8 PrivateKeyInfo structure.",65,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_pkcs8_passphrase","","Serializes the private key to a PEM-encoded PKCS#8 EncryptedPrivateKeyInfo structure.",65,N],[11,"private_key_to_der","","Serializes the private key to a DER-encoded key type specific format.",65,[[["self"]],["result",["vec","errorstack"]]]],[11,"from_rsa","","Creates a new `PKey` containing an RSA key.",64,[[["rsa"]],["result",["pkey","errorstack"]]]],[11,"from_dsa","","Creates a new `PKey` containing a DSA key.",64,[[["dsa"]],["result",["pkey","errorstack"]]]],[11,"from_dh","","Creates a new `PKey` containing a Diffie-Hellman key.",64,[[["dh"]],["result",["pkey","errorstack"]]]],[11,"from_ec_key","","Creates a new `PKey` containing an elliptic curve key.",64,[[["eckey"]],["result",["pkey","errorstack"]]]],[11,"hmac","","Creates a new `PKey` containing an HMAC key.",64,N],[11,"cmac","","Creates a new `PKey` containing a CMAC key.",64,N],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded key type specific format.",64,N],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted key type specific format.",64,N],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted key type specific format.",64,N],[11,"private_key_from_der","","Decodes a DER-encoded private key.",64,N],[11,"private_key_from_pkcs8_callback","","Deserializes a DER-formatted PKCS#8 private key, using a callback to retrieve the password if the key is encrpyted.",64,N],[11,"private_key_from_pkcs8_passphrase","","Deserializes a DER-formatted PKCS#8 private key, using the supplied password if the key is encrypted.",64,N],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure.",64,N],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure.",64,N],[0,"rand","openssl","Utilities for secure random number generation.",N,N],[5,"rand_bytes","openssl::rand","Fill buffer with cryptographically strong pseudo-random bytes.",N,N],[0,"rsa","openssl","Rivest–Shamir–Adleman cryptosystem",N,N],[3,"Padding","openssl::rsa","Type of encryption padding to use.",N,N],[3,"Rsa","","An RSA key.",N,N],[3,"RsaRef","","Reference to `RSA`",N,N],[3,"RsaPrivateKeyBuilder","","",N,N],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"clone","","",66,[[["self"]],["padding"]]],[11,"eq","","",66,[[["self"],["padding"]],["bool"]]],[11,"ne","","",66,[[["self"],["padding"]],["bool"]]],[11,"from_raw","","Creates a `Padding` from an integer representation.",66,[[["c_int"]],["padding"]]],[11,"as_raw","","Returns the integer representation of `Padding`.",66,[[["self"]],["c_int"]]],[18,"NONE","","",66,N],[18,"PKCS1","","",66,N],[18,"PKCS1_OAEP","","",66,N],[18,"PKCS1_PSS","","",66,N],[11,"from_ptr","","",67,N],[11,"as_ptr","","",67,N],[11,"drop","","",67,[[["self"]]]],[11,"deref","","",67,[[["self"]],["rsaref"]]],[11,"deref_mut","","",67,[[["self"]],["rsaref"]]],[11,"borrow","","",67,[[["self"]],["rsaref"]]],[11,"as_ref","","",67,[[["self"]],["rsaref"]]],[11,"clone","","",67,[[["self"]],["rsa"]]],[11,"to_owned","","",68,[[["self"]],["rsa"]]],[11,"private_key_to_pem","","Serializes the private key to a PEM-encoded PKCS#1 RSAPrivateKey structure.",68,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.",68,N],[11,"private_key_to_der","","Serializes the private key to a DER-encoded PKCS#1 RSAPrivateKey structure.",68,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_decrypt","","Decrypts data using the private key, returning the number of decrypted bytes.",68,N],[11,"private_encrypt","","Encrypts data using the private key, returning the number of encrypted bytes.",68,N],[11,"d","","Returns a reference to the private exponent of the key.",68,[[["self"]],["bignumref"]]],[11,"p","","Returns a reference to the first factor of the exponent of the key.",68,[[["self"]],["option",["bignumref"]]]],[11,"q","","Returns a reference to the second factor of the exponent of the key.",68,[[["self"]],["option",["bignumref"]]]],[11,"dmp1","","Returns a reference to the first exponent used for CRT calculations.",68,[[["self"]],["option",["bignumref"]]]],[11,"dmq1","","Returns a reference to the second exponent used for CRT calculations.",68,[[["self"]],["option",["bignumref"]]]],[11,"iqmp","","Returns a reference to the coefficient used for CRT calculations.",68,[[["self"]],["option",["bignumref"]]]],[11,"public_key_to_pem","","Serializes the public key into a PEM-encoded SubjectPublicKeyInfo structure.",68,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded SubjectPublicKeyInfo structure.",68,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_pem_pkcs1","","Serializes the public key into a PEM-encoded PKCS#1 RSAPublicKey structure.",68,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der_pkcs1","","Serializes the public key into a DER-encoded PKCS#1 RSAPublicKey structure.",68,[[["self"]],["result",["vec","errorstack"]]]],[11,"size","","Returns the size of the modulus in bytes.",68,[[["self"]],["u32"]]],[11,"public_decrypt","","Decrypts data using the public key, returning the number of decrypted bytes.",68,N],[11,"public_encrypt","","Encrypts data using the public key, returning the number of encrypted bytes.",68,N],[11,"n","","Returns a reference to the modulus of the key.",68,[[["self"]],["bignumref"]]],[11,"e","","Returns a reference to the public exponent of the key.",68,[[["self"]],["bignumref"]]],[11,"from_public_components","","Creates a new RSA key with only public components.",67,[[["bignum"],["bignum"]],["result",["rsa","errorstack"]]]],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure containing an RSA key.",67,N],[11,"public_key_from_pem_pkcs1","","Decodes a PEM-encoded PKCS#1 RSAPublicKey structure.",67,N],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure containing an RSA key.",67,N],[11,"public_key_from_der_pkcs1","","Decodes a DER-encoded PKCS#1 RSAPublicKey structure.",67,N],[11,"new","","Creates a new `RsaPrivateKeyBuilder`.",69,[[["bignum"],["bignum"],["bignum"]],["result",["rsaprivatekeybuilder","errorstack"]]]],[11,"set_factors","","Sets the factors of the Rsa key.",69,[[["self"],["bignum"],["bignum"]],["result",["rsaprivatekeybuilder","errorstack"]]]],[11,"set_crt_params","","Sets the Chinese Remainder Theorem params of the Rsa key.",69,[[["self"],["bignum"],["bignum"],["bignum"]],["result",["rsaprivatekeybuilder","errorstack"]]]],[11,"build","","Returns the Rsa key.",69,[[["self"]],["rsa",["private"]]]],[11,"from_private_components","","Creates a new RSA key with private components (public components are assumed).",67,[[["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"]],["result",["rsa","errorstack"]]]],[11,"generate","","Generates a public/private key pair with the specified size.",67,[[["u32"]],["result",["rsa","errorstack"]]]],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded PKCS#1 RSAPrivateKey structure.",67,N],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.",67,N],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.",67,N],[11,"private_key_from_der","","Decodes a DER-encoded PKCS#1 RSAPrivateKey structure.",67,N],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[0,"sha","openssl","The SHA family of hashes.",N,N],[3,"Sha1","openssl::sha","An object which calculates a SHA1 hash of some data.",N,N],[3,"Sha224","","An object which calculates a SHA224 hash of some data.",N,N],[3,"Sha256","","An object which calculates a SHA256 hash of some data.",N,N],[3,"Sha384","","An object which calculates a SHA384 hash of some data.",N,N],[3,"Sha512","","An object which calculates a SHA512 hash of some data.",N,N],[5,"sha1","","Computes the SHA1 hash of some data.",N,N],[5,"sha224","","Computes the SHA224 hash of some data.",N,N],[5,"sha256","","Computes the SHA256 hash of some data.",N,N],[5,"sha384","","Computes the SHA384 hash of some data.",N,N],[5,"sha512","","Computes the SHA512 hash of some data.",N,N],[11,"new","","Creates a new hasher.",70,[[],["sha1"]]],[11,"update","","Feeds some data into the hasher.",70,N],[11,"finish","","Returns the hash of the data.",70,N],[11,"new","","Creates a new hasher.",71,[[],["sha224"]]],[11,"update","","Feeds some data into the hasher.",71,N],[11,"finish","","Returns the hash of the data.",71,N],[11,"new","","Creates a new hasher.",72,[[],["sha256"]]],[11,"update","","Feeds some data into the hasher.",72,N],[11,"finish","","Returns the hash of the data.",72,N],[11,"new","","Creates a new hasher.",73,[[],["sha384"]]],[11,"update","","Feeds some data into the hasher.",73,N],[11,"finish","","Returns the hash of the data.",73,N],[11,"new","","Creates a new hasher.",74,[[],["sha512"]]],[11,"update","","Feeds some data into the hasher.",74,N],[11,"finish","","Returns the hash of the data.",74,N],[0,"sign","openssl","Message signatures.",N,N],[3,"RsaPssSaltlen","openssl::sign","Salt lengths that must be used with `set_rsa_pss_saltlen`.",N,N],[3,"Signer","","A type which computes cryptographic signatures of data.",N,N],[3,"Verifier","","",N,N],[11,"custom","","Sets the salt length to the given value.",75,[[["c_int"]],["rsapsssaltlen"]]],[18,"DIGEST_LENGTH","","The salt length is set to the digest length. Corresponds to the special value `-1`.",75,N],[18,"MAXIMUM_LENGTH","","The salt length is set to the maximum permissible value. Corresponds to the special value `-2`.",75,N],[11,"drop","","",76,[[["self"]]]],[11,"new","","Creates a new `Signer`.",76,[[["messagedigest"],["pkeyref"]],["result",["signer","errorstack"]]]],[11,"new_without_digest","","Creates a new `Signer` without a digest.",76,[[["pkeyref"]],["result",["signer","errorstack"]]]],[11,"new_intern","","",76,[[["option",["messagedigest"]],["pkeyref"]],["result",["signer","errorstack"]]]],[11,"rsa_padding","","Returns the RSA padding mode in use.",76,[[["self"]],["result",["padding","errorstack"]]]],[11,"set_rsa_padding","","Sets the RSA padding mode.",76,[[["self"],["padding"]],["result",["errorstack"]]]],[11,"set_rsa_pss_saltlen","","Sets the RSA PSS salt length.",76,[[["self"],["rsapsssaltlen"]],["result",["errorstack"]]]],[11,"set_rsa_mgf1_md","","Sets the RSA MGF1 algorithm.",76,[[["self"],["messagedigest"]],["result",["errorstack"]]]],[11,"update","","Feeds more data into the `Signer`.",76,N],[11,"len","","Computes an upper bound on the signature length.",76,[[["self"]],["result",["usize","errorstack"]]]],[11,"sign","","Writes the signature into the provided buffer, returning the number of bytes written.",76,N],[11,"sign_to_vec","","Returns the signature.",76,[[["self"]],["result",["vec","errorstack"]]]],[11,"write","","",76,N],[11,"flush","","",76,[[["self"]],["result"]]],[11,"drop","","",77,[[["self"]]]],[11,"new","","Creates a new `Verifier`.",77,[[["messagedigest"],["pkeyref"]],["result",["verifier","errorstack"]]]],[11,"rsa_padding","","Returns the RSA padding mode in use.",77,[[["self"]],["result",["padding","errorstack"]]]],[11,"set_rsa_padding","","Sets the RSA padding mode.",77,[[["self"],["padding"]],["result",["errorstack"]]]],[11,"set_rsa_pss_saltlen","","Sets the RSA PSS salt length.",77,[[["self"],["rsapsssaltlen"]],["result",["errorstack"]]]],[11,"set_rsa_mgf1_md","","Sets the RSA MGF1 algorithm.",77,[[["self"],["messagedigest"]],["result",["errorstack"]]]],[11,"update","","Feeds more data into the `Verifier`.",77,N],[11,"verify","","Determines if the data fed into the `Verifier` matches the provided signature.",77,N],[11,"write","","",77,N],[11,"flush","","",77,[[["self"]],["result"]]],[0,"ssl","openssl","SSL/TLS support.",N,N],[3,"ConnectConfiguration","openssl::ssl","A type which allows for configuration of a client-side TLS session before connection.",N,N],[3,"SslAcceptor","","A type which wraps server-side streams in a TLS session.",N,N],[3,"SslAcceptorBuilder","","A builder for `SslAcceptor`s.",N,N],[3,"SslConnector","","A type which wraps client-side streams in a TLS session.",N,N],[3,"SslConnectorBuilder","","A builder for `SslConnector`s.",N,N],[3,"Error","","An SSL error.",N,N],[3,"ErrorCode","","An error code returned from SSL functions.",N,N],[3,"SslOptions","","Options controlling the behavior of an `SslContext`.",N,N],[3,"SslMode","","Options controlling the behavior of an `SslContext`.",N,N],[3,"SslMethod","","A type specifying the kind of protocol an `SslContext` will speak.",N,N],[3,"SslVerifyMode","","Options controling the behavior of certificate verification.",N,N],[3,"SslSessionCacheMode","","Options controlling the behavior of session caching.",N,N],[3,"SslFiletype","","An identifier of the format of a certificate or key file.",N,N],[3,"StatusType","","An identifier of a certificate status type.",N,N],[3,"NameType","","An identifier of a session name type.",N,N],[3,"SniError","","An error returned from the SNI callback.",N,N],[3,"SslAlert","","An SSL/TLS alert.",N,N],[3,"AlpnError","","An error returned from an ALPN selection callback.",N,N],[3,"SslVersion","","An SSL/TLS protocol version.",N,N],[3,"SslContextBuilder","","A builder for `SslContext`s.",N,N],[3,"SslContext","","A context object for TLS streams.",N,N],[3,"SslContextRef","","Reference to [`SslContext`]",N,N],[3,"CipherBits","","Information about the state of a cipher.",N,N],[12,"secret","","The number of secret bits used for the cipher.",78,N],[12,"algorithm","","The number of bits processed by the chosen algorithm.",78,N],[3,"SslCipher","","Information about a cipher.",N,N],[3,"SslCipherRef","","Reference to an [`SslCipher`].",N,N],[3,"SslSession","","An encoded SSL session.",N,N],[3,"SslSessionRef","","Reference to [`SslSession`].",N,N],[3,"Ssl","","The state of an SSL/TLS session.",N,N],[3,"SslRef","","Reference to an [`Ssl`].",N,N],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",N,N],[3,"SslStream","","A TLS session over a stream.",N,N],[3,"SslStreamBuilder","","A partially constructed `SslStream`, useful for unusual handshakes.",N,N],[4,"HandshakeError","","An error or intermediate state after a TLS handshake attempt.",N,N],[13,"SetupFailure","","Setup failed.",79,N],[13,"Failure","","The handshake failed.",79,N],[13,"WouldBlock","","The handshake encountered a `WouldBlock` error midway through.",79,N],[4,"ShutdownResult","","The result of a shutdown request.",N,N],[13,"Sent","","A close notify message has been sent to the peer.",80,N],[13,"Received","","A close notify response message has been received from the peer.",80,N],[5,"select_next_proto","","A standard implementation of protocol selection for Application Layer Protocol Negotiation (ALPN).",N,N],[5,"get_new_idx","","",N,[[["crypto_ex_free"]],["c_int"]]],[5,"get_new_ssl_idx","","",N,[[["crypto_ex_free"]],["c_int"]]],[11,"clone","","",81,[[["self"]],["sslconnector"]]],[11,"builder","","Creates a new builder for TLS connections.",81,[[["sslmethod"]],["result",["sslconnectorbuilder","errorstack"]]]],[11,"connect","","Initiates a client-side TLS session on a stream.",81,[[["self"],["str"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"configure","","Returns a structure allowing for configuration of a single TLS session before connection.",81,[[["self"]],["result",["connectconfiguration","errorstack"]]]],[11,"build","","Consumes the builder, returning an `SslConnector`.",82,[[["self"]],["sslconnector"]]],[11,"deref","","",82,[[["self"]],["sslcontextbuilder"]]],[11,"deref_mut","","",82,[[["self"]],["sslcontextbuilder"]]],[11,"use_server_name_indication","","A builder-style version of `set_use_server_name_indication`.",83,[[["self"],["bool"]],["connectconfiguration"]]],[11,"set_use_server_name_indication","","Configures the use of Server Name Indication (SNI) when connecting.",83,[[["self"],["bool"]]]],[11,"verify_hostname","","A builder-style version of `set_verify_hostname`.",83,[[["self"],["bool"]],["connectconfiguration"]]],[11,"set_verify_hostname","","Configures the use of hostname verification when connecting.",83,[[["self"],["bool"]]]],[11,"connect","","Initiates a client-side TLS session on a stream.",83,[[["self"],["str"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"deref","","",83,[[["self"]],["sslref"]]],[11,"deref_mut","","",83,[[["self"]],["sslref"]]],[11,"clone","","",84,[[["self"]],["sslacceptor"]]],[11,"mozilla_intermediate","","Creates a new builder configured to connect to non-legacy clients. This should generally be considered a reasonable default choice.",84,[[["sslmethod"]],["result",["sslacceptorbuilder","errorstack"]]]],[11,"mozilla_modern","","Creates a new builder configured to connect to modern clients.",84,[[["sslmethod"]],["result",["sslacceptorbuilder","errorstack"]]]],[11,"accept","","Initiates a server-side TLS session on a stream.",84,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"build","","Consumes the builder, returning a `SslAcceptor`.",85,[[["self"]],["sslacceptor"]]],[11,"deref","","",85,[[["self"]],["sslcontextbuilder"]]],[11,"deref_mut","","",85,[[["self"]],["sslcontextbuilder"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"clone","","",86,[[["self"]],["errorcode"]]],[11,"eq","","",86,[[["self"],["errorcode"]],["bool"]]],[11,"ne","","",86,[[["self"],["errorcode"]],["bool"]]],[11,"from_raw","","",86,[[["c_int"]],["errorcode"]]],[11,"as_raw","","",86,[[["self"]],["c_int"]]],[18,"ZERO_RETURN","","The SSL session has been closed.",86,N],[18,"WANT_READ","","An attempt to read data from the underlying socket returned `WouldBlock`.",86,N],[18,"WANT_WRITE","","An attempt to write data to the underlying socket returned `WouldBlock`.",86,N],[18,"SYSCALL","","A non-recoverable IO error occurred.",86,N],[18,"SSL","","An error occurred in the SSL library.",86,N],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"code","","",87,[[["self"]],["errorcode"]]],[11,"io_error","","",87,[[["self"]],["option",["error"]]]],[11,"into_io_error","","",87,[[["self"]],["result",["error","error"]]]],[11,"ssl_error","","",87,[[["self"]],["option",["errorstack"]]]],[11,"from","","",87,[[["errorstack"]],["error"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"description","","",87,[[["self"]],["str"]]],[11,"cause","","",87,[[["self"]],["option",["error"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"description","","",79,[[["self"]],["str"]]],[11,"cause","","",79,[[["self"]],["option",["stderror"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"from","","",79,[[["errorstack"]],["handshakeerror"]]],[11,"eq","","",88,[[["self"],["ssloptions"]],["bool"]]],[11,"ne","","",88,[[["self"],["ssloptions"]],["bool"]]],[11,"clone","","",88,[[["self"]],["ssloptions"]]],[11,"partial_cmp","","",88,[[["self"],["ssloptions"]],["option",["ordering"]]]],[11,"lt","","",88,[[["self"],["ssloptions"]],["bool"]]],[11,"le","","",88,[[["self"],["ssloptions"]],["bool"]]],[11,"gt","","",88,[[["self"],["ssloptions"]],["bool"]]],[11,"ge","","",88,[[["self"],["ssloptions"]],["bool"]]],[11,"cmp","","",88,[[["self"],["ssloptions"]],["ordering"]]],[11,"hash","","",88,N],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[18,"DONT_INSERT_EMPTY_FRAGMENTS","","Disables a countermeasure against an SSLv3/TLSv1.0 vulnerability affecting CBC ciphers.",88,N],[18,"ALL","","A \"reasonable default\" set of options which enables compatibility flags.",88,N],[18,"NO_QUERY_MTU","","Do not query the MTU.",88,N],[18,"COOKIE_EXCHANGE","","Enables Cookie Exchange as described in [RFC 4347 Section 4.2.1].",88,N],[18,"NO_TICKET","","Disables the use of session tickets for session resumption.",88,N],[18,"NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","Always start a new session when performing a renegotiation on the server side.",88,N],[18,"NO_COMPRESSION","","Disables the use of TLS compression.",88,N],[18,"ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","Allow legacy insecure renegotiation with servers or clients that do not support secure renegotiation.",88,N],[18,"SINGLE_ECDH_USE","","Creates a new key for each session when using ECDHE.",88,N],[18,"SINGLE_DH_USE","","Creates a new key for each session when using DHE.",88,N],[18,"CIPHER_SERVER_PREFERENCE","","Use the server's preferences rather than the client's when selecting a cipher.",88,N],[18,"TLS_ROLLBACK_BUG","","Disables version rollback attach detection.",88,N],[18,"NO_SSLV2","","Disables the use of SSLv2.",88,N],[18,"NO_SSLV3","","Disables the use of SSLv3.",88,N],[18,"NO_TLSV1","","Disables the use of TLSv1.0.",88,N],[18,"NO_TLSV1_1","","Disables the use of TLSv1.1.",88,N],[18,"NO_TLSV1_2","","Disables the use of TLSv1.2.",88,N],[18,"NO_DTLSV1","","Disables the use of DTLSv1.0",88,N],[18,"NO_DTLSV1_2","","Disables the use of DTLSv1.2.",88,N],[18,"NO_SSL_MASK","","Disables the use of all (D)TLS protocol versions.",88,N],[11,"empty","","Returns an empty set of flags.",88,[[],["ssloptions"]]],[11,"all","","Returns the set containing all flags.",88,[[],["ssloptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",88,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",88,[[["c_ulong"]],["option",["ssloptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",88,[[["c_ulong"]],["ssloptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",88,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",88,[[["self"],["ssloptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",88,[[["self"],["ssloptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",88,[[["self"],["ssloptions"]]]],[11,"remove","","Removes the specified flags in-place.",88,[[["self"],["ssloptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",88,[[["self"],["ssloptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",88,[[["self"],["ssloptions"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",88,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"bitor_assign","","Adds the set of flags.",88,[[["self"],["ssloptions"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",88,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"bitxor_assign","","Toggles the set of flags.",88,[[["self"],["ssloptions"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",88,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",88,[[["self"],["ssloptions"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",88,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"sub_assign","","Disables all flags enabled in the set.",88,[[["self"],["ssloptions"]]]],[11,"not","","Returns the complement of this set of flags.",88,[[["self"]],["ssloptions"]]],[11,"extend","","",88,[[["self"],["t"]]]],[11,"from_iter","","",88,[[["t"]],["ssloptions"]]],[11,"eq","","",89,[[["self"],["sslmode"]],["bool"]]],[11,"ne","","",89,[[["self"],["sslmode"]],["bool"]]],[11,"clone","","",89,[[["self"]],["sslmode"]]],[11,"partial_cmp","","",89,[[["self"],["sslmode"]],["option",["ordering"]]]],[11,"lt","","",89,[[["self"],["sslmode"]],["bool"]]],[11,"le","","",89,[[["self"],["sslmode"]],["bool"]]],[11,"gt","","",89,[[["self"],["sslmode"]],["bool"]]],[11,"ge","","",89,[[["self"],["sslmode"]],["bool"]]],[11,"cmp","","",89,[[["self"],["sslmode"]],["ordering"]]],[11,"hash","","",89,N],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[18,"ENABLE_PARTIAL_WRITE","","Enables \"short writes\".",89,N],[18,"ACCEPT_MOVING_WRITE_BUFFER","","Disables a check that the data buffer has not moved between calls when operating in a nonblocking context.",89,N],[18,"AUTO_RETRY","","Enables automatic retries after TLS session events such as renegotiations or heartbeats.",89,N],[18,"NO_AUTO_CHAIN","","Disables automatic chain building when verifying a peer's certificate.",89,N],[18,"RELEASE_BUFFERS","","Release memory buffers when the session does not need them.",89,N],[18,"SEND_FALLBACK_SCSV","","Sends the fake `TLS_FALLBACK_SCSV` cipher suite in the ClientHello message of a handshake.",89,N],[11,"empty","","Returns an empty set of flags.",89,[[],["sslmode"]]],[11,"all","","Returns the set containing all flags.",89,[[],["sslmode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",89,[[["self"]],["c_long"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",89,[[["c_long"]],["option",["sslmode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",89,[[["c_long"]],["sslmode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",89,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",89,[[["self"],["sslmode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",89,[[["self"],["sslmode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",89,[[["self"],["sslmode"]]]],[11,"remove","","Removes the specified flags in-place.",89,[[["self"],["sslmode"]]]],[11,"toggle","","Toggles the specified flags in-place.",89,[[["self"],["sslmode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",89,[[["self"],["sslmode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",89,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitor_assign","","Adds the set of flags.",89,[[["self"],["sslmode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",89,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitxor_assign","","Toggles the set of flags.",89,[[["self"],["sslmode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",89,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",89,[[["self"],["sslmode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",89,[[["self"],["sslmode"]],["sslmode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",89,[[["self"],["sslmode"]]]],[11,"not","","Returns the complement of this set of flags.",89,[[["self"]],["sslmode"]]],[11,"extend","","",89,[[["self"],["t"]]]],[11,"from_iter","","",89,[[["t"]],["sslmode"]]],[11,"clone","","",90,[[["self"]],["sslmethod"]]],[11,"tls","","Support all versions of the TLS protocol.",90,[[],["sslmethod"]]],[11,"dtls","","Support all versions of the DTLS protocol.",90,[[],["sslmethod"]]],[11,"from_ptr","","Constructs an `SslMethod` from a pointer to the underlying OpenSSL value.",90,N],[11,"as_ptr","","Returns a pointer to the underlying OpenSSL value.",90,N],[11,"eq","","",91,[[["self"],["sslverifymode"]],["bool"]]],[11,"ne","","",91,[[["self"],["sslverifymode"]],["bool"]]],[11,"clone","","",91,[[["self"]],["sslverifymode"]]],[11,"partial_cmp","","",91,[[["self"],["sslverifymode"]],["option",["ordering"]]]],[11,"lt","","",91,[[["self"],["sslverifymode"]],["bool"]]],[11,"le","","",91,[[["self"],["sslverifymode"]],["bool"]]],[11,"gt","","",91,[[["self"],["sslverifymode"]],["bool"]]],[11,"ge","","",91,[[["self"],["sslverifymode"]],["bool"]]],[11,"cmp","","",91,[[["self"],["sslverifymode"]],["ordering"]]],[11,"hash","","",91,N],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[18,"PEER","","Verifies that the peer's certificate is trusted.",91,N],[18,"NONE","","Disables verification of the peer's certificate.",91,N],[18,"FAIL_IF_NO_PEER_CERT","","On the server side, abort the handshake if the client did not send a certificate.",91,N],[11,"empty","","Returns an empty set of flags.",91,[[],["sslverifymode"]]],[11,"all","","Returns the set containing all flags.",91,[[],["sslverifymode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",91,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",91,[[["i32"]],["option",["sslverifymode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",91,[[["i32"]],["sslverifymode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",91,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",91,[[["self"],["sslverifymode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",91,[[["self"],["sslverifymode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",91,[[["self"],["sslverifymode"]]]],[11,"remove","","Removes the specified flags in-place.",91,[[["self"],["sslverifymode"]]]],[11,"toggle","","Toggles the specified flags in-place.",91,[[["self"],["sslverifymode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",91,[[["self"],["sslverifymode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",91,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitor_assign","","Adds the set of flags.",91,[[["self"],["sslverifymode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",91,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitxor_assign","","Toggles the set of flags.",91,[[["self"],["sslverifymode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",91,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",91,[[["self"],["sslverifymode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",91,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",91,[[["self"],["sslverifymode"]]]],[11,"not","","Returns the complement of this set of flags.",91,[[["self"]],["sslverifymode"]]],[11,"extend","","",91,[[["self"],["t"]]]],[11,"from_iter","","",91,[[["t"]],["sslverifymode"]]],[11,"eq","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"ne","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"clone","","",92,[[["self"]],["sslsessioncachemode"]]],[11,"partial_cmp","","",92,[[["self"],["sslsessioncachemode"]],["option",["ordering"]]]],[11,"lt","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"le","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"gt","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"ge","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"cmp","","",92,[[["self"],["sslsessioncachemode"]],["ordering"]]],[11,"hash","","",92,N],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[18,"OFF","","No session caching for the client or server takes place.",92,N],[18,"CLIENT","","Enable session caching on the client side.",92,N],[18,"SERVER","","Enable session caching on the server side.",92,N],[18,"BOTH","","Enable session caching on both the client and server side.",92,N],[18,"NO_AUTO_CLEAR","","Disable automatic removal of expired sessions from the session cache.",92,N],[18,"NO_INTERNAL_LOOKUP","","Disable use of the internal session cache for session lookups.",92,N],[18,"NO_INTERNAL_STORE","","Disable use of the internal session cache for session storage.",92,N],[18,"NO_INTERNAL","","Disable use of the internal session cache for storage and lookup.",92,N],[11,"empty","","Returns an empty set of flags.",92,[[],["sslsessioncachemode"]]],[11,"all","","Returns the set containing all flags.",92,[[],["sslsessioncachemode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[["self"]],["c_long"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",92,[[["c_long"]],["option",["sslsessioncachemode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",92,[[["c_long"]],["sslsessioncachemode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["self"],["sslsessioncachemode"]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["self"],["sslsessioncachemode"]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["self"],["sslsessioncachemode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",92,[[["self"],["sslsessioncachemode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",92,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitor_assign","","Adds the set of flags.",92,[[["self"],["sslsessioncachemode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitxor_assign","","Toggles the set of flags.",92,[[["self"],["sslsessioncachemode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",92,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",92,[[["self"],["sslsessioncachemode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",92,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",92,[[["self"],["sslsessioncachemode"]]]],[11,"not","","Returns the complement of this set of flags.",92,[[["self"]],["sslsessioncachemode"]]],[11,"extend","","",92,[[["self"],["t"]]]],[11,"from_iter","","",92,[[["t"]],["sslsessioncachemode"]]],[11,"clone","","",93,[[["self"]],["sslfiletype"]]],[11,"from_raw","","Constructs an `SslFiletype` from a raw OpenSSL value.",93,[[["c_int"]],["sslfiletype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",93,[[["self"]],["c_int"]]],[18,"PEM","","The PEM format.",93,N],[18,"ASN1","","The ASN1 format.",93,N],[11,"clone","","",94,[[["self"]],["statustype"]]],[11,"from_raw","","Constructs a `StatusType` from a raw OpenSSL value.",94,[[["c_int"]],["statustype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",94,[[["self"]],["c_int"]]],[18,"OCSP","","An OSCP status.",94,N],[11,"clone","","",95,[[["self"]],["nametype"]]],[11,"from_raw","","Constructs a `StatusType` from a raw OpenSSL value.",95,[[["c_int"]],["statustype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",95,[[["self"]],["c_int"]]],[18,"HOST_NAME","","A host name.",95,N],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"clone","","",96,[[["self"]],["snierror"]]],[11,"eq","","",96,[[["self"],["snierror"]],["bool"]]],[11,"ne","","",96,[[["self"],["snierror"]],["bool"]]],[18,"ALERT_FATAL","","Abort the handshake with a fatal alert.",96,N],[18,"ALERT_WARNING","","Send a warning alert to the client and continue the handshake.",96,N],[18,"NOACK","","",96,N],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"clone","","",97,[[["self"]],["sslalert"]]],[11,"eq","","",97,[[["self"],["sslalert"]],["bool"]]],[11,"ne","","",97,[[["self"],["sslalert"]],["bool"]]],[18,"UNRECOGNIZED_NAME","","Alert 112 - `unrecognized_name`.",97,N],[18,"ILLEGAL_PARAMETER","","",97,N],[18,"DECODE_ERROR","","",97,N],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"clone","","",98,[[["self"]],["alpnerror"]]],[11,"eq","","",98,[[["self"],["alpnerror"]],["bool"]]],[11,"ne","","",98,[[["self"],["alpnerror"]],["bool"]]],[18,"ALERT_FATAL","","Terminate the handshake with a fatal alert.",98,N],[18,"NOACK","","Do not select a protocol, but continue the handshake.",98,N],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"clone","","",99,[[["self"]],["sslversion"]]],[11,"eq","","",99,[[["self"],["sslversion"]],["bool"]]],[11,"ne","","",99,[[["self"],["sslversion"]],["bool"]]],[18,"SSL3","","SSLv3",99,N],[18,"TLS1","","TLSv1.0",99,N],[18,"TLS1_1","","TLSv1.1",99,N],[18,"TLS1_2","","TLSv1.2",99,N],[11,"new","","Creates a new `SslContextBuilder`.",100,[[["sslmethod"]],["result",["sslcontextbuilder","errorstack"]]]],[11,"from_ptr","","Creates an `SslContextBuilder` from a pointer to a raw OpenSSL value.",100,N],[11,"as_ptr","","Returns a pointer to the raw OpenSSL value.",100,N],[11,"set_verify","","Configures the certificate verification method for new connections.",100,[[["self"],["sslverifymode"]]]],[11,"set_verify_callback","","Configures the certificate verification method for new connections and registers a verification callback.",100,[[["self"],["sslverifymode"],["f"]]]],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections.",100,[[["self"],["f"]]]],[11,"set_verify_depth","","Sets the certificate verification depth.",100,[[["self"],["u32"]]]],[11,"set_verify_cert_store","","Sets a custom certificate store for verifying peer certificates.",100,[[["self"],["x509store"]],["result",["errorstack"]]]],[11,"set_read_ahead","","Controls read ahead behavior.",100,[[["self"],["bool"]]]],[11,"set_mode","","Sets the mode used by the context, returning the previous mode.",100,[[["self"],["sslmode"]],["sslmode"]]],[11,"set_tmp_dh","","Sets the parameters to be used during ephemeral Diffie-Hellman key exchange.",100,[[["self"],["dhref"]],["result",["errorstack"]]]],[11,"set_tmp_dh_callback","","Sets the callback which will generate parameters to be used during ephemeral Diffie-Hellman key exchange.",100,[[["self"],["f"]]]],[11,"set_tmp_ecdh","","Sets the parameters to be used during ephemeral elliptic curve Diffie-Hellman key exchange.",100,[[["self"],["eckeyref"]],["result",["errorstack"]]]],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",100,[[["self"]],["result",["errorstack"]]]],[11,"set_ca_file","","Loads trusted root certificates from a file.",100,[[["self"],["p"]],["result",["errorstack"]]]],[11,"set_client_ca_list","","Sets the list of CA names sent to the client.",100,[[["self"],["stack",["x509name"]]]]],[11,"set_session_id_context","","Set the context identifier for sessions.",100,N],[11,"set_certificate_file","","Loads a leaf certificate from a file.",100,[[["self"],["p"],["sslfiletype"]],["result",["errorstack"]]]],[11,"set_certificate_chain_file","","Loads a certificate chain from a file.",100,[[["self"],["p"]],["result",["errorstack"]]]],[11,"set_certificate","","Sets the leaf certificate.",100,[[["self"],["x509ref"]],["result",["errorstack"]]]],[11,"add_extra_chain_cert","","Appends a certificate to the certificate chain.",100,[[["self"],["x509"]],["result",["errorstack"]]]],[11,"set_private_key_file","","Loads the private key from a file.",100,[[["self"],["p"],["sslfiletype"]],["result",["errorstack"]]]],[11,"set_private_key","","Sets the private key.",100,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"set_cipher_list","","Sets the list of supported ciphers for protocols before TLSv1.3.",100,[[["self"],["str"]],["result",["errorstack"]]]],[11,"set_options","","Sets the options used by the context, returning the old set.",100,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"options","","Returns the options used by the context.",100,[[["self"]],["ssloptions"]]],[11,"clear_options","","Clears the options used by the context, returning the old set.",100,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"set_min_proto_version","","Sets the minimum supported protocol version.",100,[[["self"],["option",["sslversion"]]],["result",["errorstack"]]]],[11,"set_max_proto_version","","Sets the maximum supported protocol version.",100,[[["self"],["option",["sslversion"]]],["result",["errorstack"]]]],[11,"min_proto_version","","Gets the minimum supported protocol version.",100,[[["self"]],["option",["sslversion"]]]],[11,"max_proto_version","","Gets the maximum supported protocol version.",100,[[["self"]],["option",["sslversion"]]]],[11,"set_alpn_protos","","Sets the protocols to sent to the server for Application Layer Protocol Negotiation (ALPN).",100,N],[11,"set_alpn_select_callback","","Sets the callback used by a server to select a protocol for Application Layer Protocol Negotiation (ALPN).",100,[[["self"],["f"]]]],[11,"check_private_key","","Checks for consistency between the private key and certificate.",100,[[["self"]],["result",["errorstack"]]]],[11,"cert_store","","Returns a shared reference to the context's certificate store.",100,[[["self"]],["x509storebuilderref"]]],[11,"cert_store_mut","","Returns a mutable reference to the context's certificate store.",100,[[["self"]],["x509storebuilderref"]]],[11,"set_status_callback","","Sets the callback dealing with OCSP stapling.",100,[[["self"],["f"]],["result",["errorstack"]]]],[11,"set_psk_client_callback","","Sets the callback for providing an identity and pre-shared key for a TLS-PSK client.",100,[[["self"],["f"]]]],[11,"set_psk_callback","","",100,[[["self"],["f"]]]],[11,"set_psk_server_callback","","Sets the callback for providing an identity and pre-shared key for a TLS-PSK server.",100,[[["self"],["f"]]]],[11,"set_new_session_callback","","Sets the callback which is called when new sessions are negotiated.",100,[[["self"],["f"]]]],[11,"set_remove_session_callback","","Sets the callback which is called when sessions are removed from the context.",100,[[["self"],["f"]]]],[11,"set_get_session_callback","","Sets the callback which is called when a client proposed to resume a session but it was not found in the internal cache.",100,[[["self"],["f"]]]],[11,"set_session_cache_mode","","Sets the session caching mode use for connections made with the context.",100,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"set_cookie_generate_cb","","Sets the callback for generating a DTLSv1 cookie",100,[[["self"],["f"]]]],[11,"set_cookie_verify_cb","","Sets the callback for verifying a DTLSv1 cookie",100,[[["self"],["f"]]]],[11,"set_ex_data","","Sets the extra data at the specified index.",100,[[["self"],["index",["sslcontext"]],["t"]]]],[11,"build","","Consumes the builder, returning a new `SslContext`.",100,[[["self"]],["sslcontext"]]],[11,"from_ptr","","",101,N],[11,"as_ptr","","",101,N],[11,"drop","","",101,[[["self"]]]],[11,"deref","","",101,[[["self"]],["sslcontextref"]]],[11,"deref_mut","","",101,[[["self"]],["sslcontextref"]]],[11,"borrow","","",101,[[["self"]],["sslcontextref"]]],[11,"as_ref","","",101,[[["self"]],["sslcontextref"]]],[11,"clone","","",101,[[["self"]],["self"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"builder","","Creates a new builder object for an `SslContext`.",101,[[["sslmethod"]],["result",["sslcontextbuilder","errorstack"]]]],[11,"new_ex_index","","Returns a new extra data index.",101,[[],["result",["index","errorstack"]]]],[11,"certificate","","Returns the certificate associated with this `SslContext`, if present.",102,[[["self"]],["option",["x509ref"]]]],[11,"private_key","","Returns the private key associated with this `SslContext`, if present.",102,[[["self"]],["option",["pkeyref"]]]],[11,"cert_store","","Returns a shared reference to the certificate store used for verification.",102,[[["self"]],["x509storeref"]]],[11,"extra_chain_certs","","Returns a shared reference to the stack of certificates making up the chain from the leaf.",102,[[["self"]],["stackref"]]],[11,"ex_data","","Returns a reference to the extra data at the specified index.",102,[[["self"],["index",["sslcontext"]]],["option"]]],[11,"from_ptr","","",103,N],[11,"as_ptr","","",103,N],[11,"deref","","",103,[[["self"]],["sslcipherref"]]],[11,"deref_mut","","",103,[[["self"]],["sslcipherref"]]],[11,"name","","Returns the name of the cipher.",104,[[["self"]],["str"]]],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",104,[[["self"]],["str"]]],[11,"bits","","Returns the number of bits used for the cipher.",104,[[["self"]],["cipherbits"]]],[11,"description","","Returns a textual description of the cipher.",104,[[["self"]],["string"]]],[11,"cipher_nid","","Returns the NID corresponding to the cipher.",104,[[["self"]],["option",["nid"]]]],[11,"from_ptr","","",105,N],[11,"as_ptr","","",105,N],[11,"drop","","",105,[[["self"]]]],[11,"deref","","",105,[[["self"]],["sslsessionref"]]],[11,"deref_mut","","",105,[[["self"]],["sslsessionref"]]],[11,"borrow","","",105,[[["self"]],["sslsessionref"]]],[11,"as_ref","","",105,[[["self"]],["sslsessionref"]]],[11,"clone","","",105,[[["self"]],["sslsession"]]],[11,"from_der","","Deserializes a DER-encoded session structure.",105,N],[11,"to_owned","","",106,[[["self"]],["sslsession"]]],[11,"id","","Returns the SSL session ID.",106,N],[11,"master_key_len","","Returns the length of the master key.",106,[[["self"]],["usize"]]],[11,"master_key","","Copies the master key into the provided buffer.",106,N],[11,"to_der","","Serializes the session into a DER-encoded structure.",106,[[["self"]],["result",["vec","errorstack"]]]],[11,"from_ptr","","",107,N],[11,"as_ptr","","",107,N],[11,"drop","","",107,[[["self"]]]],[11,"deref","","",107,[[["self"]],["sslref"]]],[11,"deref_mut","","",107,[[["self"]],["sslref"]]],[11,"borrow","","",107,[[["self"]],["sslref"]]],[11,"as_ref","","",107,[[["self"]],["sslref"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"new_ex_index","","Returns a new extra data index.",107,[[],["result",["index","errorstack"]]]],[11,"new","","Creates a new `Ssl`.",107,[[["sslcontext"]],["result",["ssl","errorstack"]]]],[11,"connect","","Initiates a client-side TLS handshake.",107,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"accept","","Initiates a server-side TLS handshake.",107,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"set_verify","","Like [`SslContextBuilder::set_verify`].",108,[[["self"],["sslverifymode"]]]],[11,"set_verify_callback","","Like [`SslContextBuilder::set_verify_callback`].",108,[[["self"],["sslverifymode"],["f"]]]],[11,"set_tmp_dh","","Like [`SslContextBuilder::set_tmp_dh`].",108,[[["self"],["dhref"]],["result",["errorstack"]]]],[11,"set_tmp_dh_callback","","Like [`SslContextBuilder::set_tmp_dh_callback`].",108,[[["self"],["f"]]]],[11,"set_tmp_ecdh","","Like [`SslContextBuilder::set_tmp_ecdh`].",108,[[["self"],["eckeyref"]],["result",["errorstack"]]]],[11,"set_alpn_protos","","Like [`SslContextBuilder::set_alpn_protos`].",108,N],[11,"current_cipher","","Returns the current cipher if the session is active.",108,[[["self"]],["option",["sslcipherref"]]]],[11,"state_string","","Returns a short string describing the state of the session.",108,[[["self"]],["str"]]],[11,"state_string_long","","Returns a longer string describing the state of the session.",108,[[["self"]],["str"]]],[11,"set_hostname","","Sets the host name to be sent to the server for Server Name Indication (SNI).",108,[[["self"],["str"]],["result",["errorstack"]]]],[11,"peer_certificate","","Returns the peer's certificate, if present.",108,[[["self"]],["option",["x509"]]]],[11,"peer_cert_chain","","Returns the certificate chain of the peer, if present.",108,[[["self"]],["option",["stackref"]]]],[11,"verified_chain","","Returns the verified certificate chani of the peer, including the leaf certificate.",108,[[["self"]],["option",["stackref"]]]],[11,"certificate","","Like [`SslContext::certificate`].",108,[[["self"]],["option",["x509ref"]]]],[11,"private_key","","Like [`SslContext::private_key`].",108,[[["self"]],["option",["pkeyref"]]]],[11,"version","","",108,[[["self"]],["str"]]],[11,"version2","","Returns the protocol version of the session.",108,[[["self"]],["option",["sslversion"]]]],[11,"version_str","","Returns a string describing the protocol version of the session.",108,[[["self"]],["str"]]],[11,"selected_alpn_protocol","","Returns the protocol selected via Application Layer Protocol Negotiation (ALPN).",108,[[["self"]],["option"]]],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS record.",108,[[["self"]],["usize"]]],[11,"servername","","Returns the servername sent by the client via Server Name Indication (SNI).",108,[[["self"],["nametype"]],["option",["str"]]]],[11,"servername_raw","","Returns the servername sent by the client via Server Name Indication (SNI).",108,[[["self"],["nametype"]],["option"]]],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",108,[[["self"],["sslcontextref"]],["result",["errorstack"]]]],[11,"ssl_context","","Returns the context corresponding to the current connection.",108,[[["self"]],["sslcontextref"]]],[11,"param_mut","","Returns a mutable reference to the X509 verification configuration.",108,[[["self"]],["x509verifyparamref"]]],[11,"verify_result","","Returns the certificate verification result.",108,[[["self"]],["x509verifyresult"]]],[11,"session","","Returns a shared reference to the SSL session.",108,[[["self"]],["option",["sslsessionref"]]]],[11,"client_random","","Copies the client_random value sent by the client in the TLS handshake into a buffer.",108,N],[11,"server_random","","Copies the server_random value sent by the server in the TLS handshake into a buffer.",108,N],[11,"export_keying_material","","Derives keying material for application use in accordance to RFC 5705.",108,N],[11,"set_session","","Sets the session to be used.",108,[[["self"],["sslsessionref"]],["result",["errorstack"]]]],[11,"session_reused","","Determines if the session provided to `set_session` was successfully reused.",108,[[["self"]],["bool"]]],[11,"set_status_type","","Sets the status response a client wishes the server to reply with.",108,[[["self"],["statustype"]],["result",["errorstack"]]]],[11,"ocsp_status","","Returns the server's OCSP response, if present.",108,[[["self"]],["option"]]],[11,"set_ocsp_status","","Sets the OCSP response to be returned to the client.",108,N],[11,"is_server","","Determines if this `Ssl` is configured for server-side or client-side use.",108,[[["self"]],["bool"]]],[11,"set_ex_data","","Sets the extra data at the specified index.",108,[[["self"],["index",["ssl"]],["t"]]]],[11,"ex_data","","Returns a reference to the extra data at the specified index.",108,[[["self"],["index",["ssl"]]],["option"]]],[11,"ex_data_mut","","Returns a mutable reference to the extra data at the specified index.",108,[[["self"],["index",["ssl"]]],["option"]]],[11,"finished","","Copies the contents of the last Finished message sent to the peer into the provided buffer.",108,N],[11,"peer_finished","","Copies the contents of the last Finished message received from the peer into the provided buffer.",108,N],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"get_ref","","Returns a shared reference to the inner stream.",109,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",109,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",109,[[["self"]],["sslref"]]],[11,"error","","Returns the underlying error which interrupted this handshake.",109,[[["self"]],["error"]]],[11,"into_error","","Consumes `self`, returning its error.",109,[[["self"]],["error"]]],[11,"handshake","","Restarts the handshake process.",109,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"drop","","",110,[[["self"]]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",110,N],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",110,N],[11,"shutdown","","Shuts down the session.",110,[[["self"]],["result",["shutdownresult","error"]]]],[11,"get_ref","","Returns a shared reference to the underlying stream.",110,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the underlying stream.",110,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` object associated with this stream.",110,[[["self"]],["sslref"]]],[11,"read","","",110,N],[11,"write","","",110,N],[11,"flush","","",110,[[["self"]],["result"]]],[11,"new","","Begin creating an `SslStream` atop `stream`",111,[[["ssl"],["s"]],["self"]]],[11,"set_connect_state","","Configure as an outgoing stream from a client.",111,[[["self"]]]],[11,"set_accept_state","","Configure as an incoming stream to a server.",111,[[["self"]]]],[11,"connect","","See `Ssl::connect`",111,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"accept","","See `Ssl::accept`",111,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"handshake","","Initiates the handshake.",111,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the underlying stream.",111,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the underlying stream.",111,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` object associated with this builder.",111,[[["self"]],["sslref"]]],[11,"clone","","",80,[[["self"]],["shutdownresult"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"eq","","",80,[[["self"],["shutdownresult"]],["bool"]]],[0,"stack","openssl","",N,N],[3,"Stack","openssl::stack","An owned stack of `T`.",N,N],[3,"IntoIter","","",N,N],[3,"StackRef","","",N,N],[3,"Iter","","An iterator over the stack's contents.",N,N],[3,"IterMut","","A mutable iterator over the stack's contents.",N,N],[8,"Stackable","","Trait implemented by types which can be placed in a stack.",N,N],[16,"StackType","","The C stack type for this element.",112,N],[11,"drop","","",113,[[["self"]]]],[11,"new","","",113,[[],["result",["stack","errorstack"]]]],[11,"into_iter","","",113,[[["self"]],["intoiter"]]],[11,"as_ref","","",113,[[["self"]],["stackref"]]],[11,"borrow","","",113,[[["self"]],["stackref"]]],[11,"from_ptr","","",113,N],[11,"as_ptr","","",113,N],[11,"deref","","",113,[[["self"]],["stackref"]]],[11,"deref_mut","","",113,[[["self"]],["stackref"]]],[11,"drop","","",114,[[["self"]]]],[11,"next","","",114,[[["self"]],["option"]]],[11,"size_hint","","",114,N],[11,"len","","Returns the number of items in the stack",115,[[["self"]],["usize"]]],[11,"iter","","",115,[[["self"]],["iter"]]],[11,"iter_mut","","",115,[[["self"]],["itermut"]]],[11,"get","","Returns a reference to the element at the given index in the stack or `None` if the index is out of bounds",115,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the element at the given index in the stack or `None` if the index is out of bounds",115,[[["self"],["usize"]],["option"]]],[11,"push","","Pushes a value onto the top of the stack.",115,[[["self"],["t"]],["result",["errorstack"]]]],[11,"pop","","Removes the last element from the stack and returns it.",115,[[["self"]],["option"]]],[11,"index","","",115,N],[11,"index_mut","","",115,N],[11,"next","","",116,[[["self"]],["option"]]],[11,"size_hint","","",116,N],[11,"next","","",117,[[["self"]],["option"]]],[11,"size_hint","","",117,N],[0,"string","openssl","",N,N],[3,"OpensslString","openssl::string","",N,N],[3,"OpensslStringRef","","",N,N],[11,"from_ptr","","",118,N],[11,"as_ptr","","",118,N],[11,"drop","","",118,[[["self"]]]],[11,"deref","","",118,[[["self"]],["opensslstringref"]]],[11,"deref_mut","","",118,[[["self"]],["opensslstringref"]]],[11,"borrow","","",118,[[["self"]],["opensslstringref"]]],[11,"as_ref","","",118,[[["self"]],["opensslstringref"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"deref","","",119,[[["self"]],["str"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[0,"symm","openssl","High level interface to certain symmetric ciphers.",N,N],[3,"Cipher","openssl::symm","Represents a particular cipher algorithm.",N,N],[3,"Crypter","","Represents a symmetric cipher context.",N,N],[4,"Mode","","",N,N],[13,"Encrypt","","",120,N],[13,"Decrypt","","",120,N],[5,"encrypt","","Encrypts data in one go, and returns the encrypted data.",N,N],[5,"decrypt","","Decrypts data in one go, and returns the decrypted data.",N,N],[5,"encrypt_aead","","Like `encrypt`, but for AEAD ciphers such as AES GCM.",N,N],[5,"decrypt_aead","","Like `decrypt`, but for AEAD ciphers such as AES GCM.",N,N],[11,"clone","","",120,[[["self"]],["mode"]]],[11,"clone","","",121,[[["self"]],["cipher"]]],[11,"eq","","",121,[[["self"],["cipher"]],["bool"]]],[11,"ne","","",121,[[["self"],["cipher"]],["bool"]]],[11,"from_nid","","Looks up the cipher for a certain nid.",121,[[["nid"]],["option",["cipher"]]]],[11,"aes_128_ecb","","",121,[[],["cipher"]]],[11,"aes_128_cbc","","",121,[[],["cipher"]]],[11,"aes_128_xts","","",121,[[],["cipher"]]],[11,"aes_128_ctr","","",121,[[],["cipher"]]],[11,"aes_128_cfb1","","",121,[[],["cipher"]]],[11,"aes_128_cfb128","","",121,[[],["cipher"]]],[11,"aes_128_cfb8","","",121,[[],["cipher"]]],[11,"aes_128_gcm","","",121,[[],["cipher"]]],[11,"aes_128_ccm","","",121,[[],["cipher"]]],[11,"aes_256_ecb","","",121,[[],["cipher"]]],[11,"aes_256_cbc","","",121,[[],["cipher"]]],[11,"aes_256_xts","","",121,[[],["cipher"]]],[11,"aes_256_ctr","","",121,[[],["cipher"]]],[11,"aes_256_cfb1","","",121,[[],["cipher"]]],[11,"aes_256_cfb128","","",121,[[],["cipher"]]],[11,"aes_256_cfb8","","",121,[[],["cipher"]]],[11,"aes_256_gcm","","",121,[[],["cipher"]]],[11,"aes_256_ccm","","",121,[[],["cipher"]]],[11,"bf_cbc","","",121,[[],["cipher"]]],[11,"bf_ecb","","",121,[[],["cipher"]]],[11,"bf_cfb64","","",121,[[],["cipher"]]],[11,"bf_ofb","","",121,[[],["cipher"]]],[11,"des_cbc","","",121,[[],["cipher"]]],[11,"des_ecb","","",121,[[],["cipher"]]],[11,"des_ede3","","",121,[[],["cipher"]]],[11,"des_ede3_cbc","","",121,[[],["cipher"]]],[11,"rc4","","",121,[[],["cipher"]]],[11,"chacha20","","Requires OpenSSL 1.1.0 or newer.",121,[[],["cipher"]]],[11,"chacha20_poly1305","","Requires OpenSSL 1.1.0 or newer.",121,[[],["cipher"]]],[11,"from_ptr","","",121,N],[11,"as_ptr","","",121,N],[11,"key_len","","Returns the length of keys used with this cipher.",121,[[["self"]],["usize"]]],[11,"iv_len","","Returns the length of the IV used with this cipher, or `None` if the cipher does not use an IV.",121,[[["self"]],["option",["usize"]]]],[11,"block_size","","Returns the block size of the cipher.",121,[[["self"]],["usize"]]],[11,"new","","Creates a new `Crypter`.  The initialisation vector, `iv`, is not necesarry for certain types of `Cipher`.",122,N],[11,"pad","","Enables or disables padding.",122,[[["self"],["bool"]]]],[11,"set_tag","","Sets the tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",122,N],[11,"set_tag_len","","Sets the length of the authentication tag to generate in AES CCM.",122,[[["self"],["usize"]],["result",["errorstack"]]]],[11,"set_data_len","","Feeds total plaintext length to the cipher.",122,[[["self"],["usize"]],["result",["errorstack"]]]],[11,"aad_update","","Feeds Additional Authenticated Data (AAD) through the cipher.",122,N],[11,"update","","Feeds data from `input` through the cipher, writing encrypted/decrypted bytes into `output`.",122,N],[11,"finalize","","Finishes the encryption/decryption process, writing any remaining data to `output`.",122,N],[11,"get_tag","","Retrieves the authentication tag used to authenticate ciphertext in AEAD ciphers such as AES GCM.",122,N],[11,"drop","","",122,[[["self"]]]],[0,"version","openssl","",N,N],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",N,[[],["i64"]]],[5,"version","","The text variant of the version number and the release date. For example, \"OpenSSL 0.9.5a 1 Apr 2000\".",N,[[],["str"]]],[5,"c_flags","","The compiler flags set for the compilation process in the form \"compiler: ...\" if available or \"compiler: information not available\" otherwise.",N,[[],["str"]]],[5,"built_on","","The date of the build process in the form \"built on: ...\" if available or \"built on: date not available\" otherwise.",N,[[],["str"]]],[5,"platform","","The \"Configure\" target of the library build in the form \"platform: ...\" if available or \"platform: information not available\" otherwise.",N,[[],["str"]]],[5,"dir","","The \"OPENSSLDIR\" setting of the library build in the form \"OPENSSLDIR: \"...\"\" if available or \"OPENSSLDIR: N/A\" otherwise.",N,[[],["str"]]],[0,"x509","openssl","The standard defining the format of public key certificates.",N,N],[3,"X509StoreContext","openssl::x509","An `X509` certificate store context.",N,N],[3,"X509StoreContextRef","","Reference to `X509StoreContext`.",N,N],[3,"X509Builder","","A builder used to construct an `X509`.",N,N],[3,"X509","","An `X509` public key certificate.",N,N],[3,"X509Ref","","Reference to `X509`.",N,N],[3,"X509v3Context","","A context object required to construct certain `X509` extension values.",N,N],[3,"X509Extension","","Permit additional fields to be added to an `X509` v3 certificate.",N,N],[3,"X509ExtensionRef","","Reference to `X509Extension`.",N,N],[3,"X509NameBuilder","","A builder used to construct an `X509Name`.",N,N],[3,"X509Name","","The names of an `X509` certificate.",N,N],[3,"X509NameRef","","Reference to `X509Name`.",N,N],[3,"X509NameEntries","","A type to destructure and examine an `X509Name`.",N,N],[3,"X509NameEntry","","A name entry associated with a `X509Name`.",N,N],[3,"X509NameEntryRef","","Reference to `X509NameEntry`.",N,N],[3,"X509ReqBuilder","","A builder used to construct an `X509Req`.",N,N],[3,"X509Req","","An `X509` certificate request.",N,N],[3,"X509ReqRef","","Reference to `X509Req`.",N,N],[3,"X509VerifyResult","","The result of peer certificate verification.",N,N],[3,"GeneralName","","An `X509` certificate alternative names.",N,N],[3,"GeneralNameRef","","Reference to `GeneralName`.",N,N],[3,"X509Algorithm","","An `X509` certificate signature algorithm.",N,N],[3,"X509AlgorithmRef","","Reference to `X509Algorithm`.",N,N],[0,"verify","","",N,N],[3,"X509CheckFlags","openssl::x509::verify","Flags used to check an `X509` certificate.",N,N],[3,"X509VerifyParam","","Adjust parameters associated with certificate verification.",N,N],[3,"X509VerifyParamRef","","Reference to `X509VerifyParam`.",N,N],[11,"eq","","",123,[[["self"],["x509checkflags"]],["bool"]]],[11,"ne","","",123,[[["self"],["x509checkflags"]],["bool"]]],[11,"clone","","",123,[[["self"]],["x509checkflags"]]],[11,"partial_cmp","","",123,[[["self"],["x509checkflags"]],["option",["ordering"]]]],[11,"lt","","",123,[[["self"],["x509checkflags"]],["bool"]]],[11,"le","","",123,[[["self"],["x509checkflags"]],["bool"]]],[11,"gt","","",123,[[["self"],["x509checkflags"]],["bool"]]],[11,"ge","","",123,[[["self"],["x509checkflags"]],["bool"]]],[11,"cmp","","",123,[[["self"],["x509checkflags"]],["ordering"]]],[11,"hash","","",123,N],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[18,"ALWAYS_CHECK_SUBJECT","","",123,N],[18,"NO_WILDCARDS","","",123,N],[18,"NO_PARTIAL_WILDCARDS","","",123,N],[18,"MULTI_LABEL_WILDCARDS","","",123,N],[18,"SINGLE_LABEL_SUBDOMAINS","","",123,N],[18,"NEVER_CHECK_SUBJECT","","Requires OpenSSL 1.1.0 or newer.",123,N],[18,"FLAG_NO_WILDCARDS","","",123,N],[11,"empty","","Returns an empty set of flags.",123,[[],["x509checkflags"]]],[11,"all","","Returns the set containing all flags.",123,[[],["x509checkflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",123,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",123,[[["c_uint"]],["option",["x509checkflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",123,[[["c_uint"]],["x509checkflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",123,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",123,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",123,[[["self"],["x509checkflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",123,[[["self"],["x509checkflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",123,[[["self"],["x509checkflags"]]]],[11,"remove","","Removes the specified flags in-place.",123,[[["self"],["x509checkflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",123,[[["self"],["x509checkflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",123,[[["self"],["x509checkflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",123,[[["self"],["x509checkflags"]],["x509checkflags"]]],[11,"bitor_assign","","Adds the set of flags.",123,[[["self"],["x509checkflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",123,[[["self"],["x509checkflags"]],["x509checkflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",123,[[["self"],["x509checkflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",123,[[["self"],["x509checkflags"]],["x509checkflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",123,[[["self"],["x509checkflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",123,[[["self"],["x509checkflags"]],["x509checkflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",123,[[["self"],["x509checkflags"]]]],[11,"not","","Returns the complement of this set of flags.",123,[[["self"]],["x509checkflags"]]],[11,"extend","","",123,[[["self"],["t"]]]],[11,"from_iter","","",123,[[["t"]],["x509checkflags"]]],[11,"from_ptr","","",124,N],[11,"as_ptr","","",124,N],[11,"drop","","",124,[[["self"]]]],[11,"deref","","",124,[[["self"]],["x509verifyparamref"]]],[11,"deref_mut","","",124,[[["self"]],["x509verifyparamref"]]],[11,"borrow","","",124,[[["self"]],["x509verifyparamref"]]],[11,"as_ref","","",124,[[["self"]],["x509verifyparamref"]]],[11,"set_hostflags","","Set the host flags.",125,[[["self"],["x509checkflags"]]]],[11,"set_host","","Set the expected DNS hostname.",125,[[["self"],["str"]],["result",["errorstack"]]]],[11,"set_ip","","Set the expected IPv4 or IPv6 address.",125,[[["self"],["ipaddr"]],["result",["errorstack"]]]],[0,"extension","openssl::x509","Add extensions to an `X509` certificate or certificate request. ",N,N],[3,"BasicConstraints","openssl::x509::extension","An extension which indicates whether a certificate is a CA certificate.",N,N],[3,"KeyUsage","","An extension consisting of a list of names of the permitted key usages.",N,N],[3,"ExtendedKeyUsage","","An extension consisting of a list of usages indicating purposes for which the certificate public key can be used for.",N,N],[3,"SubjectKeyIdentifier","","An extension that provides a means of identifying certificates that contain a particular public key.",N,N],[3,"AuthorityKeyIdentifier","","An extension that provides a means of identifying the public key corresponding to the private key used to sign a CRL.",N,N],[3,"SubjectAlternativeName","","An extension that allows additional identities to be bound to the subject of the certificate.",N,N],[11,"new","","Construct a new `BasicConstraints` extension.",126,[[],["basicconstraints"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be critical.",126,[[["self"]],["basicconstraints"]]],[11,"ca","","Sets the `ca` flag to `true`.",126,[[["self"]],["basicconstraints"]]],[11,"pathlen","","Sets the pathlen to an optional non-negative value. The pathlen is the maximum number of CAs that can appear below this one in a chain.",126,[[["self"],["u32"]],["basicconstraints"]]],[11,"build","","Return the `BasicConstraints` extension as an `X509Extension`.",126,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `KeyUsage` extension.",127,[[],["keyusage"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be critical.",127,[[["self"]],["keyusage"]]],[11,"digital_signature","","Sets the `digitalSignature` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"non_repudiation","","Sets the `nonRepudiation` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"key_encipherment","","Sets the `keyEncipherment` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"data_encipherment","","Sets the `dataEncipherment` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"key_agreement","","Sets the `keyAgreement` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"key_cert_sign","","Sets the `keyCertSign` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"crl_sign","","Sets the `cRLSign` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"encipher_only","","Sets the `encipherOnly` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"decipher_only","","Sets the `decipherOnly` flag to `true`.",127,[[["self"]],["keyusage"]]],[11,"build","","Return the `KeyUsage` extension as an `X509Extension`.",127,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `ExtendedKeyUsage` extension.",128,[[],["extendedkeyusage"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be critical.",128,[[["self"]],["extendedkeyusage"]]],[11,"server_auth","","Sets the `serverAuth` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"client_auth","","Sets the `clientAuth` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"code_signing","","Sets the `codeSigning` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"time_stamping","","Sets the `timeStamping` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"ms_code_ind","","Sets the `msCodeInd` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"ms_code_com","","Sets the `msCodeCom` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"ms_ctl_sign","","Sets the `msCTLSign` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"ms_sgc","","Sets the `msSGC` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"ms_efs","","Sets the `msEFS` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"ns_sgc","","Sets the `nsSGC` flag to `true`.",128,[[["self"]],["extendedkeyusage"]]],[11,"other","","Sets a flag not already defined.",128,[[["self"],["str"]],["extendedkeyusage"]]],[11,"build","","Return the `ExtendedKeyUsage` extension as an `X509Extension`.",128,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `SubjectKeyIdentifier` extension.",129,[[],["subjectkeyidentifier"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be critical.",129,[[["self"]],["subjectkeyidentifier"]]],[11,"build","","Return a `SubjectKeyIdentifier` extension as an `X509Extension`.",129,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `AuthorityKeyIdentifier` extension.",130,[[],["authoritykeyidentifier"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be critical.",130,[[["self"]],["authoritykeyidentifier"]]],[11,"keyid","","Sets the `keyid` flag.",130,[[["self"],["bool"]],["authoritykeyidentifier"]]],[11,"issuer","","Sets the `issuer` flag.",130,[[["self"],["bool"]],["authoritykeyidentifier"]]],[11,"build","","Return a `AuthorityKeyIdentifier` extension as an `X509Extension`.",130,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `SubjectAlternativeName` extension.",131,[[],["subjectalternativename"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be critical.",131,[[["self"]],["subjectalternativename"]]],[11,"email","","Sets the `email` flag.",131,[[["self"],["str"]],["subjectalternativename"]]],[11,"uri","","Sets the `uri` flag.",131,[[["self"],["str"]],["subjectalternativename"]]],[11,"dns","","Sets the `dns` flag.",131,[[["self"],["str"]],["subjectalternativename"]]],[11,"rid","","Sets the `rid` flag.",131,[[["self"],["str"]],["subjectalternativename"]]],[11,"ip","","Sets the `ip` flag.",131,[[["self"],["str"]],["subjectalternativename"]]],[11,"dir_name","","Sets the `dirName` flag.",131,[[["self"],["str"]],["subjectalternativename"]]],[11,"other_name","","Sets the `otherName` flag.",131,[[["self"],["str"]],["subjectalternativename"]]],[11,"build","","Return a `SubjectAlternativeName` extension as an `X509Extension`.",131,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[0,"store","openssl::x509","Describe a context in which to verify an `X509` certificate.",N,N],[3,"X509StoreBuilder","openssl::x509::store","A builder type used to construct an `X509Store`.",N,N],[3,"X509StoreBuilderRef","","Reference to an `X509StoreBuilder`.",N,N],[3,"X509Store","","A certificate store to hold trusted `X509` certificates.",N,N],[3,"X509StoreRef","","Reference to an `X509Store`.",N,N],[11,"from_ptr","","",132,N],[11,"as_ptr","","",132,N],[11,"drop","","",132,[[["self"]]]],[11,"deref","","",132,[[["self"]],["x509storebuilderref"]]],[11,"deref_mut","","",132,[[["self"]],["x509storebuilderref"]]],[11,"borrow","","",132,[[["self"]],["x509storebuilderref"]]],[11,"as_ref","","",132,[[["self"]],["x509storebuilderref"]]],[11,"new","","Returns a builder for a certificate store.",132,[[],["result",["x509storebuilder","errorstack"]]]],[11,"build","","Constructs the `X509Store`.",132,[[["self"]],["x509store"]]],[11,"add_cert","","Adds a certificate to the certificate store.",133,[[["self"],["x509"]],["result",["errorstack"]]]],[11,"set_default_paths","","Load certificates from their default locations.",133,[[["self"]],["result",["errorstack"]]]],[11,"from_ptr","","",134,N],[11,"as_ptr","","",134,N],[11,"drop","","",134,[[["self"]]]],[11,"deref","","",134,[[["self"]],["x509storeref"]]],[11,"deref_mut","","",134,[[["self"]],["x509storeref"]]],[11,"borrow","","",134,[[["self"]],["x509storeref"]]],[11,"as_ref","","",134,[[["self"]],["x509storeref"]]],[11,"from_ptr","openssl::x509","",135,N],[11,"as_ptr","","",135,N],[11,"drop","","",135,[[["self"]]]],[11,"deref","","",135,[[["self"]],["x509storecontextref"]]],[11,"deref_mut","","",135,[[["self"]],["x509storecontextref"]]],[11,"borrow","","",135,[[["self"]],["x509storecontextref"]]],[11,"as_ref","","",135,[[["self"]],["x509storecontextref"]]],[11,"ssl_idx","","Returns the index which can be used to obtain a reference to the `Ssl` associated with a context.",135,[[],["result",["index","errorstack"]]]],[11,"new","","Creates a new `X509StoreContext` instance.",135,[[],["result",["x509storecontext","errorstack"]]]],[11,"ex_data","","Returns application data pertaining to an `X509` store context.",136,[[["self"],["index",["x509storecontext"]]],["option"]]],[11,"error","","Returns the error code of the context.",136,[[["self"]],["x509verifyresult"]]],[11,"init","","Initializes this context with the given certificate, certificates chain and certificate store. After initializing the context, the `with_context` closure is called with the prepared context. As long as the closure is running, the context stays initialized and can be used to e.g. verify a certificate. The context will be cleaned up, after the closure finished.",136,[[["self"],["x509storeref"],["x509ref"],["stackref"],["f"]],["result",["errorstack"]]]],[11,"verify_cert","","Verifies the stored certificate.",136,[[["self"]],["result",["bool","errorstack"]]]],[11,"set_error","","Set the error code of the context.",136,[[["self"],["x509verifyresult"]]]],[11,"current_cert","","Returns a reference to the certificate which caused the error or None if no certificate is relevant to the error.",136,[[["self"]],["option",["x509ref"]]]],[11,"error_depth","","Returns a non-negative integer representing the depth in the certificate chain where the error occurred. If it is zero it occurred in the end entity certificate, one if it is the certificate which signed the end entity certificate and so on.",136,[[["self"]],["u32"]]],[11,"chain","","Returns a reference to a complete valid `X509` certificate chain.",136,[[["self"]],["option",["stackref"]]]],[11,"new","","Creates a new builder.",137,[[],["result",["x509builder","errorstack"]]]],[11,"set_not_after","","Sets the notAfter constraint on the certificate.",137,[[["self"],["asn1timeref"]],["result",["errorstack"]]]],[11,"set_not_before","","Sets the notBefore constraint on the certificate.",137,[[["self"],["asn1timeref"]],["result",["errorstack"]]]],[11,"set_version","","Sets the version of the certificate.",137,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"set_serial_number","","Sets the serial number of the certificate.",137,[[["self"],["asn1integerref"]],["result",["errorstack"]]]],[11,"set_issuer_name","","Sets the issuer name of the certificate.",137,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_subject_name","","Sets the subject name of the certificate.",137,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_pubkey","","Sets the public key associated with the certificate.",137,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"x509v3_context","","Returns a context object which is needed to create certain X509 extension values.",137,[[["self"],["option",["x509ref"]],["option",["confref"]]],["x509v3context"]]],[11,"append_extension","","Adds an X509 extension value to the certificate.",137,[[["self"],["x509extension"]],["result",["errorstack"]]]],[11,"sign","","Signs the certificate with a private key.",137,[[["self"],["pkeyref"],["messagedigest"]],["result",["errorstack"]]]],[11,"build","","Consumes the builder, returning the certificate.",137,[[["self"]],["x509"]]],[11,"from_ptr","","",138,N],[11,"as_ptr","","",138,N],[11,"drop","","",138,[[["self"]]]],[11,"deref","","",138,[[["self"]],["x509ref"]]],[11,"deref_mut","","",138,[[["self"]],["x509ref"]]],[11,"borrow","","",138,[[["self"]],["x509ref"]]],[11,"as_ref","","",138,[[["self"]],["x509ref"]]],[11,"subject_name","","Returns this certificate's subject name.",139,[[["self"]],["x509nameref"]]],[11,"issuer_name","","Returns this certificate's issuer name.",139,[[["self"]],["x509nameref"]]],[11,"subject_alt_names","","Returns this certificate's subject alternative name entries, if they exist.",139,[[["self"]],["option",["stack"]]]],[11,"issuer_alt_names","","Returns this certificate's issuer alternative name entries, if they exist.",139,[[["self"]],["option",["stack"]]]],[11,"public_key","","",139,[[["self"]],["result",["pkey","errorstack"]]]],[11,"digest","","Returns a digest of the DER representation of the certificate.",139,[[["self"],["messagedigest"]],["result",["digestbytes","errorstack"]]]],[11,"fingerprint","","",139,[[["self"],["messagedigest"]],["result",["vec","errorstack"]]]],[11,"not_after","","Returns the certificate's Not After validity period.",139,[[["self"]],["asn1timeref"]]],[11,"not_before","","Returns the certificate's Not Before validity period.",139,[[["self"]],["asn1timeref"]]],[11,"signature","","Returns the certificate's signature",139,[[["self"]],["asn1bitstringref"]]],[11,"signature_algorithm","","Returns the certificate's signature algorithm.",139,[[["self"]],["x509algorithmref"]]],[11,"ocsp_responders","","Returns the list of OCSP responder URLs specified in the certificate's Authority Information Access field.",139,[[["self"]],["result",["stack","errorstack"]]]],[11,"issued","","Checks that this certificate issued `subject`.",139,[[["self"],["x509ref"]],["x509verifyresult"]]],[11,"serial_number","","Returns this certificate's serial number.",139,[[["self"]],["asn1integerref"]]],[11,"to_pem","","Serializes the certificate into a PEM-encoded X509 structure.",139,[[["self"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes the certificate into a DER-encoded X509 structure.",139,[[["self"]],["result",["vec","errorstack"]]]],[11,"to_owned","","",139,[[["self"]],["x509"]]],[11,"builder","","Returns a new builder.",138,[[],["result",["x509builder","errorstack"]]]],[11,"from_pem","","Deserializes a PEM-encoded X509 structure.",138,N],[11,"from_der","","Deserializes a DER-encoded X509 structure.",138,N],[11,"stack_from_pem","","Deserializes a list of PEM-formatted certificates.",138,N],[11,"clone","","",138,[[["self"]],["x509"]]],[11,"as_ref","","",139,[[["self"]],["x509ref"]]],[11,"as_ptr","","",140,N],[11,"from_ptr","","",141,N],[11,"as_ptr","","",141,N],[11,"drop","","",141,[[["self"]]]],[11,"deref","","",141,[[["self"]],["x509extensionref"]]],[11,"deref_mut","","",141,[[["self"]],["x509extensionref"]]],[11,"borrow","","",141,[[["self"]],["x509extensionref"]]],[11,"as_ref","","",141,[[["self"]],["x509extensionref"]]],[11,"new","","Constructs an X509 extension value. See `man x509v3_config` for information on supported names and their value formats.",141,[[["option",["confref"]],["option",["x509v3context"]],["str"],["str"]],["result",["x509extension","errorstack"]]]],[11,"new_nid","","Constructs an X509 extension value. See `man x509v3_config` for information on supported extensions and their value formats.",141,[[["option",["confref"]],["option",["x509v3context"]],["nid"],["str"]],["result",["x509extension","errorstack"]]]],[11,"new","","Creates a new builder.",142,[[],["result",["x509namebuilder","errorstack"]]]],[11,"append_entry_by_text","","Add a field entry by str.",142,[[["self"],["str"],["str"]],["result",["errorstack"]]]],[11,"append_entry_by_nid","","Add a field entry by NID.",142,[[["self"],["nid"],["str"]],["result",["errorstack"]]]],[11,"build","","Return an `X509Name`.",142,[[["self"]],["x509name"]]],[11,"from_ptr","","",143,N],[11,"as_ptr","","",143,N],[11,"drop","","",143,[[["self"]]]],[11,"deref","","",143,[[["self"]],["x509nameref"]]],[11,"deref_mut","","",143,[[["self"]],["x509nameref"]]],[11,"borrow","","",143,[[["self"]],["x509nameref"]]],[11,"as_ref","","",143,[[["self"]],["x509nameref"]]],[11,"builder","","Returns a new builder.",143,[[],["result",["x509namebuilder","errorstack"]]]],[11,"load_client_ca_file","","Loads subject names from a file containing PEM-formatted certificates.",143,[[["p"]],["result",["stack","errorstack"]]]],[11,"entries_by_nid","","Returns the name entries by the nid.",144,[[["self"],["nid"]],["x509nameentries"]]],[11,"entries","","Returns an iterator over all `X509NameEntry` values",144,[[["self"]],["x509nameentries"]]],[11,"next","","",145,[[["self"]],["option",["x509nameentryref"]]]],[11,"from_ptr","","",146,N],[11,"as_ptr","","",146,N],[11,"drop","","",146,[[["self"]]]],[11,"deref","","",146,[[["self"]],["x509nameentryref"]]],[11,"deref_mut","","",146,[[["self"]],["x509nameentryref"]]],[11,"borrow","","",146,[[["self"]],["x509nameentryref"]]],[11,"as_ref","","",146,[[["self"]],["x509nameentryref"]]],[11,"data","","Returns the field value of an `X509NameEntry`.",147,[[["self"]],["asn1stringref"]]],[11,"object","","Returns the `Asn1Object` value of an `X509NameEntry`. This is useful for finding out about the actual `Nid` when iterating over all `X509NameEntries`.",147,[[["self"]],["asn1objectref"]]],[11,"new","","Returns a builder for a certificate request.",148,[[],["result",["x509reqbuilder","errorstack"]]]],[11,"set_version","","Set the numerical value of the version field.",148,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"set_subject_name","","Set the issuer name.",148,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_pubkey","","Set the public key.",148,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"x509v3_context","","Return an `X509v3Context`. This context object can be used to construct certain `X509` extensions.",148,[[["self"],["option",["confref"]]],["x509v3context"]]],[11,"add_extensions","","Permits any number of extension fields to be added to the certificate.",148,[[["self"],["stackref"]],["result",["errorstack"]]]],[11,"sign","","Sign the request using a private key.",148,[[["self"],["pkeyref"],["messagedigest"]],["result",["errorstack"]]]],[11,"build","","Returns the `X509Req`.",148,[[["self"]],["x509req"]]],[11,"from_ptr","","",149,N],[11,"as_ptr","","",149,N],[11,"drop","","",149,[[["self"]]]],[11,"deref","","",149,[[["self"]],["x509reqref"]]],[11,"deref_mut","","",149,[[["self"]],["x509reqref"]]],[11,"borrow","","",149,[[["self"]],["x509reqref"]]],[11,"as_ref","","",149,[[["self"]],["x509reqref"]]],[11,"builder","","A builder for `X509Req`.",149,[[],["result",["x509reqbuilder","errorstack"]]]],[11,"from_pem","","Deserializes a PEM-encoded PKCS#10 certificate request structure.",149,N],[11,"from_der","","Deserializes a DER-encoded PKCS#10 certificate request structure.",149,N],[11,"to_pem","","Serializes the certificate request to a PEM-encoded PKCS#10 structure.",150,[[["self"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes the certificate request to a DER-encoded PKCS#10 structure.",150,[[["self"]],["result",["vec","errorstack"]]]],[11,"version","","Returns the numerical value of the version field of the certificate request.",150,[[["self"]],["i32"]]],[11,"subject_name","","Returns the subject name of the certificate request.",150,[[["self"]],["x509nameref"]]],[11,"public_key","","Returns the public key of the certificate request.",150,[[["self"]],["result",["pkey","errorstack"]]]],[11,"extensions","","Returns the extensions of the certificate request.",150,[[["self"]],["result",["stack","errorstack"]]]],[11,"clone","","",151,[[["self"]],["x509verifyresult"]]],[11,"eq","","",151,[[["self"],["x509verifyresult"]],["bool"]]],[11,"ne","","",151,[[["self"],["x509verifyresult"]],["bool"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"description","","",151,[[["self"]],["str"]]],[11,"from_raw","","Creates an `X509VerifyResult` from a raw error number.",151,[[["c_int"]],["x509verifyresult"]]],[11,"as_raw","","Return the integer representation of an `X509VerifyResult`.",151,[[["self"]],["c_int"]]],[11,"error_string","","Return a human readable error string from the verification error.",151,[[["self"]],["str"]]],[18,"OK","","Successful peer certifiate verification.",151,N],[18,"APPLICATION_VERIFICATION","","Application verification failure.",151,N],[11,"from_ptr","","",152,N],[11,"as_ptr","","",152,N],[11,"drop","","",152,[[["self"]]]],[11,"deref","","",152,[[["self"]],["generalnameref"]]],[11,"deref_mut","","",152,[[["self"]],["generalnameref"]]],[11,"borrow","","",152,[[["self"]],["generalnameref"]]],[11,"as_ref","","",152,[[["self"]],["generalnameref"]]],[11,"email","","Returns the contents of this `GeneralName` if it is an `rfc822Name`.",153,[[["self"]],["option",["str"]]]],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",153,[[["self"]],["option",["str"]]]],[11,"uri","","Returns the contents of this `GeneralName` if it is an `uniformResourceIdentifier`.",153,[[["self"]],["option",["str"]]]],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",153,[[["self"]],["option"]]],[11,"from_ptr","","",154,N],[11,"as_ptr","","",154,N],[11,"drop","","",154,[[["self"]]]],[11,"deref","","",154,[[["self"]],["x509algorithmref"]]],[11,"deref_mut","","",154,[[["self"]],["x509algorithmref"]]],[11,"borrow","","",154,[[["self"]],["x509algorithmref"]]],[11,"as_ref","","",154,[[["self"]],["x509algorithmref"]]],[11,"object","","Returns the ASN.1 OID of this algorithm.",155,[[["self"]],["asn1objectref"]]],[11,"into","openssl::aes","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","openssl::asn1","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","openssl::bn","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","openssl::cms","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","openssl::conf","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"into","openssl::derive","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","openssl::dh","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","openssl::dsa","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","openssl::ec","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","openssl::ecdsa","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"into","openssl::error","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","openssl::ex_data","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","openssl::hash","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","openssl::nid","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","openssl::ocsp","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"into","openssl::pkcs12","",59,[[["self"]],["u"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","openssl::pkcs5","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into","openssl::pkey","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"into","openssl::rsa","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into","openssl::sha","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into","openssl::sign","",75,[[["self"]],["u"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into","openssl::ssl","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into","openssl::stack","",113,[[["self"]],["u"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into_iter","","",113,[[["self"]],["i"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into_iter","","",114,[[["self"]],["i"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into_iter","","",116,[[["self"]],["i"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into_iter","","",117,[[["self"]],["i"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into","openssl::string","",118,[[["self"]],["u"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"to_string","","",118,[[["self"]],["string"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"to_string","","",119,[[["self"]],["string"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"into","openssl::symm","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"into","openssl::x509","",135,[[["self"]],["u"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into_iter","","",145,[[["self"]],["i"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"to_string","","",151,[[["self"]],["string"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"into","openssl::x509::verify","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"into","openssl::x509::extension","",126,[[["self"]],["u"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into","openssl::x509::store","",132,[[["self"]],["u"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]]],"paths":[[3,"KeyError"],[3,"AesKey"],[3,"Asn1GeneralizedTime"],[3,"Asn1GeneralizedTimeRef"],[3,"Asn1Time"],[3,"Asn1TimeRef"],[3,"Asn1String"],[3,"Asn1StringRef"],[3,"Asn1Integer"],[3,"Asn1IntegerRef"],[3,"Asn1BitString"],[3,"Asn1BitStringRef"],[3,"Asn1Object"],[3,"Asn1ObjectRef"],[3,"MsbOption"],[3,"BigNumContext"],[3,"BigNum"],[3,"BigNumRef"],[3,"CMSOptions"],[3,"CmsContentInfo"],[3,"CmsContentInfoRef"],[3,"ConfMethod"],[3,"Conf"],[3,"Deriver"],[3,"Dh"],[3,"DhRef"],[3,"Dsa"],[3,"DsaRef"],[3,"PointConversionForm"],[3,"Asn1Flag"],[3,"EcGroup"],[3,"EcGroupRef"],[3,"EcPoint"],[3,"EcPointRef"],[3,"EcKey"],[3,"EcKeyRef"],[3,"EcdsaSig"],[3,"ErrorStack"],[3,"Error"],[3,"Index"],[3,"MessageDigest"],[3,"Hasher"],[3,"DigestBytes"],[3,"SignatureAlgorithms"],[3,"Nid"],[3,"OcspStatus"],[3,"OcspFlag"],[3,"OcspResponseStatus"],[3,"OcspCertStatus"],[3,"OcspRevokedStatus"],[3,"OcspBasicResponse"],[3,"OcspBasicResponseRef"],[3,"OcspCertId"],[3,"OcspResponse"],[3,"OcspResponseRef"],[3,"OcspRequest"],[3,"OcspRequestRef"],[3,"OcspOneReq"],[3,"ParsedPkcs12"],[3,"Pkcs12"],[3,"Pkcs12Ref"],[3,"Pkcs12Builder"],[3,"KeyIvPair"],[3,"Id"],[3,"PKey"],[3,"PKeyRef"],[3,"Padding"],[3,"Rsa"],[3,"RsaRef"],[3,"RsaPrivateKeyBuilder"],[3,"Sha1"],[3,"Sha224"],[3,"Sha256"],[3,"Sha384"],[3,"Sha512"],[3,"RsaPssSaltlen"],[3,"Signer"],[3,"Verifier"],[3,"CipherBits"],[4,"HandshakeError"],[4,"ShutdownResult"],[3,"SslConnector"],[3,"SslConnectorBuilder"],[3,"ConnectConfiguration"],[3,"SslAcceptor"],[3,"SslAcceptorBuilder"],[3,"ErrorCode"],[3,"Error"],[3,"SslOptions"],[3,"SslMode"],[3,"SslMethod"],[3,"SslVerifyMode"],[3,"SslSessionCacheMode"],[3,"SslFiletype"],[3,"StatusType"],[3,"NameType"],[3,"SniError"],[3,"SslAlert"],[3,"AlpnError"],[3,"SslVersion"],[3,"SslContextBuilder"],[3,"SslContext"],[3,"SslContextRef"],[3,"SslCipher"],[3,"SslCipherRef"],[3,"SslSession"],[3,"SslSessionRef"],[3,"Ssl"],[3,"SslRef"],[3,"MidHandshakeSslStream"],[3,"SslStream"],[3,"SslStreamBuilder"],[8,"Stackable"],[3,"Stack"],[3,"IntoIter"],[3,"StackRef"],[3,"Iter"],[3,"IterMut"],[3,"OpensslString"],[3,"OpensslStringRef"],[4,"Mode"],[3,"Cipher"],[3,"Crypter"],[3,"X509CheckFlags"],[3,"X509VerifyParam"],[3,"X509VerifyParamRef"],[3,"BasicConstraints"],[3,"KeyUsage"],[3,"ExtendedKeyUsage"],[3,"SubjectKeyIdentifier"],[3,"AuthorityKeyIdentifier"],[3,"SubjectAlternativeName"],[3,"X509StoreBuilder"],[3,"X509StoreBuilderRef"],[3,"X509Store"],[3,"X509StoreContext"],[3,"X509StoreContextRef"],[3,"X509Builder"],[3,"X509"],[3,"X509Ref"],[3,"X509v3Context"],[3,"X509Extension"],[3,"X509NameBuilder"],[3,"X509Name"],[3,"X509NameRef"],[3,"X509NameEntries"],[3,"X509NameEntry"],[3,"X509NameEntryRef"],[3,"X509ReqBuilder"],[3,"X509Req"],[3,"X509ReqRef"],[3,"X509VerifyResult"],[3,"GeneralName"],[3,"GeneralNameRef"],[3,"X509Algorithm"],[3,"X509AlgorithmRef"],[3,"BigNumContextRef"],[3,"ConfRef"],[3,"EcdsaSigRef"],[3,"OcspCertIdRef"],[3,"OcspOneReqRef"],[4,"Params"],[4,"Public"],[4,"Private"],[3,"X509ExtensionRef"],[3,"X509StoreRef"]]};
searchIndex["openssl_sys"]={"doc":"","items":[[3,"AES_KEY","openssl_sys","",N,N],[3,"GENERAL_NAME","","",N,N],[12,"type_","","",0,N],[12,"d","","",0,N],[3,"X509V3_CTX","","",N,N],[3,"SHA_CTX","","",N,N],[12,"h0","","",1,N],[12,"h1","","",1,N],[12,"h2","","",1,N],[12,"h3","","",1,N],[12,"h4","","",1,N],[12,"Nl","","",1,N],[12,"Nh","","",1,N],[12,"data","","",1,N],[12,"num","","",1,N],[3,"SHA256_CTX","","",N,N],[12,"h","","",2,N],[12,"Nl","","",2,N],[12,"Nh","","",2,N],[12,"data","","",2,N],[12,"num","","",2,N],[12,"md_len","","",2,N],[3,"SHA512_CTX","","",N,N],[12,"h","","",3,N],[12,"Nl","","",3,N],[12,"Nh","","",3,N],[12,"num","","",3,N],[12,"md_len","","",3,N],[3,"ERR_STRING_DATA","","",N,N],[12,"error","","",4,N],[12,"string","","",4,N],[4,"BIGNUM","","",N,N],[4,"BIO","","",N,N],[4,"BIO_METHOD","","",N,N],[4,"CRYPTO_EX_DATA","","",N,N],[4,"DH","","",N,N],[4,"DSA","","",N,N],[4,"ECDSA_SIG","","",N,N],[4,"EVP_CIPHER","","",N,N],[4,"EVP_MD_CTX","","",N,N],[4,"EVP_PKEY","","",N,N],[4,"HMAC_CTX","","",N,N],[4,"OPENSSL_STACK","","",N,N],[4,"PKCS12","","",N,N],[4,"RSA","","",N,N],[4,"SSL","","",N,N],[4,"SSL_CTX","","",N,N],[4,"SSL_SESSION","","",N,N],[4,"stack_st_ASN1_OBJECT","","",N,N],[4,"stack_st_GENERAL_NAME","","",N,N],[4,"stack_st_OPENSSL_STRING","","",N,N],[4,"stack_st_void","","",N,N],[4,"stack_st_X509","","",N,N],[4,"stack_st_X509_NAME","","",N,N],[4,"stack_st_X509_ATTRIBUTE","","",N,N],[4,"stack_st_X509_EXTENSION","","",N,N],[4,"stack_st_SSL_CIPHER","","",N,N],[4,"OPENSSL_INIT_SETTINGS","","",N,N],[4,"X509","","",N,N],[4,"X509_ALGOR","","",N,N],[4,"X509_VERIFY_PARAM","","",N,N],[4,"X509_REQ","","",N,N],[4,"ASN1_INTEGER","","",N,N],[4,"ASN1_GENERALIZEDTIME","","",N,N],[4,"ASN1_STRING","","",N,N],[4,"ASN1_BIT_STRING","","",N,N],[4,"ASN1_TIME","","",N,N],[4,"ASN1_TYPE","","",N,N],[4,"ASN1_OBJECT","","",N,N],[4,"BN_CTX","","",N,N],[4,"BN_GENCB","","",N,N],[4,"CMS_ContentInfo","","",N,N],[4,"CONF","","",N,N],[4,"CONF_METHOD","","",N,N],[4,"COMP_METHOD","","",N,N],[4,"EC_KEY","","",N,N],[4,"EC_GROUP","","",N,N],[4,"EC_METHOD","","",N,N],[4,"EC_POINT","","",N,N],[4,"ENGINE","","",N,N],[4,"EVP_CIPHER_CTX","","",N,N],[4,"EVP_MD","","",N,N],[4,"EVP_PKEY_CTX","","",N,N],[4,"OCSP_BASICRESP","","",N,N],[4,"OCSP_CERTID","","",N,N],[4,"OCSP_RESPONSE","","",N,N],[4,"OCSP_REQUEST","","",N,N],[4,"OCSP_ONEREQ","","",N,N],[4,"SSL_CIPHER","","",N,N],[4,"SSL_METHOD","","",N,N],[4,"X509_CRL","","",N,N],[4,"X509_EXTENSION","","",N,N],[4,"X509_NAME","","",N,N],[4,"X509_NAME_ENTRY","","",N,N],[4,"X509_STORE","","",N,N],[4,"X509_STORE_CTX","","",N,N],[4,"bio_st","","",N,N],[4,"DH_METHOD","","",N,N],[4,"RSA_METHOD","","",N,N],[4,"BN_MONT_CTX","","",N,N],[4,"BN_BLINDING","","",N,N],[4,"DSA_METHOD","","",N,N],[4,"EVP_PKEY_ASN1_METHOD","","",N,N],[4,"point_conversion_form_t","","",N,N],[13,"POINT_CONVERSION_COMPRESSED","","",5,N],[13,"POINT_CONVERSION_UNCOMPRESSED","","",5,N],[13,"POINT_CONVERSION_HYBRID","","",5,N],[5,"init","","",N,[[]]],[5,"SSL_CTX_set_min_proto_version","","",N,N],[5,"SSL_CTX_set_max_proto_version","","",N,N],[5,"SSL_CTX_get_min_proto_version","","",N,N],[5,"SSL_CTX_get_max_proto_version","","",N,N],[5,"SSL_set_min_proto_version","","",N,N],[5,"SSL_set_max_proto_version","","",N,N],[5,"SSL_get_min_proto_version","","",N,N],[5,"SSL_get_max_proto_version","","",N,N],[5,"BIO_get_mem_data","","",N,N],[5,"BIO_clear_retry_flags","","",N,N],[5,"BIO_set_retry_read","","",N,N],[5,"BIO_set_retry_write","","",N,N],[5,"EVP_get_digestbynid","","",N,N],[5,"EVP_PKEY_CTX_set_rsa_padding","","",N,N],[5,"EVP_PKEY_CTX_get_rsa_padding","","",N,N],[5,"EVP_PKEY_CTX_set_rsa_pss_saltlen","","",N,N],[5,"EVP_PKEY_CTX_set_rsa_mgf1_md","","",N,N],[5,"SSL_CTX_set_mode","","",N,N],[5,"SSL_CTX_set_read_ahead","","",N,N],[5,"SSL_CTX_set_tmp_dh","","",N,N],[5,"SSL_CTX_set_tmp_ecdh","","",N,N],[5,"SSL_set_tmp_dh","","",N,N],[5,"SSL_set_tmp_ecdh","","",N,N],[5,"SSL_CTX_add_extra_chain_cert","","",N,N],[5,"SSL_CTX_set0_verify_cert_store","","",N,N],[5,"SSL_CTX_set_tlsext_servername_callback","","",N,N],[5,"SSL_set_tlsext_host_name","","",N,N],[5,"SSL_set_tlsext_status_type","","",N,N],[5,"SSL_CTX_set_tlsext_status_cb","","",N,N],[5,"SSL_CTX_set_tlsext_status_arg","","",N,N],[5,"SSL_CTX_get_extra_chain_certs","","",N,N],[5,"SSL_CTX_set_session_cache_mode","","",N,N],[5,"SSL_get_tlsext_status_ocsp_resp","","",N,N],[5,"SSL_set_tlsext_status_ocsp_resp","","",N,N],[5,"ERR_GET_LIB","","",N,[[["c_ulong"]],["c_int"]]],[5,"ERR_GET_FUNC","","",N,[[["c_ulong"]],["c_int"]]],[5,"ERR_GET_REASON","","",N,[[["c_ulong"]],["c_int"]]],[5,"BIO_new","","",N,N],[5,"BIO_s_file","","",N,N],[5,"BIO_s_mem","","",N,N],[5,"BN_get_rfc2409_prime_768","","",N,N],[5,"BN_get_rfc2409_prime_1024","","",N,N],[5,"BN_get_rfc3526_prime_1536","","",N,N],[5,"BN_get_rfc3526_prime_2048","","",N,N],[5,"BN_get_rfc3526_prime_3072","","",N,N],[5,"BN_get_rfc3526_prime_4096","","",N,N],[5,"BN_get_rfc3526_prime_6144","","",N,N],[5,"BN_get_rfc3526_prime_8192","","",N,N],[5,"CRYPTO_malloc","","",N,N],[5,"CRYPTO_free","","",N,N],[5,"EVP_chacha20","","",N,N],[5,"EVP_chacha20_poly1305","","",N,N],[5,"HMAC_CTX_new","","",N,N],[5,"HMAC_CTX_free","","",N,N],[5,"OCSP_cert_to_id","","",N,N],[5,"TLS_method","","",N,N],[5,"DTLS_method","","",N,N],[5,"SSL_CIPHER_get_version","","",N,N],[5,"X509_get_subject_name","","",N,N],[5,"X509_get_issuer_name","","",N,N],[5,"X509_set1_notAfter","","",N,N],[5,"X509_set1_notBefore","","",N,N],[5,"X509_get_ext_d2i","","",N,N],[5,"X509_NAME_add_entry_by_NID","","",N,N],[5,"X509_get_signature_nid","","",N,N],[5,"X509_ALGOR_get0","","",N,N],[5,"X509_NAME_entry_count","","",N,N],[5,"X509_NAME_get_entry","","",N,N],[5,"X509_NAME_ENTRY_get_data","","",N,N],[5,"X509_NAME_ENTRY_get_object","","",N,N],[5,"X509V3_EXT_nconf_nid","","",N,N],[5,"X509V3_EXT_nconf","","",N,N],[5,"ASN1_STRING_to_UTF8","","",N,N],[5,"BN_is_negative","","",N,N],[5,"EVP_CIPHER_key_length","","",N,N],[5,"EVP_CIPHER_block_size","","",N,N],[5,"EVP_CIPHER_iv_length","","",N,N],[5,"EVP_PBE_scrypt","","",N,N],[5,"DSA_get0_pqg","","",N,N],[5,"DSA_set0_pqg","","",N,N],[5,"DSA_get0_key","","",N,N],[5,"DSA_set0_key","","",N,N],[5,"RSA_get0_key","","",N,N],[5,"RSA_get0_factors","","",N,N],[5,"RSA_get0_crt_params","","",N,N],[5,"RSA_set0_key","","",N,N],[5,"RSA_set0_factors","","",N,N],[5,"RSA_set0_crt_params","","",N,N],[5,"ASN1_STRING_get0_data","","",N,N],[5,"OPENSSL_sk_num","","",N,N],[5,"OPENSSL_sk_value","","",N,N],[5,"SSL_CTX_get_options","","",N,N],[5,"SSL_CTX_set_options","","",N,N],[5,"SSL_CTX_clear_options","","",N,N],[5,"SSL_CTX_sess_set_get_cb","","",N,N],[5,"SSL_get_client_random","","",N,N],[5,"SSL_get_server_random","","",N,N],[5,"SSL_get0_verified_chain","","",N,N],[5,"X509_getm_notAfter","","",N,N],[5,"X509_getm_notBefore","","",N,N],[5,"X509_get0_signature","","",N,N],[5,"DH_set0_pqg","","",N,N],[5,"BIO_set_init","","",N,N],[5,"BIO_set_data","","",N,N],[5,"BIO_get_data","","",N,N],[5,"BIO_meth_new","","",N,N],[5,"BIO_meth_free","","",N,N],[5,"BIO_meth_set_write","","",N,N],[5,"BIO_meth_set_read","","",N,N],[5,"BIO_meth_set_puts","","",N,N],[5,"BIO_meth_set_ctrl","","",N,N],[5,"BIO_meth_set_create","","",N,N],[5,"BIO_meth_set_destroy","","",N,N],[5,"CRYPTO_get_ex_new_index","","",N,N],[5,"X509_up_ref","","",N,N],[5,"SSL_CTX_up_ref","","",N,N],[5,"SSL_session_reused","","",N,N],[5,"SSL_SESSION_get_master_key","","",N,N],[5,"SSL_SESSION_up_ref","","",N,N],[5,"X509_get0_extensions","","",N,N],[5,"X509_STORE_CTX_get0_chain","","",N,N],[5,"EVP_MD_CTX_new","","",N,N],[5,"EVP_MD_CTX_free","","",N,N],[5,"EVP_PKEY_bits","","",N,N],[5,"OpenSSL_version_num","","",N,N],[5,"OpenSSL_version","","",N,N],[5,"OPENSSL_init_ssl","","",N,N],[5,"OPENSSL_sk_new_null","","",N,N],[5,"OPENSSL_sk_free","","",N,N],[5,"OPENSSL_sk_pop_free","","",N,N],[5,"OPENSSL_sk_push","","",N,N],[5,"OPENSSL_sk_pop","","",N,N],[5,"PKCS12_create","","",N,N],[5,"X509_REQ_get_version","","",N,N],[5,"X509_REQ_get_subject_name","","",N,N],[5,"SSL_extension_supported","","",N,N],[5,"ECDSA_SIG_get0","","",N,N],[5,"ECDSA_SIG_set0","","",N,N],[5,"SSL_CIPHER_get_cipher_nid","","",N,N],[5,"SSL_CIPHER_get_digest_nid","","",N,N],[5,"CMS_decrypt","","",N,N],[5,"SMIME_read_CMS","","",N,N],[5,"CMS_ContentInfo_free","","",N,N],[5,"CMS_sign","","",N,N],[5,"i2d_CMS_ContentInfo","","",N,N],[5,"FIPS_mode_set","","",N,N],[5,"FIPS_mode","","",N,N],[5,"AES_set_encrypt_key","","",N,N],[5,"AES_set_decrypt_key","","",N,N],[5,"AES_ige_encrypt","","",N,N],[5,"ASN1_INTEGER_get","","",N,N],[5,"ASN1_INTEGER_set","","",N,N],[5,"ASN1_INTEGER_to_BN","","",N,N],[5,"ASN1_GENERALIZEDTIME_free","","",N,N],[5,"ASN1_GENERALIZEDTIME_print","","",N,N],[5,"ASN1_STRING_type_new","","",N,N],[5,"ASN1_TIME_free","","",N,N],[5,"ASN1_TIME_print","","",N,N],[5,"ASN1_BIT_STRING_free","","",N,N],[5,"ASN1_OBJECT_free","","",N,N],[5,"BIO_ctrl","","",N,N],[5,"BIO_free_all","","",N,N],[5,"BIO_new_fp","","",N,N],[5,"BIO_new_socket","","",N,N],[5,"BIO_read","","",N,N],[5,"BIO_write","","",N,N],[5,"BIO_new_mem_buf","","",N,N],[5,"BIO_set_flags","","",N,N],[5,"BIO_clear_flags","","",N,N],[5,"BN_CTX_new","","",N,N],[5,"BN_CTX_free","","",N,N],[5,"BN_new","","",N,N],[5,"BN_dup","","",N,N],[5,"BN_clear","","",N,N],[5,"BN_free","","",N,N],[5,"BN_clear_free","","",N,N],[5,"BN_num_bits","","",N,N],[5,"BN_set_negative","","",N,N],[5,"BN_set_word","","",N,N],[5,"BN_add","","",N,N],[5,"BN_div","","",N,N],[5,"BN_exp","","",N,N],[5,"BN_gcd","","",N,N],[5,"BN_mod_add","","",N,N],[5,"BN_mod_exp","","",N,N],[5,"BN_mod_inverse","","",N,N],[5,"BN_mod_mul","","",N,N],[5,"BN_mod_sqr","","",N,N],[5,"BN_mod_sub","","",N,N],[5,"BN_mul","","",N,N],[5,"BN_nnmod","","",N,N],[5,"BN_add_word","","",N,N],[5,"BN_sub_word","","",N,N],[5,"BN_mul_word","","",N,N],[5,"BN_div_word","","",N,N],[5,"BN_mod_word","","",N,N],[5,"BN_sqr","","",N,N],[5,"BN_sub","","",N,N],[5,"BN_clear_bit","","",N,N],[5,"BN_is_bit_set","","",N,N],[5,"BN_lshift","","",N,N],[5,"BN_lshift1","","",N,N],[5,"BN_mask_bits","","",N,N],[5,"BN_rshift","","",N,N],[5,"BN_set_bit","","",N,N],[5,"BN_rshift1","","",N,N],[5,"BN_cmp","","",N,N],[5,"BN_ucmp","","",N,N],[5,"BN_generate_prime_ex","","",N,N],[5,"BN_is_prime_ex","","",N,N],[5,"BN_is_prime_fasttest_ex","","",N,N],[5,"BN_rand","","",N,N],[5,"BN_pseudo_rand","","",N,N],[5,"BN_rand_range","","",N,N],[5,"BN_pseudo_rand_range","","",N,N],[5,"BN_bin2bn","","",N,N],[5,"BN_bn2bin","","",N,N],[5,"BN_dec2bn","","",N,N],[5,"BN_bn2dec","","",N,N],[5,"BN_hex2bn","","",N,N],[5,"BN_bn2hex","","",N,N],[5,"BN_to_ASN1_INTEGER","","",N,N],[5,"NCONF_default","","",N,N],[5,"NCONF_new","","",N,N],[5,"NCONF_free","","",N,N],[5,"CRYPTO_memcmp","","",N,N],[5,"DH_new","","",N,N],[5,"DH_free","","",N,N],[5,"DH_get_1024_160","","",N,N],[5,"DH_get_2048_224","","",N,N],[5,"DH_get_2048_256","","",N,N],[5,"EC_KEY_new","","",N,N],[5,"EC_KEY_new_by_curve_name","","",N,N],[5,"EC_KEY_dup","","",N,N],[5,"EC_KEY_up_ref","","",N,N],[5,"EC_KEY_set_group","","",N,N],[5,"EC_KEY_get0_group","","",N,N],[5,"EC_KEY_set_public_key","","",N,N],[5,"EC_KEY_get0_public_key","","",N,N],[5,"EC_KEY_set_private_key","","",N,N],[5,"EC_KEY_get0_private_key","","",N,N],[5,"EC_KEY_generate_key","","",N,N],[5,"EC_KEY_check_key","","",N,N],[5,"EC_KEY_free","","",N,N],[5,"EC_KEY_set_public_key_affine_coordinates","","",N,N],[5,"EC_GF2m_simple_method","","",N,N],[5,"EC_GROUP_new","","",N,N],[5,"EC_GROUP_new_curve_GFp","","",N,N],[5,"EC_GROUP_new_curve_GF2m","","",N,N],[5,"EC_GROUP_new_by_curve_name","","",N,N],[5,"EC_GROUP_get_curve_GFp","","",N,N],[5,"EC_GROUP_get_curve_GF2m","","",N,N],[5,"EC_GROUP_get_degree","","",N,N],[5,"EC_GROUP_get_order","","",N,N],[5,"EC_GROUP_set_asn1_flag","","",N,N],[5,"EC_GROUP_free","","",N,N],[5,"EC_POINT_new","","",N,N],[5,"EC_POINT_add","","",N,N],[5,"EC_POINT_mul","","",N,N],[5,"EC_POINT_invert","","",N,N],[5,"EC_POINT_point2oct","","",N,N],[5,"EC_POINT_oct2point","","",N,N],[5,"EC_POINT_cmp","","",N,N],[5,"EC_POINT_free","","",N,N],[5,"EC_POINT_get_affine_coordinates_GFp","","",N,N],[5,"EC_POINT_get_affine_coordinates_GF2m","","",N,N],[5,"ECDSA_SIG_new","","",N,N],[5,"ECDSA_SIG_free","","",N,N],[5,"ECDSA_do_verify","","",N,N],[5,"ECDSA_do_sign","","",N,N],[5,"ERR_peek_last_error","","",N,N],[5,"ERR_get_error","","",N,N],[5,"ERR_get_error_line_data","","",N,N],[5,"ERR_lib_error_string","","",N,N],[5,"ERR_func_error_string","","",N,N],[5,"ERR_reason_error_string","","",N,N],[5,"ERR_clear_error","","",N,N],[5,"ERR_put_error","","",N,N],[5,"ERR_set_error_data","","",N,N],[5,"ERR_load_strings","","",N,N],[5,"ERR_get_next_error_library","","",N,N],[5,"EVP_md5","","",N,N],[5,"EVP_ripemd160","","",N,N],[5,"EVP_sha1","","",N,N],[5,"EVP_sha224","","",N,N],[5,"EVP_sha256","","",N,N],[5,"EVP_sha384","","",N,N],[5,"EVP_sha512","","",N,N],[5,"EVP_aes_128_cbc","","",N,N],[5,"EVP_aes_128_ecb","","",N,N],[5,"EVP_aes_128_xts","","",N,N],[5,"EVP_aes_128_ctr","","",N,N],[5,"EVP_aes_128_gcm","","",N,N],[5,"EVP_aes_128_ccm","","",N,N],[5,"EVP_aes_128_cfb1","","",N,N],[5,"EVP_aes_128_cfb128","","",N,N],[5,"EVP_aes_128_cfb8","","",N,N],[5,"EVP_aes_256_cbc","","",N,N],[5,"EVP_aes_256_ecb","","",N,N],[5,"EVP_aes_256_xts","","",N,N],[5,"EVP_aes_256_ctr","","",N,N],[5,"EVP_aes_256_gcm","","",N,N],[5,"EVP_aes_256_ccm","","",N,N],[5,"EVP_aes_256_cfb1","","",N,N],[5,"EVP_aes_256_cfb128","","",N,N],[5,"EVP_aes_256_cfb8","","",N,N],[5,"EVP_bf_cbc","","",N,N],[5,"EVP_bf_ecb","","",N,N],[5,"EVP_bf_cfb64","","",N,N],[5,"EVP_bf_ofb","","",N,N],[5,"EVP_rc4","","",N,N],[5,"EVP_des_cbc","","",N,N],[5,"EVP_des_ecb","","",N,N],[5,"EVP_des_ede3","","",N,N],[5,"EVP_des_ede3_cbc","","",N,N],[5,"EVP_BytesToKey","","",N,N],[5,"EVP_CIPHER_CTX_new","","",N,N],[5,"EVP_CIPHER_CTX_set_padding","","",N,N],[5,"EVP_CIPHER_CTX_set_key_length","","",N,N],[5,"EVP_CIPHER_CTX_ctrl","","",N,N],[5,"EVP_CIPHER_CTX_free","","",N,N],[5,"EVP_CipherInit","","",N,N],[5,"EVP_CipherInit_ex","","",N,N],[5,"EVP_CipherUpdate","","",N,N],[5,"EVP_CipherFinal","","",N,N],[5,"EVP_DigestInit","","",N,N],[5,"EVP_DigestInit_ex","","",N,N],[5,"EVP_DigestUpdate","","",N,N],[5,"EVP_DigestFinal","","",N,N],[5,"EVP_DigestFinal_ex","","",N,N],[5,"EVP_DigestSignInit","","",N,N],[5,"EVP_DigestSignFinal","","",N,N],[5,"EVP_DigestVerifyInit","","",N,N],[5,"EVP_DigestVerifyFinal","","",N,N],[5,"EVP_MD_CTX_copy_ex","","",N,N],[5,"EVP_PKEY_new","","",N,N],[5,"EVP_PKEY_free","","",N,N],[5,"EVP_PKEY_assign","","",N,N],[5,"EVP_PKEY_copy_parameters","","",N,N],[5,"EVP_PKEY_get1_RSA","","",N,N],[5,"EVP_PKEY_set1_RSA","","",N,N],[5,"EVP_PKEY_get1_DSA","","",N,N],[5,"EVP_PKEY_get1_DH","","",N,N],[5,"EVP_PKEY_get1_EC_KEY","","",N,N],[5,"EVP_PKEY_cmp","","",N,N],[5,"EVP_PKEY_id","","",N,N],[5,"EVP_PKEY_new_mac_key","","",N,N],[5,"EVP_PKEY_derive_init","","",N,N],[5,"EVP_PKEY_derive_set_peer","","",N,N],[5,"EVP_PKEY_derive","","",N,N],[5,"d2i_PKCS8PrivateKey_bio","","",N,N],[5,"EVP_PKEY_CTX_new","","",N,N],[5,"EVP_PKEY_CTX_new_id","","",N,N],[5,"EVP_PKEY_CTX_free","","",N,N],[5,"EVP_PKEY_CTX_ctrl","","",N,N],[5,"EVP_PKEY_keygen_init","","",N,N],[5,"EVP_PKEY_keygen","","",N,N],[5,"HMAC_CTX_copy","","",N,N],[5,"OBJ_obj2nid","","",N,N],[5,"OBJ_obj2txt","","",N,N],[5,"OBJ_nid2ln","","",N,N],[5,"OBJ_nid2sn","","",N,N],[5,"OBJ_find_sigid_algs","","",N,N],[5,"OCSP_BASICRESP_new","","",N,N],[5,"OCSP_BASICRESP_free","","",N,N],[5,"OCSP_basic_verify","","",N,N],[5,"OCSP_resp_find_status","","",N,N],[5,"OCSP_check_validity","","",N,N],[5,"OCSP_CERTID_free","","",N,N],[5,"OCSP_RESPONSE_new","","",N,N],[5,"OCSP_RESPONSE_free","","",N,N],[5,"i2d_OCSP_RESPONSE","","",N,N],[5,"d2i_OCSP_RESPONSE","","",N,N],[5,"OCSP_response_create","","",N,N],[5,"OCSP_response_status","","",N,N],[5,"OCSP_response_get1_basic","","",N,N],[5,"OCSP_REQUEST_new","","",N,N],[5,"OCSP_REQUEST_free","","",N,N],[5,"i2d_OCSP_REQUEST","","",N,N],[5,"d2i_OCSP_REQUEST","","",N,N],[5,"OCSP_request_add0_id","","",N,N],[5,"OCSP_ONEREQ_free","","",N,N],[5,"PEM_read_bio_DHparams","","",N,N],[5,"PEM_read_bio_X509","","",N,N],[5,"PEM_read_bio_X509_REQ","","",N,N],[5,"PEM_read_bio_PrivateKey","","",N,N],[5,"PEM_read_bio_PUBKEY","","",N,N],[5,"PEM_read_bio_RSAPrivateKey","","",N,N],[5,"PEM_read_bio_RSAPublicKey","","",N,N],[5,"PEM_read_bio_RSA_PUBKEY","","",N,N],[5,"PEM_write_bio_DHparams","","",N,N],[5,"PEM_write_bio_PrivateKey","","",N,N],[5,"PEM_write_bio_PKCS8PrivateKey","","",N,N],[5,"PEM_write_bio_PUBKEY","","",N,N],[5,"PEM_write_bio_RSAPrivateKey","","",N,N],[5,"PEM_write_bio_RSAPublicKey","","",N,N],[5,"PEM_write_bio_RSA_PUBKEY","","",N,N],[5,"PEM_read_bio_DSAPrivateKey","","",N,N],[5,"PEM_read_bio_DSA_PUBKEY","","",N,N],[5,"PEM_write_bio_DSAPrivateKey","","",N,N],[5,"PEM_write_bio_DSA_PUBKEY","","",N,N],[5,"PEM_write_bio_X509","","",N,N],[5,"PEM_write_bio_X509_REQ","","",N,N],[5,"PEM_write_bio_ECPrivateKey","","",N,N],[5,"PEM_read_bio_ECPrivateKey","","",N,N],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",N,N],[5,"PKCS5_PBKDF2_HMAC","","",N,N],[5,"RAND_bytes","","",N,N],[5,"RAND_status","","",N,N],[5,"RSA_new","","",N,N],[5,"RSA_free","","",N,N],[5,"RSA_up_ref","","",N,N],[5,"RSA_generate_key_ex","","",N,N],[5,"RSA_private_decrypt","","",N,N],[5,"RSA_public_decrypt","","",N,N],[5,"RSA_private_encrypt","","",N,N],[5,"RSA_public_encrypt","","",N,N],[5,"RSA_sign","","",N,N],[5,"RSA_size","","",N,N],[5,"RSA_verify","","",N,N],[5,"RSA_padding_check_PKCS1_type_2","","",N,N],[5,"DSA_new","","",N,N],[5,"DSA_free","","",N,N],[5,"DSA_size","","",N,N],[5,"DSA_generate_parameters_ex","","",N,N],[5,"DSA_generate_key","","",N,N],[5,"DSA_sign","","",N,N],[5,"DSA_verify","","",N,N],[5,"SHA1","","",N,N],[5,"SHA224","","",N,N],[5,"SHA256","","",N,N],[5,"SHA384","","",N,N],[5,"SHA512","","",N,N],[5,"SHA1_Init","","",N,N],[5,"SHA1_Update","","",N,N],[5,"SHA1_Final","","",N,N],[5,"SHA256_Init","","",N,N],[5,"SHA256_Update","","",N,N],[5,"SHA256_Final","","",N,N],[5,"SHA224_Init","","",N,N],[5,"SHA224_Update","","",N,N],[5,"SHA224_Final","","",N,N],[5,"SHA384_Init","","",N,N],[5,"SHA384_Update","","",N,N],[5,"SHA384_Final","","",N,N],[5,"SHA512_Init","","",N,N],[5,"SHA512_Update","","",N,N],[5,"SHA512_Final","","",N,N],[5,"SSL_new","","",N,N],[5,"SSL_pending","","",N,N],[5,"SSL_free","","",N,N],[5,"SSL_set_bio","","",N,N],[5,"SSL_get_rbio","","",N,N],[5,"SSL_get_wbio","","",N,N],[5,"SSL_accept","","",N,N],[5,"SSL_connect","","",N,N],[5,"SSL_do_handshake","","",N,N],[5,"SSL_ctrl","","",N,N],[5,"SSL_get_error","","",N,N],[5,"SSL_read","","",N,N],[5,"SSL_write","","",N,N],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",N,N],[5,"SSL_get_SSL_CTX","","",N,N],[5,"SSL_set_SSL_CTX","","",N,N],[5,"SSL_get_current_compression","","",N,N],[5,"SSL_get_peer_certificate","","",N,N],[5,"SSL_get_peer_cert_chain","","",N,N],[5,"SSL_get_ssl_method","","",N,N],[5,"SSL_get_version","","",N,N],[5,"SSL_version","","",N,N],[5,"SSL_state_string","","",N,N],[5,"SSL_state_string_long","","",N,N],[5,"SSL_set_verify","","",N,N],[5,"SSL_set_ex_data","","",N,N],[5,"SSL_get_ex_data","","",N,N],[5,"SSL_get_servername","","",N,N],[5,"SSL_get_current_cipher","","",N,N],[5,"SSL_get0_param","","",N,N],[5,"SSL_get_verify_result","","",N,N],[5,"SSL_shutdown","","",N,N],[5,"SSL_get_certificate","","",N,N],[5,"SSL_get_privatekey","","",N,N],[5,"SSL_load_client_CA_file","","",N,N],[5,"SSL_set_tmp_dh_callback","","",N,N],[5,"SSL_export_keying_material","","",N,N],[5,"SSL_COMP_get_name","","",N,N],[5,"SSL_CIPHER_get_name","","",N,N],[5,"SSL_CIPHER_get_bits","","",N,N],[5,"SSL_CIPHER_description","","",N,N],[5,"SSL_CTX_new","","",N,N],[5,"SSL_CTX_free","","",N,N],[5,"SSL_CTX_ctrl","","",N,N],[5,"SSL_CTX_callback_ctrl","","",N,N],[5,"SSL_CTX_set_verify","","",N,N],[5,"SSL_CTX_set_verify_depth","","",N,N],[5,"SSL_CTX_load_verify_locations","","",N,N],[5,"SSL_CTX_set_default_verify_paths","","",N,N],[5,"SSL_CTX_set_ex_data","","",N,N],[5,"SSL_CTX_get_ex_data","","",N,N],[5,"SSL_CTX_set_session_id_context","","",N,N],[5,"SSL_CTX_use_certificate_file","","",N,N],[5,"SSL_CTX_use_certificate_chain_file","","",N,N],[5,"SSL_CTX_use_certificate","","",N,N],[5,"SSL_CTX_use_PrivateKey_file","","",N,N],[5,"SSL_CTX_use_PrivateKey","","",N,N],[5,"SSL_CTX_check_private_key","","",N,N],[5,"SSL_CTX_set_client_CA_list","","",N,N],[5,"SSL_CTX_get_cert_store","","",N,N],[5,"SSL_CTX_set_tmp_dh_callback","","",N,N],[5,"SSL_CTX_sess_set_new_cb","","",N,N],[5,"SSL_CTX_sess_set_remove_cb","","",N,N],[5,"SSL_CTX_get0_certificate","","",N,N],[5,"SSL_CTX_get0_privatekey","","",N,N],[5,"SSL_CTX_set_cipher_list","","",N,N],[5,"SSL_CTX_set_next_protos_advertised_cb","","",N,N],[5,"SSL_CTX_set_next_proto_select_cb","","",N,N],[5,"SSL_CTX_set_psk_client_callback","","",N,N],[5,"SSL_CTX_set_psk_server_callback","","",N,N],[5,"SSL_select_next_proto","","",N,N],[5,"SSL_get0_next_proto_negotiated","","",N,N],[5,"SSL_get_session","","",N,N],[5,"SSL_set_session","","",N,N],[5,"SSL_is_server","","",N,N],[5,"SSL_get_finished","","",N,N],[5,"SSL_get_peer_finished","","",N,N],[5,"SSL_SESSION_free","","",N,N],[5,"SSL_SESSION_get_id","","",N,N],[5,"d2i_SSL_SESSION","","",N,N],[5,"i2d_SSL_SESSION","","",N,N],[5,"SSL_CTX_set_alpn_protos","","",N,N],[5,"SSL_set_alpn_protos","","",N,N],[5,"SSL_CTX_set_alpn_select_cb","","",N,N],[5,"SSL_get0_alpn_selected","","",N,N],[5,"X509_add_ext","","",N,N],[5,"X509_digest","","",N,N],[5,"X509_free","","",N,N],[5,"X509_REQ_free","","",N,N],[5,"X509_get_serialNumber","","",N,N],[5,"X509_gmtime_adj","","",N,N],[5,"X509_new","","",N,N],[5,"X509_set_issuer_name","","",N,N],[5,"X509_set_subject_name","","",N,N],[5,"X509_set_serialNumber","","",N,N],[5,"X509_set_version","","",N,N],[5,"X509_set_pubkey","","",N,N],[5,"X509_sign","","",N,N],[5,"X509_get_pubkey","","",N,N],[5,"X509_to_X509_REQ","","",N,N],[5,"X509_verify_cert","","",N,N],[5,"X509_verify_cert_error_string","","",N,N],[5,"X509_get1_ocsp","","",N,N],[5,"X509_check_issued","","",N,N],[5,"X509_ALGOR_free","","",N,N],[5,"X509_EXTENSION_free","","",N,N],[5,"X509_NAME_new","","",N,N],[5,"X509_NAME_free","","",N,N],[5,"X509_NAME_add_entry_by_txt","","",N,N],[5,"X509_NAME_get_index_by_NID","","",N,N],[5,"X509_NAME_ENTRY_free","","",N,N],[5,"ASN1_STRING_free","","",N,N],[5,"ASN1_STRING_length","","",N,N],[5,"ASN1_INTEGER_free","","",N,N],[5,"X509_STORE_new","","",N,N],[5,"X509_STORE_free","","",N,N],[5,"X509_STORE_add_cert","","",N,N],[5,"X509_STORE_set_default_paths","","",N,N],[5,"X509_STORE_CTX_new","","",N,N],[5,"X509_STORE_CTX_cleanup","","",N,N],[5,"X509_STORE_CTX_init","","",N,N],[5,"X509_STORE_CTX_free","","",N,N],[5,"X509_STORE_CTX_get_current_cert","","",N,N],[5,"X509_STORE_CTX_get_error","","",N,N],[5,"X509_STORE_CTX_set_error","","",N,N],[5,"X509_STORE_CTX_get_ex_data","","",N,N],[5,"X509_STORE_CTX_get_error_depth","","",N,N],[5,"X509V3_set_ctx","","",N,N],[5,"X509V3_set_nconf","","",N,N],[5,"X509_REQ_new","","",N,N],[5,"X509_REQ_set_version","","",N,N],[5,"X509_REQ_set_subject_name","","",N,N],[5,"X509_REQ_set_pubkey","","",N,N],[5,"X509_REQ_get_pubkey","","",N,N],[5,"X509_REQ_add_extensions","","",N,N],[5,"X509_REQ_get_extensions","","",N,N],[5,"X509_REQ_sign","","",N,N],[5,"X509_VERIFY_PARAM_free","","",N,N],[5,"X509_VERIFY_PARAM_set_hostflags","","",N,N],[5,"X509_VERIFY_PARAM_set1_host","","",N,N],[5,"X509_VERIFY_PARAM_set1_ip","","",N,N],[5,"d2i_DHparams","","",N,N],[5,"i2d_DHparams","","",N,N],[5,"d2i_DSAPublicKey","","",N,N],[5,"i2d_DSAPublicKey","","",N,N],[5,"d2i_DSAPrivateKey","","",N,N],[5,"i2d_DSAPrivateKey","","",N,N],[5,"d2i_DSA_PUBKEY","","",N,N],[5,"i2d_DSA_PUBKEY","","",N,N],[5,"d2i_ECPrivateKey","","",N,N],[5,"i2d_ECPrivateKey","","",N,N],[5,"d2i_X509","","",N,N],[5,"d2i_X509_REQ","","",N,N],[5,"i2d_X509_bio","","",N,N],[5,"i2d_X509","","",N,N],[5,"i2d_X509_REQ_bio","","",N,N],[5,"i2d_X509_REQ","","",N,N],[5,"d2i_AutoPrivateKey","","",N,N],[5,"d2i_PUBKEY","","",N,N],[5,"i2d_PUBKEY_bio","","",N,N],[5,"i2d_PrivateKey_bio","","",N,N],[5,"i2d_PUBKEY","","",N,N],[5,"i2d_PrivateKey","","",N,N],[5,"i2d_RSA_PUBKEY","","",N,N],[5,"d2i_RSA_PUBKEY","","",N,N],[5,"i2d_RSAPublicKey","","",N,N],[5,"d2i_RSAPublicKey","","",N,N],[5,"i2d_RSAPrivateKey","","",N,N],[5,"d2i_RSAPrivateKey","","",N,N],[5,"i2d_PKCS12_bio","","",N,N],[5,"i2d_PKCS12","","",N,N],[5,"d2i_PKCS12","","",N,N],[5,"PKCS12_parse","","",N,N],[5,"PKCS12_free","","",N,N],[5,"GENERAL_NAME_free","","",N,N],[5,"HMAC_Init_ex","","",N,N],[5,"HMAC_Update","","",N,N],[5,"HMAC_Final","","",N,N],[5,"SSL_CTX_set_cookie_generate_cb","","",N,N],[5,"SSL_CTX_set_cookie_verify_cb","","",N,N],[5,"EVP_MD_size","","",N,N],[5,"EVP_get_digestbyname","","",N,N],[5,"EVP_get_cipherbyname","","",N,N],[5,"SSL_set_connect_state","","",N,N],[5,"SSL_set_accept_state","","",N,N],[6,"bio_info_cb","","",N,N],[6,"GEN_SESSION_CB","","",N,N],[6,"tls_session_ticket_ext_cb_fn","","",N,N],[6,"tls_session_secret_cb_fn","","",N,N],[6,"BN_ULONG","","",N,N],[6,"CRYPTO_EX_new","","",N,N],[6,"CRYPTO_EX_dup","","",N,N],[6,"CRYPTO_EX_free","","",N,N],[6,"PasswordCallback","","",N,N],[6,"SHA_LONG","","",N,N],[6,"SHA_LONG64","","",N,N],[17,"CMS_ASCIICRLF","","",N,N],[17,"SSL_CTRL_SET_MIN_PROTO_VERSION","","",N,N],[17,"SSL_CTRL_SET_MAX_PROTO_VERSION","","",N,N],[17,"SSL_CTRL_GET_MIN_PROTO_VERSION","","",N,N],[17,"SSL_CTRL_GET_MAX_PROTO_VERSION","","",N,N],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",N,N],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",N,N],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",N,N],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",N,N],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",N,N],[17,"SSL_OP_TLS_D5_BUG","","",N,N],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",N,N],[17,"SSL_OP_SINGLE_ECDH_USE","","",N,N],[17,"SSL_OP_SINGLE_DH_USE","","",N,N],[17,"SSL_OP_NO_SSLv2","","",N,N],[17,"OPENSSL_VERSION","","",N,N],[17,"OPENSSL_CFLAGS","","",N,N],[17,"OPENSSL_BUILT_ON","","",N,N],[17,"OPENSSL_PLATFORM","","",N,N],[17,"OPENSSL_DIR","","",N,N],[17,"CRYPTO_EX_INDEX_SSL","","",N,N],[17,"CRYPTO_EX_INDEX_SSL_CTX","","",N,N],[17,"OPENSSL_INIT_LOAD_SSL_STRINGS","","",N,N],[17,"X509_V_ERR_DANE_NO_MATCH","","",N,N],[17,"X509_V_ERR_EE_KEY_TOO_SMALL","","",N,N],[17,"X509_V_ERR_CA_KEY_TOO_SMALL","","",N,N],[17,"X509_V_ERR_CA_MD_TOO_WEAK","","",N,N],[17,"X509_V_ERR_INVALID_CALL","","",N,N],[17,"X509_V_ERR_STORE_LOOKUP","","",N,N],[17,"X509_V_ERR_NO_VALID_SCTS","","",N,N],[17,"X509_CHECK_FLAG_NEVER_CHECK_SUBJECT","","",N,N],[17,"SSL_CTRL_SET_VERIFY_CERT_STORE","","",N,N],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",N,N],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",N,N],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",N,N],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",N,N],[17,"SSL_OP_CISCO_ANYCONNECT","","",N,N],[17,"SSL_OP_NO_COMPRESSION","","",N,N],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",N,N],[17,"SSL_OP_NO_SSLv3","","",N,N],[17,"SSL_OP_NO_DTLSv1","","",N,N],[17,"SSL_OP_NO_DTLSv1_2","","",N,N],[17,"X509_V_ERR_UNSPECIFIED","","",N,N],[17,"CMS_TEXT","","",N,N],[17,"CMS_NOCERTS","","",N,N],[17,"CMS_NO_CONTENT_VERIFY","","",N,N],[17,"CMS_NO_ATTR_VERIFY","","",N,N],[17,"CMS_NOSIGS","","",N,N],[17,"CMS_NOINTERN","","",N,N],[17,"CMS_NO_SIGNER_CERT_VERIFY","","",N,N],[17,"CMS_NOVERIFY","","",N,N],[17,"CMS_DETACHED","","",N,N],[17,"CMS_BINARY","","",N,N],[17,"CMS_NOATTR","","",N,N],[17,"CMS_NOSMIMECAP","","",N,N],[17,"CMS_NOOLDMIMETYPE","","",N,N],[17,"CMS_CRLFEOL","","",N,N],[17,"CMS_STREAM","","",N,N],[17,"CMS_NOCRL","","",N,N],[17,"CMS_PARTIAL","","",N,N],[17,"CMS_REUSE_DIGEST","","",N,N],[17,"CMS_USE_KEYID","","",N,N],[17,"CMS_DEBUG_DECRYPT","","",N,N],[17,"CMS_KEY_PARAM","","",N,N],[17,"AES_ENCRYPT","","",N,N],[17,"AES_DECRYPT","","",N,N],[17,"AES_MAXNR","","",N,N],[17,"AES_BLOCK_SIZE","","",N,N],[17,"BIO_TYPE_NONE","","",N,N],[17,"BIO_CTRL_EOF","","",N,N],[17,"BIO_CTRL_INFO","","",N,N],[17,"BIO_CTRL_FLUSH","","",N,N],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",N,N],[17,"BIO_FLAGS_READ","","",N,N],[17,"BIO_FLAGS_WRITE","","",N,N],[17,"BIO_FLAGS_IO_SPECIAL","","",N,N],[17,"BIO_FLAGS_RWS","","",N,N],[17,"BIO_FLAGS_SHOULD_RETRY","","",N,N],[17,"CRYPTO_LOCK","","",N,N],[17,"ERR_TXT_MALLOCED","","",N,N],[17,"ERR_TXT_STRING","","",N,N],[17,"ERR_LIB_PEM","","",N,N],[17,"PEM_R_NO_START_LINE","","",N,N],[17,"EVP_MAX_MD_SIZE","","",N,N],[17,"EVP_PKEY_RSA","","",N,N],[17,"EVP_PKEY_HMAC","","",N,N],[17,"EVP_PKEY_CMAC","","",N,N],[17,"EVP_PKEY_DSA","","",N,N],[17,"EVP_PKEY_DH","","",N,N],[17,"EVP_PKEY_EC","","",N,N],[17,"EVP_PKEY_ALG_CTRL","","",N,N],[17,"EVP_PKEY_CTRL_RSA_PADDING","","",N,N],[17,"EVP_PKEY_CTRL_RSA_PSS_SALTLEN","","",N,N],[17,"EVP_PKEY_CTRL_RSA_MGF1_MD","","",N,N],[17,"EVP_PKEY_CTRL_GET_RSA_PADDING","","",N,N],[17,"EVP_PKEY_CTRL_SET_MAC_KEY","","",N,N],[17,"EVP_PKEY_CTRL_CIPHER","","",N,N],[17,"EVP_PKEY_OP_KEYGEN","","",N,N],[17,"EVP_PKEY_OP_SIGN","","",N,N],[17,"EVP_PKEY_OP_VERIFY","","",N,N],[17,"EVP_PKEY_OP_VERIFYRECOVER","","",N,N],[17,"EVP_PKEY_OP_SIGNCTX","","",N,N],[17,"EVP_PKEY_OP_VERIFYCTX","","",N,N],[17,"EVP_PKEY_OP_ENCRYPT","","",N,N],[17,"EVP_PKEY_OP_DECRYPT","","",N,N],[17,"EVP_PKEY_OP_TYPE_SIG","","",N,N],[17,"EVP_PKEY_OP_TYPE_CRYPT","","",N,N],[17,"EVP_CTRL_GCM_SET_IVLEN","","",N,N],[17,"EVP_CTRL_GCM_GET_TAG","","",N,N],[17,"EVP_CTRL_GCM_SET_TAG","","",N,N],[17,"MBSTRING_ASC","","",N,N],[17,"MBSTRING_BMP","","",N,N],[17,"MBSTRING_FLAG","","",N,N],[17,"MBSTRING_UNIV","","",N,N],[17,"MBSTRING_UTF8","","",N,N],[17,"NID_undef","","",N,N],[17,"NID_itu_t","","",N,N],[17,"NID_ccitt","","",N,N],[17,"NID_iso","","",N,N],[17,"NID_joint_iso_itu_t","","",N,N],[17,"NID_joint_iso_ccitt","","",N,N],[17,"NID_member_body","","",N,N],[17,"NID_identified_organization","","",N,N],[17,"NID_hmac_md5","","",N,N],[17,"NID_hmac_sha1","","",N,N],[17,"NID_certicom_arc","","",N,N],[17,"NID_international_organizations","","",N,N],[17,"NID_wap","","",N,N],[17,"NID_wap_wsg","","",N,N],[17,"NID_selected_attribute_types","","",N,N],[17,"NID_clearance","","",N,N],[17,"NID_ISO_US","","",N,N],[17,"NID_X9_57","","",N,N],[17,"NID_X9cm","","",N,N],[17,"NID_dsa","","",N,N],[17,"NID_dsaWithSHA1","","",N,N],[17,"NID_ansi_X9_62","","",N,N],[17,"NID_X9_62_prime_field","","",N,N],[17,"NID_X9_62_characteristic_two_field","","",N,N],[17,"NID_X9_62_id_characteristic_two_basis","","",N,N],[17,"NID_X9_62_onBasis","","",N,N],[17,"NID_X9_62_tpBasis","","",N,N],[17,"NID_X9_62_ppBasis","","",N,N],[17,"NID_X9_62_id_ecPublicKey","","",N,N],[17,"NID_X9_62_c2pnb163v1","","",N,N],[17,"NID_X9_62_c2pnb163v2","","",N,N],[17,"NID_X9_62_c2pnb163v3","","",N,N],[17,"NID_X9_62_c2pnb176v1","","",N,N],[17,"NID_X9_62_c2tnb191v1","","",N,N],[17,"NID_X9_62_c2tnb191v2","","",N,N],[17,"NID_X9_62_c2tnb191v3","","",N,N],[17,"NID_X9_62_c2onb191v4","","",N,N],[17,"NID_X9_62_c2onb191v5","","",N,N],[17,"NID_X9_62_c2pnb208w1","","",N,N],[17,"NID_X9_62_c2tnb239v1","","",N,N],[17,"NID_X9_62_c2tnb239v2","","",N,N],[17,"NID_X9_62_c2tnb239v3","","",N,N],[17,"NID_X9_62_c2onb239v4","","",N,N],[17,"NID_X9_62_c2onb239v5","","",N,N],[17,"NID_X9_62_c2pnb272w1","","",N,N],[17,"NID_X9_62_c2pnb304w1","","",N,N],[17,"NID_X9_62_c2tnb359v1","","",N,N],[17,"NID_X9_62_c2pnb368w1","","",N,N],[17,"NID_X9_62_c2tnb431r1","","",N,N],[17,"NID_X9_62_prime192v1","","",N,N],[17,"NID_X9_62_prime192v2","","",N,N],[17,"NID_X9_62_prime192v3","","",N,N],[17,"NID_X9_62_prime239v1","","",N,N],[17,"NID_X9_62_prime239v2","","",N,N],[17,"NID_X9_62_prime239v3","","",N,N],[17,"NID_X9_62_prime256v1","","",N,N],[17,"NID_ecdsa_with_SHA1","","",N,N],[17,"NID_ecdsa_with_Recommended","","",N,N],[17,"NID_ecdsa_with_Specified","","",N,N],[17,"NID_ecdsa_with_SHA224","","",N,N],[17,"NID_ecdsa_with_SHA256","","",N,N],[17,"NID_ecdsa_with_SHA384","","",N,N],[17,"NID_ecdsa_with_SHA512","","",N,N],[17,"NID_secp112r1","","",N,N],[17,"NID_secp112r2","","",N,N],[17,"NID_secp128r1","","",N,N],[17,"NID_secp128r2","","",N,N],[17,"NID_secp160k1","","",N,N],[17,"NID_secp160r1","","",N,N],[17,"NID_secp160r2","","",N,N],[17,"NID_secp192k1","","",N,N],[17,"NID_secp224k1","","",N,N],[17,"NID_secp224r1","","",N,N],[17,"NID_secp256k1","","",N,N],[17,"NID_secp384r1","","",N,N],[17,"NID_secp521r1","","",N,N],[17,"NID_sect113r1","","",N,N],[17,"NID_sect113r2","","",N,N],[17,"NID_sect131r1","","",N,N],[17,"NID_sect131r2","","",N,N],[17,"NID_sect163k1","","",N,N],[17,"NID_sect163r1","","",N,N],[17,"NID_sect163r2","","",N,N],[17,"NID_sect193r1","","",N,N],[17,"NID_sect193r2","","",N,N],[17,"NID_sect233k1","","",N,N],[17,"NID_sect233r1","","",N,N],[17,"NID_sect239k1","","",N,N],[17,"NID_sect283k1","","",N,N],[17,"NID_sect283r1","","",N,N],[17,"NID_sect409k1","","",N,N],[17,"NID_sect409r1","","",N,N],[17,"NID_sect571k1","","",N,N],[17,"NID_sect571r1","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls1","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls3","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls4","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls5","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls6","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls7","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls8","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls9","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls10","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls11","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls12","","",N,N],[17,"NID_cast5_cbc","","",N,N],[17,"NID_cast5_ecb","","",N,N],[17,"NID_cast5_cfb64","","",N,N],[17,"NID_cast5_ofb64","","",N,N],[17,"NID_pbeWithMD5AndCast5_CBC","","",N,N],[17,"NID_id_PasswordBasedMAC","","",N,N],[17,"NID_id_DHBasedMac","","",N,N],[17,"NID_rsadsi","","",N,N],[17,"NID_pkcs","","",N,N],[17,"NID_pkcs1","","",N,N],[17,"NID_rsaEncryption","","",N,N],[17,"NID_md2WithRSAEncryption","","",N,N],[17,"NID_md4WithRSAEncryption","","",N,N],[17,"NID_md5WithRSAEncryption","","",N,N],[17,"NID_sha1WithRSAEncryption","","",N,N],[17,"NID_rsaesOaep","","",N,N],[17,"NID_mgf1","","",N,N],[17,"NID_rsassaPss","","",N,N],[17,"NID_sha256WithRSAEncryption","","",N,N],[17,"NID_sha384WithRSAEncryption","","",N,N],[17,"NID_sha512WithRSAEncryption","","",N,N],[17,"NID_sha224WithRSAEncryption","","",N,N],[17,"NID_pkcs3","","",N,N],[17,"NID_dhKeyAgreement","","",N,N],[17,"NID_pkcs5","","",N,N],[17,"NID_pbeWithMD2AndDES_CBC","","",N,N],[17,"NID_pbeWithMD5AndDES_CBC","","",N,N],[17,"NID_pbeWithMD2AndRC2_CBC","","",N,N],[17,"NID_pbeWithMD5AndRC2_CBC","","",N,N],[17,"NID_pbeWithSHA1AndDES_CBC","","",N,N],[17,"NID_pbeWithSHA1AndRC2_CBC","","",N,N],[17,"NID_id_pbkdf2","","",N,N],[17,"NID_pbes2","","",N,N],[17,"NID_pbmac1","","",N,N],[17,"NID_pkcs7","","",N,N],[17,"NID_pkcs7_data","","",N,N],[17,"NID_pkcs7_signed","","",N,N],[17,"NID_pkcs7_enveloped","","",N,N],[17,"NID_pkcs7_signedAndEnveloped","","",N,N],[17,"NID_pkcs7_digest","","",N,N],[17,"NID_pkcs7_encrypted","","",N,N],[17,"NID_pkcs9","","",N,N],[17,"NID_pkcs9_emailAddress","","",N,N],[17,"NID_pkcs9_unstructuredName","","",N,N],[17,"NID_pkcs9_contentType","","",N,N],[17,"NID_pkcs9_messageDigest","","",N,N],[17,"NID_pkcs9_signingTime","","",N,N],[17,"NID_pkcs9_countersignature","","",N,N],[17,"NID_pkcs9_challengePassword","","",N,N],[17,"NID_pkcs9_unstructuredAddress","","",N,N],[17,"NID_pkcs9_extCertAttributes","","",N,N],[17,"NID_ext_req","","",N,N],[17,"NID_SMIMECapabilities","","",N,N],[17,"NID_SMIME","","",N,N],[17,"NID_id_smime_mod","","",N,N],[17,"NID_id_smime_ct","","",N,N],[17,"NID_id_smime_aa","","",N,N],[17,"NID_id_smime_alg","","",N,N],[17,"NID_id_smime_cd","","",N,N],[17,"NID_id_smime_spq","","",N,N],[17,"NID_id_smime_cti","","",N,N],[17,"NID_id_smime_mod_cms","","",N,N],[17,"NID_id_smime_mod_ess","","",N,N],[17,"NID_id_smime_mod_oid","","",N,N],[17,"NID_id_smime_mod_msg_v3","","",N,N],[17,"NID_id_smime_mod_ets_eSignature_88","","",N,N],[17,"NID_id_smime_mod_ets_eSignature_97","","",N,N],[17,"NID_id_smime_mod_ets_eSigPolicy_88","","",N,N],[17,"NID_id_smime_mod_ets_eSigPolicy_97","","",N,N],[17,"NID_id_smime_ct_receipt","","",N,N],[17,"NID_id_smime_ct_authData","","",N,N],[17,"NID_id_smime_ct_publishCert","","",N,N],[17,"NID_id_smime_ct_TSTInfo","","",N,N],[17,"NID_id_smime_ct_TDTInfo","","",N,N],[17,"NID_id_smime_ct_contentInfo","","",N,N],[17,"NID_id_smime_ct_DVCSRequestData","","",N,N],[17,"NID_id_smime_ct_DVCSResponseData","","",N,N],[17,"NID_id_smime_ct_compressedData","","",N,N],[17,"NID_id_ct_asciiTextWithCRLF","","",N,N],[17,"NID_id_smime_aa_receiptRequest","","",N,N],[17,"NID_id_smime_aa_securityLabel","","",N,N],[17,"NID_id_smime_aa_mlExpandHistory","","",N,N],[17,"NID_id_smime_aa_contentHint","","",N,N],[17,"NID_id_smime_aa_msgSigDigest","","",N,N],[17,"NID_id_smime_aa_encapContentType","","",N,N],[17,"NID_id_smime_aa_contentIdentifier","","",N,N],[17,"NID_id_smime_aa_macValue","","",N,N],[17,"NID_id_smime_aa_equivalentLabels","","",N,N],[17,"NID_id_smime_aa_contentReference","","",N,N],[17,"NID_id_smime_aa_encrypKeyPref","","",N,N],[17,"NID_id_smime_aa_signingCertificate","","",N,N],[17,"NID_id_smime_aa_smimeEncryptCerts","","",N,N],[17,"NID_id_smime_aa_timeStampToken","","",N,N],[17,"NID_id_smime_aa_ets_sigPolicyId","","",N,N],[17,"NID_id_smime_aa_ets_commitmentType","","",N,N],[17,"NID_id_smime_aa_ets_signerLocation","","",N,N],[17,"NID_id_smime_aa_ets_signerAttr","","",N,N],[17,"NID_id_smime_aa_ets_otherSigCert","","",N,N],[17,"NID_id_smime_aa_ets_contentTimestamp","","",N,N],[17,"NID_id_smime_aa_ets_CertificateRefs","","",N,N],[17,"NID_id_smime_aa_ets_RevocationRefs","","",N,N],[17,"NID_id_smime_aa_ets_certValues","","",N,N],[17,"NID_id_smime_aa_ets_revocationValues","","",N,N],[17,"NID_id_smime_aa_ets_escTimeStamp","","",N,N],[17,"NID_id_smime_aa_ets_certCRLTimestamp","","",N,N],[17,"NID_id_smime_aa_ets_archiveTimeStamp","","",N,N],[17,"NID_id_smime_aa_signatureType","","",N,N],[17,"NID_id_smime_aa_dvcs_dvc","","",N,N],[17,"NID_id_smime_alg_ESDHwith3DES","","",N,N],[17,"NID_id_smime_alg_ESDHwithRC2","","",N,N],[17,"NID_id_smime_alg_3DESwrap","","",N,N],[17,"NID_id_smime_alg_RC2wrap","","",N,N],[17,"NID_id_smime_alg_ESDH","","",N,N],[17,"NID_id_smime_alg_CMS3DESwrap","","",N,N],[17,"NID_id_smime_alg_CMSRC2wrap","","",N,N],[17,"NID_id_alg_PWRI_KEK","","",N,N],[17,"NID_id_smime_cd_ldap","","",N,N],[17,"NID_id_smime_spq_ets_sqt_uri","","",N,N],[17,"NID_id_smime_spq_ets_sqt_unotice","","",N,N],[17,"NID_id_smime_cti_ets_proofOfOrigin","","",N,N],[17,"NID_id_smime_cti_ets_proofOfReceipt","","",N,N],[17,"NID_id_smime_cti_ets_proofOfDelivery","","",N,N],[17,"NID_id_smime_cti_ets_proofOfSender","","",N,N],[17,"NID_id_smime_cti_ets_proofOfApproval","","",N,N],[17,"NID_id_smime_cti_ets_proofOfCreation","","",N,N],[17,"NID_friendlyName","","",N,N],[17,"NID_localKeyID","","",N,N],[17,"NID_ms_csp_name","","",N,N],[17,"NID_LocalKeySet","","",N,N],[17,"NID_x509Certificate","","",N,N],[17,"NID_sdsiCertificate","","",N,N],[17,"NID_x509Crl","","",N,N],[17,"NID_pbe_WithSHA1And128BitRC4","","",N,N],[17,"NID_pbe_WithSHA1And40BitRC4","","",N,N],[17,"NID_pbe_WithSHA1And3_Key_TripleDES_CBC","","",N,N],[17,"NID_pbe_WithSHA1And2_Key_TripleDES_CBC","","",N,N],[17,"NID_pbe_WithSHA1And128BitRC2_CBC","","",N,N],[17,"NID_pbe_WithSHA1And40BitRC2_CBC","","",N,N],[17,"NID_keyBag","","",N,N],[17,"NID_pkcs8ShroudedKeyBag","","",N,N],[17,"NID_certBag","","",N,N],[17,"NID_crlBag","","",N,N],[17,"NID_secretBag","","",N,N],[17,"NID_safeContentsBag","","",N,N],[17,"NID_md2","","",N,N],[17,"NID_md4","","",N,N],[17,"NID_md5","","",N,N],[17,"NID_md5_sha1","","",N,N],[17,"NID_hmacWithMD5","","",N,N],[17,"NID_hmacWithSHA1","","",N,N],[17,"NID_hmacWithSHA224","","",N,N],[17,"NID_hmacWithSHA256","","",N,N],[17,"NID_hmacWithSHA384","","",N,N],[17,"NID_hmacWithSHA512","","",N,N],[17,"NID_rc2_cbc","","",N,N],[17,"NID_rc2_ecb","","",N,N],[17,"NID_rc2_cfb64","","",N,N],[17,"NID_rc2_ofb64","","",N,N],[17,"NID_rc2_40_cbc","","",N,N],[17,"NID_rc2_64_cbc","","",N,N],[17,"NID_rc4","","",N,N],[17,"NID_rc4_40","","",N,N],[17,"NID_des_ede3_cbc","","",N,N],[17,"NID_rc5_cbc","","",N,N],[17,"NID_rc5_ecb","","",N,N],[17,"NID_rc5_cfb64","","",N,N],[17,"NID_rc5_ofb64","","",N,N],[17,"NID_ms_ext_req","","",N,N],[17,"NID_ms_code_ind","","",N,N],[17,"NID_ms_code_com","","",N,N],[17,"NID_ms_ctl_sign","","",N,N],[17,"NID_ms_sgc","","",N,N],[17,"NID_ms_efs","","",N,N],[17,"NID_ms_smartcard_login","","",N,N],[17,"NID_ms_upn","","",N,N],[17,"NID_idea_cbc","","",N,N],[17,"NID_idea_ecb","","",N,N],[17,"NID_idea_cfb64","","",N,N],[17,"NID_idea_ofb64","","",N,N],[17,"NID_bf_cbc","","",N,N],[17,"NID_bf_ecb","","",N,N],[17,"NID_bf_cfb64","","",N,N],[17,"NID_bf_ofb64","","",N,N],[17,"NID_id_pkix","","",N,N],[17,"NID_id_pkix_mod","","",N,N],[17,"NID_id_pe","","",N,N],[17,"NID_id_qt","","",N,N],[17,"NID_id_kp","","",N,N],[17,"NID_id_it","","",N,N],[17,"NID_id_pkip","","",N,N],[17,"NID_id_alg","","",N,N],[17,"NID_id_cmc","","",N,N],[17,"NID_id_on","","",N,N],[17,"NID_id_pda","","",N,N],[17,"NID_id_aca","","",N,N],[17,"NID_id_qcs","","",N,N],[17,"NID_id_cct","","",N,N],[17,"NID_id_ppl","","",N,N],[17,"NID_id_ad","","",N,N],[17,"NID_id_pkix1_explicit_88","","",N,N],[17,"NID_id_pkix1_implicit_88","","",N,N],[17,"NID_id_pkix1_explicit_93","","",N,N],[17,"NID_id_pkix1_implicit_93","","",N,N],[17,"NID_id_mod_crmf","","",N,N],[17,"NID_id_mod_cmc","","",N,N],[17,"NID_id_mod_kea_profile_88","","",N,N],[17,"NID_id_mod_kea_profile_93","","",N,N],[17,"NID_id_mod_cmp","","",N,N],[17,"NID_id_mod_qualified_cert_88","","",N,N],[17,"NID_id_mod_qualified_cert_93","","",N,N],[17,"NID_id_mod_attribute_cert","","",N,N],[17,"NID_id_mod_timestamp_protocol","","",N,N],[17,"NID_id_mod_ocsp","","",N,N],[17,"NID_id_mod_dvcs","","",N,N],[17,"NID_id_mod_cmp2000","","",N,N],[17,"NID_info_access","","",N,N],[17,"NID_biometricInfo","","",N,N],[17,"NID_qcStatements","","",N,N],[17,"NID_ac_auditEntity","","",N,N],[17,"NID_ac_targeting","","",N,N],[17,"NID_aaControls","","",N,N],[17,"NID_sbgp_ipAddrBlock","","",N,N],[17,"NID_sbgp_autonomousSysNum","","",N,N],[17,"NID_sbgp_routerIdentifier","","",N,N],[17,"NID_ac_proxying","","",N,N],[17,"NID_sinfo_access","","",N,N],[17,"NID_proxyCertInfo","","",N,N],[17,"NID_id_qt_cps","","",N,N],[17,"NID_id_qt_unotice","","",N,N],[17,"NID_textNotice","","",N,N],[17,"NID_server_auth","","",N,N],[17,"NID_client_auth","","",N,N],[17,"NID_code_sign","","",N,N],[17,"NID_email_protect","","",N,N],[17,"NID_ipsecEndSystem","","",N,N],[17,"NID_ipsecTunnel","","",N,N],[17,"NID_ipsecUser","","",N,N],[17,"NID_time_stamp","","",N,N],[17,"NID_OCSP_sign","","",N,N],[17,"NID_dvcs","","",N,N],[17,"NID_id_it_caProtEncCert","","",N,N],[17,"NID_id_it_signKeyPairTypes","","",N,N],[17,"NID_id_it_encKeyPairTypes","","",N,N],[17,"NID_id_it_preferredSymmAlg","","",N,N],[17,"NID_id_it_caKeyUpdateInfo","","",N,N],[17,"NID_id_it_currentCRL","","",N,N],[17,"NID_id_it_unsupportedOIDs","","",N,N],[17,"NID_id_it_subscriptionRequest","","",N,N],[17,"NID_id_it_subscriptionResponse","","",N,N],[17,"NID_id_it_keyPairParamReq","","",N,N],[17,"NID_id_it_keyPairParamRep","","",N,N],[17,"NID_id_it_revPassphrase","","",N,N],[17,"NID_id_it_implicitConfirm","","",N,N],[17,"NID_id_it_confirmWaitTime","","",N,N],[17,"NID_id_it_origPKIMessage","","",N,N],[17,"NID_id_it_suppLangTags","","",N,N],[17,"NID_id_regCtrl","","",N,N],[17,"NID_id_regInfo","","",N,N],[17,"NID_id_regCtrl_regToken","","",N,N],[17,"NID_id_regCtrl_authenticator","","",N,N],[17,"NID_id_regCtrl_pkiPublicationInfo","","",N,N],[17,"NID_id_regCtrl_pkiArchiveOptions","","",N,N],[17,"NID_id_regCtrl_oldCertID","","",N,N],[17,"NID_id_regCtrl_protocolEncrKey","","",N,N],[17,"NID_id_regInfo_utf8Pairs","","",N,N],[17,"NID_id_regInfo_certReq","","",N,N],[17,"NID_id_alg_des40","","",N,N],[17,"NID_id_alg_noSignature","","",N,N],[17,"NID_id_alg_dh_sig_hmac_sha1","","",N,N],[17,"NID_id_alg_dh_pop","","",N,N],[17,"NID_id_cmc_statusInfo","","",N,N],[17,"NID_id_cmc_identification","","",N,N],[17,"NID_id_cmc_identityProof","","",N,N],[17,"NID_id_cmc_dataReturn","","",N,N],[17,"NID_id_cmc_transactionId","","",N,N],[17,"NID_id_cmc_senderNonce","","",N,N],[17,"NID_id_cmc_recipientNonce","","",N,N],[17,"NID_id_cmc_addExtensions","","",N,N],[17,"NID_id_cmc_encryptedPOP","","",N,N],[17,"NID_id_cmc_decryptedPOP","","",N,N],[17,"NID_id_cmc_lraPOPWitness","","",N,N],[17,"NID_id_cmc_getCert","","",N,N],[17,"NID_id_cmc_getCRL","","",N,N],[17,"NID_id_cmc_revokeRequest","","",N,N],[17,"NID_id_cmc_regInfo","","",N,N],[17,"NID_id_cmc_responseInfo","","",N,N],[17,"NID_id_cmc_queryPending","","",N,N],[17,"NID_id_cmc_popLinkRandom","","",N,N],[17,"NID_id_cmc_popLinkWitness","","",N,N],[17,"NID_id_cmc_confirmCertAcceptance","","",N,N],[17,"NID_id_on_personalData","","",N,N],[17,"NID_id_on_permanentIdentifier","","",N,N],[17,"NID_id_pda_dateOfBirth","","",N,N],[17,"NID_id_pda_placeOfBirth","","",N,N],[17,"NID_id_pda_gender","","",N,N],[17,"NID_id_pda_countryOfCitizenship","","",N,N],[17,"NID_id_pda_countryOfResidence","","",N,N],[17,"NID_id_aca_authenticationInfo","","",N,N],[17,"NID_id_aca_accessIdentity","","",N,N],[17,"NID_id_aca_chargingIdentity","","",N,N],[17,"NID_id_aca_group","","",N,N],[17,"NID_id_aca_role","","",N,N],[17,"NID_id_aca_encAttrs","","",N,N],[17,"NID_id_qcs_pkixQCSyntax_v1","","",N,N],[17,"NID_id_cct_crs","","",N,N],[17,"NID_id_cct_PKIData","","",N,N],[17,"NID_id_cct_PKIResponse","","",N,N],[17,"NID_id_ppl_anyLanguage","","",N,N],[17,"NID_id_ppl_inheritAll","","",N,N],[17,"NID_Independent","","",N,N],[17,"NID_ad_OCSP","","",N,N],[17,"NID_ad_ca_issuers","","",N,N],[17,"NID_ad_timeStamping","","",N,N],[17,"NID_ad_dvcs","","",N,N],[17,"NID_caRepository","","",N,N],[17,"NID_id_pkix_OCSP_basic","","",N,N],[17,"NID_id_pkix_OCSP_Nonce","","",N,N],[17,"NID_id_pkix_OCSP_CrlID","","",N,N],[17,"NID_id_pkix_OCSP_acceptableResponses","","",N,N],[17,"NID_id_pkix_OCSP_noCheck","","",N,N],[17,"NID_id_pkix_OCSP_archiveCutoff","","",N,N],[17,"NID_id_pkix_OCSP_serviceLocator","","",N,N],[17,"NID_id_pkix_OCSP_extendedStatus","","",N,N],[17,"NID_id_pkix_OCSP_valid","","",N,N],[17,"NID_id_pkix_OCSP_path","","",N,N],[17,"NID_id_pkix_OCSP_trustRoot","","",N,N],[17,"NID_algorithm","","",N,N],[17,"NID_md5WithRSA","","",N,N],[17,"NID_des_ecb","","",N,N],[17,"NID_des_cbc","","",N,N],[17,"NID_des_ofb64","","",N,N],[17,"NID_des_cfb64","","",N,N],[17,"NID_rsaSignature","","",N,N],[17,"NID_dsa_2","","",N,N],[17,"NID_dsaWithSHA","","",N,N],[17,"NID_shaWithRSAEncryption","","",N,N],[17,"NID_des_ede_ecb","","",N,N],[17,"NID_des_ede3_ecb","","",N,N],[17,"NID_des_ede_cbc","","",N,N],[17,"NID_des_ede_cfb64","","",N,N],[17,"NID_des_ede3_cfb64","","",N,N],[17,"NID_des_ede_ofb64","","",N,N],[17,"NID_des_ede3_ofb64","","",N,N],[17,"NID_desx_cbc","","",N,N],[17,"NID_sha","","",N,N],[17,"NID_sha1","","",N,N],[17,"NID_dsaWithSHA1_2","","",N,N],[17,"NID_sha1WithRSA","","",N,N],[17,"NID_ripemd160","","",N,N],[17,"NID_ripemd160WithRSA","","",N,N],[17,"NID_sxnet","","",N,N],[17,"NID_X500","","",N,N],[17,"NID_X509","","",N,N],[17,"NID_commonName","","",N,N],[17,"NID_surname","","",N,N],[17,"NID_serialNumber","","",N,N],[17,"NID_countryName","","",N,N],[17,"NID_localityName","","",N,N],[17,"NID_stateOrProvinceName","","",N,N],[17,"NID_streetAddress","","",N,N],[17,"NID_organizationName","","",N,N],[17,"NID_organizationalUnitName","","",N,N],[17,"NID_title","","",N,N],[17,"NID_description","","",N,N],[17,"NID_searchGuide","","",N,N],[17,"NID_businessCategory","","",N,N],[17,"NID_postalAddress","","",N,N],[17,"NID_postalCode","","",N,N],[17,"NID_postOfficeBox","","",N,N],[17,"NID_physicalDeliveryOfficeName","","",N,N],[17,"NID_telephoneNumber","","",N,N],[17,"NID_telexNumber","","",N,N],[17,"NID_teletexTerminalIdentifier","","",N,N],[17,"NID_facsimileTelephoneNumber","","",N,N],[17,"NID_x121Address","","",N,N],[17,"NID_internationaliSDNNumber","","",N,N],[17,"NID_registeredAddress","","",N,N],[17,"NID_destinationIndicator","","",N,N],[17,"NID_preferredDeliveryMethod","","",N,N],[17,"NID_presentationAddress","","",N,N],[17,"NID_supportedApplicationContext","","",N,N],[17,"NID_member","","",N,N],[17,"NID_owner","","",N,N],[17,"NID_roleOccupant","","",N,N],[17,"NID_seeAlso","","",N,N],[17,"NID_userPassword","","",N,N],[17,"NID_userCertificate","","",N,N],[17,"NID_cACertificate","","",N,N],[17,"NID_authorityRevocationList","","",N,N],[17,"NID_certificateRevocationList","","",N,N],[17,"NID_crossCertificatePair","","",N,N],[17,"NID_name","","",N,N],[17,"NID_givenName","","",N,N],[17,"NID_initials","","",N,N],[17,"NID_generationQualifier","","",N,N],[17,"NID_x500UniqueIdentifier","","",N,N],[17,"NID_dnQualifier","","",N,N],[17,"NID_enhancedSearchGuide","","",N,N],[17,"NID_protocolInformation","","",N,N],[17,"NID_distinguishedName","","",N,N],[17,"NID_uniqueMember","","",N,N],[17,"NID_houseIdentifier","","",N,N],[17,"NID_supportedAlgorithms","","",N,N],[17,"NID_deltaRevocationList","","",N,N],[17,"NID_dmdName","","",N,N],[17,"NID_pseudonym","","",N,N],[17,"NID_role","","",N,N],[17,"NID_X500algorithms","","",N,N],[17,"NID_rsa","","",N,N],[17,"NID_mdc2WithRSA","","",N,N],[17,"NID_mdc2","","",N,N],[17,"NID_id_ce","","",N,N],[17,"NID_subject_directory_attributes","","",N,N],[17,"NID_subject_key_identifier","","",N,N],[17,"NID_key_usage","","",N,N],[17,"NID_private_key_usage_period","","",N,N],[17,"NID_subject_alt_name","","",N,N],[17,"NID_issuer_alt_name","","",N,N],[17,"NID_basic_constraints","","",N,N],[17,"NID_crl_number","","",N,N],[17,"NID_crl_reason","","",N,N],[17,"NID_invalidity_date","","",N,N],[17,"NID_delta_crl","","",N,N],[17,"NID_issuing_distribution_point","","",N,N],[17,"NID_certificate_issuer","","",N,N],[17,"NID_name_constraints","","",N,N],[17,"NID_crl_distribution_points","","",N,N],[17,"NID_certificate_policies","","",N,N],[17,"NID_any_policy","","",N,N],[17,"NID_policy_mappings","","",N,N],[17,"NID_authority_key_identifier","","",N,N],[17,"NID_policy_constraints","","",N,N],[17,"NID_ext_key_usage","","",N,N],[17,"NID_freshest_crl","","",N,N],[17,"NID_inhibit_any_policy","","",N,N],[17,"NID_target_information","","",N,N],[17,"NID_no_rev_avail","","",N,N],[17,"NID_anyExtendedKeyUsage","","",N,N],[17,"NID_netscape","","",N,N],[17,"NID_netscape_cert_extension","","",N,N],[17,"NID_netscape_data_type","","",N,N],[17,"NID_netscape_cert_type","","",N,N],[17,"NID_netscape_base_url","","",N,N],[17,"NID_netscape_revocation_url","","",N,N],[17,"NID_netscape_ca_revocation_url","","",N,N],[17,"NID_netscape_renewal_url","","",N,N],[17,"NID_netscape_ca_policy_url","","",N,N],[17,"NID_netscape_ssl_server_name","","",N,N],[17,"NID_netscape_comment","","",N,N],[17,"NID_netscape_cert_sequence","","",N,N],[17,"NID_ns_sgc","","",N,N],[17,"NID_org","","",N,N],[17,"NID_dod","","",N,N],[17,"NID_iana","","",N,N],[17,"NID_Directory","","",N,N],[17,"NID_Management","","",N,N],[17,"NID_Experimental","","",N,N],[17,"NID_Private","","",N,N],[17,"NID_Security","","",N,N],[17,"NID_SNMPv2","","",N,N],[17,"NID_Mail","","",N,N],[17,"NID_Enterprises","","",N,N],[17,"NID_dcObject","","",N,N],[17,"NID_mime_mhs","","",N,N],[17,"NID_mime_mhs_headings","","",N,N],[17,"NID_mime_mhs_bodies","","",N,N],[17,"NID_id_hex_partial_message","","",N,N],[17,"NID_id_hex_multipart_message","","",N,N],[17,"NID_zlib_compression","","",N,N],[17,"NID_aes_128_ecb","","",N,N],[17,"NID_aes_128_cbc","","",N,N],[17,"NID_aes_128_ofb128","","",N,N],[17,"NID_aes_128_cfb128","","",N,N],[17,"NID_id_aes128_wrap","","",N,N],[17,"NID_aes_128_gcm","","",N,N],[17,"NID_aes_128_ccm","","",N,N],[17,"NID_id_aes128_wrap_pad","","",N,N],[17,"NID_aes_192_ecb","","",N,N],[17,"NID_aes_192_cbc","","",N,N],[17,"NID_aes_192_ofb128","","",N,N],[17,"NID_aes_192_cfb128","","",N,N],[17,"NID_id_aes192_wrap","","",N,N],[17,"NID_aes_192_gcm","","",N,N],[17,"NID_aes_192_ccm","","",N,N],[17,"NID_id_aes192_wrap_pad","","",N,N],[17,"NID_aes_256_ecb","","",N,N],[17,"NID_aes_256_cbc","","",N,N],[17,"NID_aes_256_ofb128","","",N,N],[17,"NID_aes_256_cfb128","","",N,N],[17,"NID_id_aes256_wrap","","",N,N],[17,"NID_aes_256_gcm","","",N,N],[17,"NID_aes_256_ccm","","",N,N],[17,"NID_id_aes256_wrap_pad","","",N,N],[17,"NID_aes_128_cfb1","","",N,N],[17,"NID_aes_192_cfb1","","",N,N],[17,"NID_aes_256_cfb1","","",N,N],[17,"NID_aes_128_cfb8","","",N,N],[17,"NID_aes_192_cfb8","","",N,N],[17,"NID_aes_256_cfb8","","",N,N],[17,"NID_aes_128_ctr","","",N,N],[17,"NID_aes_192_ctr","","",N,N],[17,"NID_aes_256_ctr","","",N,N],[17,"NID_aes_128_xts","","",N,N],[17,"NID_aes_256_xts","","",N,N],[17,"NID_des_cfb1","","",N,N],[17,"NID_des_cfb8","","",N,N],[17,"NID_des_ede3_cfb1","","",N,N],[17,"NID_des_ede3_cfb8","","",N,N],[17,"NID_sha256","","",N,N],[17,"NID_sha384","","",N,N],[17,"NID_sha512","","",N,N],[17,"NID_sha224","","",N,N],[17,"NID_dsa_with_SHA224","","",N,N],[17,"NID_dsa_with_SHA256","","",N,N],[17,"NID_hold_instruction_code","","",N,N],[17,"NID_hold_instruction_none","","",N,N],[17,"NID_hold_instruction_call_issuer","","",N,N],[17,"NID_hold_instruction_reject","","",N,N],[17,"NID_data","","",N,N],[17,"NID_pss","","",N,N],[17,"NID_ucl","","",N,N],[17,"NID_pilot","","",N,N],[17,"NID_pilotAttributeType","","",N,N],[17,"NID_pilotAttributeSyntax","","",N,N],[17,"NID_pilotObjectClass","","",N,N],[17,"NID_pilotGroups","","",N,N],[17,"NID_iA5StringSyntax","","",N,N],[17,"NID_caseIgnoreIA5StringSyntax","","",N,N],[17,"NID_pilotObject","","",N,N],[17,"NID_pilotPerson","","",N,N],[17,"NID_account","","",N,N],[17,"NID_document","","",N,N],[17,"NID_room","","",N,N],[17,"NID_documentSeries","","",N,N],[17,"NID_Domain","","",N,N],[17,"NID_rFC822localPart","","",N,N],[17,"NID_dNSDomain","","",N,N],[17,"NID_domainRelatedObject","","",N,N],[17,"NID_friendlyCountry","","",N,N],[17,"NID_simpleSecurityObject","","",N,N],[17,"NID_pilotOrganization","","",N,N],[17,"NID_pilotDSA","","",N,N],[17,"NID_qualityLabelledData","","",N,N],[17,"NID_userId","","",N,N],[17,"NID_textEncodedORAddress","","",N,N],[17,"NID_rfc822Mailbox","","",N,N],[17,"NID_info","","",N,N],[17,"NID_favouriteDrink","","",N,N],[17,"NID_roomNumber","","",N,N],[17,"NID_photo","","",N,N],[17,"NID_userClass","","",N,N],[17,"NID_host","","",N,N],[17,"NID_manager","","",N,N],[17,"NID_documentIdentifier","","",N,N],[17,"NID_documentTitle","","",N,N],[17,"NID_documentVersion","","",N,N],[17,"NID_documentAuthor","","",N,N],[17,"NID_documentLocation","","",N,N],[17,"NID_homeTelephoneNumber","","",N,N],[17,"NID_secretary","","",N,N],[17,"NID_otherMailbox","","",N,N],[17,"NID_lastModifiedTime","","",N,N],[17,"NID_lastModifiedBy","","",N,N],[17,"NID_domainComponent","","",N,N],[17,"NID_aRecord","","",N,N],[17,"NID_pilotAttributeType27","","",N,N],[17,"NID_mXRecord","","",N,N],[17,"NID_nSRecord","","",N,N],[17,"NID_sOARecord","","",N,N],[17,"NID_cNAMERecord","","",N,N],[17,"NID_associatedDomain","","",N,N],[17,"NID_associatedName","","",N,N],[17,"NID_homePostalAddress","","",N,N],[17,"NID_personalTitle","","",N,N],[17,"NID_mobileTelephoneNumber","","",N,N],[17,"NID_pagerTelephoneNumber","","",N,N],[17,"NID_friendlyCountryName","","",N,N],[17,"NID_organizationalStatus","","",N,N],[17,"NID_janetMailbox","","",N,N],[17,"NID_mailPreferenceOption","","",N,N],[17,"NID_buildingName","","",N,N],[17,"NID_dSAQuality","","",N,N],[17,"NID_singleLevelQuality","","",N,N],[17,"NID_subtreeMinimumQuality","","",N,N],[17,"NID_subtreeMaximumQuality","","",N,N],[17,"NID_personalSignature","","",N,N],[17,"NID_dITRedirect","","",N,N],[17,"NID_audio","","",N,N],[17,"NID_documentPublisher","","",N,N],[17,"NID_id_set","","",N,N],[17,"NID_set_ctype","","",N,N],[17,"NID_set_msgExt","","",N,N],[17,"NID_set_attr","","",N,N],[17,"NID_set_policy","","",N,N],[17,"NID_set_certExt","","",N,N],[17,"NID_set_brand","","",N,N],[17,"NID_setct_PANData","","",N,N],[17,"NID_setct_PANToken","","",N,N],[17,"NID_setct_PANOnly","","",N,N],[17,"NID_setct_OIData","","",N,N],[17,"NID_setct_PI","","",N,N],[17,"NID_setct_PIData","","",N,N],[17,"NID_setct_PIDataUnsigned","","",N,N],[17,"NID_setct_HODInput","","",N,N],[17,"NID_setct_AuthResBaggage","","",N,N],[17,"NID_setct_AuthRevReqBaggage","","",N,N],[17,"NID_setct_AuthRevResBaggage","","",N,N],[17,"NID_setct_CapTokenSeq","","",N,N],[17,"NID_setct_PInitResData","","",N,N],[17,"NID_setct_PI_TBS","","",N,N],[17,"NID_setct_PResData","","",N,N],[17,"NID_setct_AuthReqTBS","","",N,N],[17,"NID_setct_AuthResTBS","","",N,N],[17,"NID_setct_AuthResTBSX","","",N,N],[17,"NID_setct_AuthTokenTBS","","",N,N],[17,"NID_setct_CapTokenData","","",N,N],[17,"NID_setct_CapTokenTBS","","",N,N],[17,"NID_setct_AcqCardCodeMsg","","",N,N],[17,"NID_setct_AuthRevReqTBS","","",N,N],[17,"NID_setct_AuthRevResData","","",N,N],[17,"NID_setct_AuthRevResTBS","","",N,N],[17,"NID_setct_CapReqTBS","","",N,N],[17,"NID_setct_CapReqTBSX","","",N,N],[17,"NID_setct_CapResData","","",N,N],[17,"NID_setct_CapRevReqTBS","","",N,N],[17,"NID_setct_CapRevReqTBSX","","",N,N],[17,"NID_setct_CapRevResData","","",N,N],[17,"NID_setct_CredReqTBS","","",N,N],[17,"NID_setct_CredReqTBSX","","",N,N],[17,"NID_setct_CredResData","","",N,N],[17,"NID_setct_CredRevReqTBS","","",N,N],[17,"NID_setct_CredRevReqTBSX","","",N,N],[17,"NID_setct_CredRevResData","","",N,N],[17,"NID_setct_PCertReqData","","",N,N],[17,"NID_setct_PCertResTBS","","",N,N],[17,"NID_setct_BatchAdminReqData","","",N,N],[17,"NID_setct_BatchAdminResData","","",N,N],[17,"NID_setct_CardCInitResTBS","","",N,N],[17,"NID_setct_MeAqCInitResTBS","","",N,N],[17,"NID_setct_RegFormResTBS","","",N,N],[17,"NID_setct_CertReqData","","",N,N],[17,"NID_setct_CertReqTBS","","",N,N],[17,"NID_setct_CertResData","","",N,N],[17,"NID_setct_CertInqReqTBS","","",N,N],[17,"NID_setct_ErrorTBS","","",N,N],[17,"NID_setct_PIDualSignedTBE","","",N,N],[17,"NID_setct_PIUnsignedTBE","","",N,N],[17,"NID_setct_AuthReqTBE","","",N,N],[17,"NID_setct_AuthResTBE","","",N,N],[17,"NID_setct_AuthResTBEX","","",N,N],[17,"NID_setct_AuthTokenTBE","","",N,N],[17,"NID_setct_CapTokenTBE","","",N,N],[17,"NID_setct_CapTokenTBEX","","",N,N],[17,"NID_setct_AcqCardCodeMsgTBE","","",N,N],[17,"NID_setct_AuthRevReqTBE","","",N,N],[17,"NID_setct_AuthRevResTBE","","",N,N],[17,"NID_setct_AuthRevResTBEB","","",N,N],[17,"NID_setct_CapReqTBE","","",N,N],[17,"NID_setct_CapReqTBEX","","",N,N],[17,"NID_setct_CapResTBE","","",N,N],[17,"NID_setct_CapRevReqTBE","","",N,N],[17,"NID_setct_CapRevReqTBEX","","",N,N],[17,"NID_setct_CapRevResTBE","","",N,N],[17,"NID_setct_CredReqTBE","","",N,N],[17,"NID_setct_CredReqTBEX","","",N,N],[17,"NID_setct_CredResTBE","","",N,N],[17,"NID_setct_CredRevReqTBE","","",N,N],[17,"NID_setct_CredRevReqTBEX","","",N,N],[17,"NID_setct_CredRevResTBE","","",N,N],[17,"NID_setct_BatchAdminReqTBE","","",N,N],[17,"NID_setct_BatchAdminResTBE","","",N,N],[17,"NID_setct_RegFormReqTBE","","",N,N],[17,"NID_setct_CertReqTBE","","",N,N],[17,"NID_setct_CertReqTBEX","","",N,N],[17,"NID_setct_CertResTBE","","",N,N],[17,"NID_setct_CRLNotificationTBS","","",N,N],[17,"NID_setct_CRLNotificationResTBS","","",N,N],[17,"NID_setct_BCIDistributionTBS","","",N,N],[17,"NID_setext_genCrypt","","",N,N],[17,"NID_setext_miAuth","","",N,N],[17,"NID_setext_pinSecure","","",N,N],[17,"NID_setext_pinAny","","",N,N],[17,"NID_setext_track2","","",N,N],[17,"NID_setext_cv","","",N,N],[17,"NID_set_policy_root","","",N,N],[17,"NID_setCext_hashedRoot","","",N,N],[17,"NID_setCext_certType","","",N,N],[17,"NID_setCext_merchData","","",N,N],[17,"NID_setCext_cCertRequired","","",N,N],[17,"NID_setCext_tunneling","","",N,N],[17,"NID_setCext_setExt","","",N,N],[17,"NID_setCext_setQualf","","",N,N],[17,"NID_setCext_PGWYcapabilities","","",N,N],[17,"NID_setCext_TokenIdentifier","","",N,N],[17,"NID_setCext_Track2Data","","",N,N],[17,"NID_setCext_TokenType","","",N,N],[17,"NID_setCext_IssuerCapabilities","","",N,N],[17,"NID_setAttr_Cert","","",N,N],[17,"NID_setAttr_PGWYcap","","",N,N],[17,"NID_setAttr_TokenType","","",N,N],[17,"NID_setAttr_IssCap","","",N,N],[17,"NID_set_rootKeyThumb","","",N,N],[17,"NID_set_addPolicy","","",N,N],[17,"NID_setAttr_Token_EMV","","",N,N],[17,"NID_setAttr_Token_B0Prime","","",N,N],[17,"NID_setAttr_IssCap_CVM","","",N,N],[17,"NID_setAttr_IssCap_T2","","",N,N],[17,"NID_setAttr_IssCap_Sig","","",N,N],[17,"NID_setAttr_GenCryptgrm","","",N,N],[17,"NID_setAttr_T2Enc","","",N,N],[17,"NID_setAttr_T2cleartxt","","",N,N],[17,"NID_setAttr_TokICCsig","","",N,N],[17,"NID_setAttr_SecDevSig","","",N,N],[17,"NID_set_brand_IATA_ATA","","",N,N],[17,"NID_set_brand_Diners","","",N,N],[17,"NID_set_brand_AmericanExpress","","",N,N],[17,"NID_set_brand_JCB","","",N,N],[17,"NID_set_brand_Visa","","",N,N],[17,"NID_set_brand_MasterCard","","",N,N],[17,"NID_set_brand_Novus","","",N,N],[17,"NID_des_cdmf","","",N,N],[17,"NID_rsaOAEPEncryptionSET","","",N,N],[17,"NID_ipsec3","","",N,N],[17,"NID_ipsec4","","",N,N],[17,"NID_whirlpool","","",N,N],[17,"NID_cryptopro","","",N,N],[17,"NID_cryptocom","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_2001","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_94","","",N,N],[17,"NID_id_GostR3411_94","","",N,N],[17,"NID_id_HMACGostR3411_94","","",N,N],[17,"NID_id_GostR3410_2001","","",N,N],[17,"NID_id_GostR3410_94","","",N,N],[17,"NID_id_Gost28147_89","","",N,N],[17,"NID_gost89_cnt","","",N,N],[17,"NID_id_Gost28147_89_MAC","","",N,N],[17,"NID_id_GostR3411_94_prf","","",N,N],[17,"NID_id_GostR3410_2001DH","","",N,N],[17,"NID_id_GostR3410_94DH","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_KeyMeshing","","",N,N],[17,"NID_id_Gost28147_89_None_KeyMeshing","","",N,N],[17,"NID_id_GostR3411_94_TestParamSet","","",N,N],[17,"NID_id_GostR3411_94_CryptoProParamSet","","",N,N],[17,"NID_id_Gost28147_89_TestParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_D_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_TestParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_D_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchA_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchB_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchC_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_TestParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_a","","",N,N],[17,"NID_id_GostR3410_94_aBis","","",N,N],[17,"NID_id_GostR3410_94_b","","",N,N],[17,"NID_id_GostR3410_94_bBis","","",N,N],[17,"NID_id_Gost28147_89_cc","","",N,N],[17,"NID_id_GostR3410_94_cc","","",N,N],[17,"NID_id_GostR3410_2001_cc","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_94_cc","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_2001_cc","","",N,N],[17,"NID_id_GostR3410_2001_ParamSet_cc","","",N,N],[17,"NID_camellia_128_cbc","","",N,N],[17,"NID_camellia_192_cbc","","",N,N],[17,"NID_camellia_256_cbc","","",N,N],[17,"NID_id_camellia128_wrap","","",N,N],[17,"NID_id_camellia192_wrap","","",N,N],[17,"NID_id_camellia256_wrap","","",N,N],[17,"NID_camellia_128_ecb","","",N,N],[17,"NID_camellia_128_ofb128","","",N,N],[17,"NID_camellia_128_cfb128","","",N,N],[17,"NID_camellia_192_ecb","","",N,N],[17,"NID_camellia_192_ofb128","","",N,N],[17,"NID_camellia_192_cfb128","","",N,N],[17,"NID_camellia_256_ecb","","",N,N],[17,"NID_camellia_256_ofb128","","",N,N],[17,"NID_camellia_256_cfb128","","",N,N],[17,"NID_camellia_128_cfb1","","",N,N],[17,"NID_camellia_192_cfb1","","",N,N],[17,"NID_camellia_256_cfb1","","",N,N],[17,"NID_camellia_128_cfb8","","",N,N],[17,"NID_camellia_192_cfb8","","",N,N],[17,"NID_camellia_256_cfb8","","",N,N],[17,"NID_kisa","","",N,N],[17,"NID_seed_ecb","","",N,N],[17,"NID_seed_cbc","","",N,N],[17,"NID_seed_cfb128","","",N,N],[17,"NID_seed_ofb128","","",N,N],[17,"NID_hmac","","",N,N],[17,"NID_cmac","","",N,N],[17,"NID_rc4_hmac_md5","","",N,N],[17,"NID_aes_128_cbc_hmac_sha1","","",N,N],[17,"NID_aes_192_cbc_hmac_sha1","","",N,N],[17,"NID_aes_256_cbc_hmac_sha1","","",N,N],[17,"OCSP_NOCERTS","","",N,N],[17,"OCSP_NOINTERN","","",N,N],[17,"OCSP_NOSIGS","","",N,N],[17,"OCSP_NOCHAIN","","",N,N],[17,"OCSP_NOVERIFY","","",N,N],[17,"OCSP_NOEXPLICIT","","",N,N],[17,"OCSP_NOCASIGN","","",N,N],[17,"OCSP_NODELEGATED","","",N,N],[17,"OCSP_NOCHECKS","","",N,N],[17,"OCSP_TRUSTOTHER","","",N,N],[17,"OCSP_RESPID_KEY","","",N,N],[17,"OCSP_NOTIME","","",N,N],[17,"V_OCSP_CERTSTATUS_GOOD","","",N,N],[17,"V_OCSP_CERTSTATUS_REVOKED","","",N,N],[17,"V_OCSP_CERTSTATUS_UNKNOWN","","",N,N],[17,"OCSP_REVOKED_STATUS_NOSTATUS","","",N,N],[17,"OCSP_REVOKED_STATUS_UNSPECIFIED","","",N,N],[17,"OCSP_REVOKED_STATUS_KEYCOMPROMISE","","",N,N],[17,"OCSP_REVOKED_STATUS_CACOMPROMISE","","",N,N],[17,"OCSP_REVOKED_STATUS_AFFILIATIONCHANGED","","",N,N],[17,"OCSP_REVOKED_STATUS_SUPERSEDED","","",N,N],[17,"OCSP_REVOKED_STATUS_CESSATIONOFOPERATION","","",N,N],[17,"OCSP_REVOKED_STATUS_CERTIFICATEHOLD","","",N,N],[17,"OCSP_REVOKED_STATUS_REMOVEFROMCRL","","",N,N],[17,"OCSP_RESPONSE_STATUS_SUCCESSFUL","","",N,N],[17,"OCSP_RESPONSE_STATUS_MALFORMEDREQUEST","","",N,N],[17,"OCSP_RESPONSE_STATUS_INTERNALERROR","","",N,N],[17,"OCSP_RESPONSE_STATUS_TRYLATER","","",N,N],[17,"OCSP_RESPONSE_STATUS_SIGREQUIRED","","",N,N],[17,"OCSP_RESPONSE_STATUS_UNAUTHORIZED","","",N,N],[17,"OPENSSL_EC_NAMED_CURVE","","",N,N],[17,"PKCS5_SALT_LEN","","",N,N],[17,"PKCS12_DEFAULT_ITER","","",N,N],[17,"RSA_F4","","",N,N],[17,"RSA_PKCS1_PADDING","","",N,N],[17,"RSA_SSLV23_PADDING","","",N,N],[17,"RSA_NO_PADDING","","",N,N],[17,"RSA_PKCS1_OAEP_PADDING","","",N,N],[17,"RSA_X931_PADDING","","",N,N],[17,"RSA_PKCS1_PSS_PADDING","","",N,N],[17,"SHA_LBLOCK","","",N,N],[17,"SSL3_AD_ILLEGAL_PARAMETER","","",N,N],[17,"SSL_AD_ILLEGAL_PARAMETER","","",N,N],[17,"TLS1_AD_DECODE_ERROR","","",N,N],[17,"SSL_AD_DECODE_ERROR","","",N,N],[17,"TLS1_AD_UNRECOGNIZED_NAME","","",N,N],[17,"SSL_AD_UNRECOGNIZED_NAME","","",N,N],[17,"SSL_CTRL_SET_TMP_DH","","",N,N],[17,"SSL_CTRL_SET_TMP_ECDH","","",N,N],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",N,N],[17,"SSL_CTRL_MODE","","",N,N],[17,"SSL_CTRL_SET_READ_AHEAD","","",N,N],[17,"SSL_CTRL_SET_SESS_CACHE_MODE","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE","","",N,N],[17,"SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP","","",N,N],[17,"SSL_CTRL_GET_EXTRA_CHAIN_CERTS","","",N,N],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",N,N],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",N,N],[17,"SSL_MODE_AUTO_RETRY","","",N,N],[17,"SSL_MODE_NO_AUTO_CHAIN","","",N,N],[17,"SSL_MODE_RELEASE_BUFFERS","","",N,N],[17,"SSL_ERROR_NONE","","",N,N],[17,"SSL_ERROR_SSL","","",N,N],[17,"SSL_ERROR_SYSCALL","","",N,N],[17,"SSL_ERROR_WANT_ACCEPT","","",N,N],[17,"SSL_ERROR_WANT_CONNECT","","",N,N],[17,"SSL_ERROR_WANT_READ","","",N,N],[17,"SSL_ERROR_WANT_WRITE","","",N,N],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",N,N],[17,"SSL_ERROR_ZERO_RETURN","","",N,N],[17,"SSL_VERIFY_NONE","","",N,N],[17,"SSL_VERIFY_PEER","","",N,N],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",N,N],[17,"SSL_OP_TLSEXT_PADDING","","",N,N],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",N,N],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",N,N],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",N,N],[17,"SSL_OP_ALL","","",N,N],[17,"SSL_OP_NO_QUERY_MTU","","",N,N],[17,"SSL_OP_COOKIE_EXCHANGE","","",N,N],[17,"SSL_OP_NO_TICKET","","",N,N],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",N,N],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",N,N],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",N,N],[17,"SSL_OP_NO_TLSv1","","",N,N],[17,"SSL_OP_NO_TLSv1_1","","",N,N],[17,"SSL_OP_NO_TLSv1_2","","",N,N],[17,"SSL_OP_NO_SSL_MASK","","",N,N],[17,"SSL_FILETYPE_PEM","","",N,N],[17,"SSL_FILETYPE_ASN1","","",N,N],[17,"SSL_SESS_CACHE_OFF","","",N,N],[17,"SSL_SESS_CACHE_CLIENT","","",N,N],[17,"SSL_SESS_CACHE_SERVER","","",N,N],[17,"SSL_SESS_CACHE_BOTH","","",N,N],[17,"SSL_SESS_CACHE_NO_AUTO_CLEAR","","",N,N],[17,"SSL_SESS_CACHE_NO_INTERNAL_LOOKUP","","",N,N],[17,"SSL_SESS_CACHE_NO_INTERNAL_STORE","","",N,N],[17,"SSL_SESS_CACHE_NO_INTERNAL","","",N,N],[17,"SSL3_VERSION","","",N,N],[17,"TLS1_VERSION","","",N,N],[17,"TLS1_1_VERSION","","",N,N],[17,"TLS1_2_VERSION","","",N,N],[17,"TLSEXT_NAMETYPE_host_name","","",N,N],[17,"TLSEXT_STATUSTYPE_ocsp","","",N,N],[17,"SSL_TLSEXT_ERR_OK","","",N,N],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",N,N],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",N,N],[17,"SSL_TLSEXT_ERR_NOACK","","",N,N],[17,"OPENSSL_NPN_UNSUPPORTED","","",N,N],[17,"OPENSSL_NPN_NEGOTIATED","","",N,N],[17,"OPENSSL_NPN_NO_OVERLAP","","",N,N],[17,"V_ASN1_GENERALIZEDTIME","","",N,N],[17,"V_ASN1_UTCTIME","","",N,N],[17,"X509_FILETYPE_ASN1","","",N,N],[17,"X509_FILETYPE_DEFAULT","","",N,N],[17,"X509_FILETYPE_PEM","","",N,N],[17,"X509_V_OK","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",N,N],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",N,N],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",N,N],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",N,N],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",N,N],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",N,N],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",N,N],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",N,N],[17,"X509_V_ERR_OUT_OF_MEM","","",N,N],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",N,N],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",N,N],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",N,N],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",N,N],[17,"X509_V_ERR_CERT_REVOKED","","",N,N],[17,"X509_V_ERR_INVALID_CA","","",N,N],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",N,N],[17,"X509_V_ERR_INVALID_PURPOSE","","",N,N],[17,"X509_V_ERR_CERT_UNTRUSTED","","",N,N],[17,"X509_V_ERR_CERT_REJECTED","","",N,N],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",N,N],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",N,N],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",N,N],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",N,N],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",N,N],[17,"X509_V_ERR_INVALID_NON_CA","","",N,N],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",N,N],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",N,N],[17,"X509_V_ERR_INVALID_EXTENSION","","",N,N],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",N,N],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",N,N],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",N,N],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",N,N],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",N,N],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",N,N],[17,"X509_V_ERR_SUBTREE_MINMAX","","",N,N],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",N,N],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",N,N],[17,"X509_V_ERR_SUITE_B_INVALID_VERSION","","",N,N],[17,"X509_V_ERR_SUITE_B_INVALID_ALGORITHM","","",N,N],[17,"X509_V_ERR_SUITE_B_INVALID_CURVE","","",N,N],[17,"X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM","","",N,N],[17,"X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED","","",N,N],[17,"X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256","","",N,N],[17,"X509_V_ERR_HOSTNAME_MISMATCH","","",N,N],[17,"X509_V_ERR_EMAIL_MISMATCH","","",N,N],[17,"X509_V_ERR_IP_ADDRESS_MISMATCH","","",N,N],[17,"X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT","","",N,N],[17,"X509_CHECK_FLAG_NO_WILDCARDS","","",N,N],[17,"X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS","","",N,N],[17,"X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS","","",N,N],[17,"X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS","","",N,N],[17,"GEN_OTHERNAME","","",N,N],[17,"GEN_EMAIL","","",N,N],[17,"GEN_DNS","","",N,N],[17,"GEN_X400","","",N,N],[17,"GEN_DIRNAME","","",N,N],[17,"GEN_EDIPARTY","","",N,N],[17,"GEN_URI","","",N,N],[17,"GEN_IPADD","","",N,N],[17,"GEN_RID","","",N,N],[17,"DTLS1_COOKIE_LENGTH","","",N,N],[11,"clone","","",5,[[["self"]],["point_conversion_form_t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]]],"paths":[[3,"GENERAL_NAME"],[3,"SHA_CTX"],[3,"SHA256_CTX"],[3,"SHA512_CTX"],[3,"ERR_STRING_DATA"],[4,"point_conversion_form_t"],[3,"AES_KEY"],[3,"X509V3_CTX"],[4,"ASN1_INTEGER"],[4,"ASN1_GENERALIZEDTIME"],[4,"ASN1_STRING"],[4,"ASN1_BIT_STRING"],[4,"ASN1_TIME"],[4,"ASN1_TYPE"],[4,"ASN1_OBJECT"],[4,"BN_CTX"],[4,"BN_GENCB"],[4,"CMS_ContentInfo"],[4,"CONF"],[4,"CONF_METHOD"],[4,"COMP_METHOD"],[4,"EC_KEY"],[4,"EC_GROUP"],[4,"EC_METHOD"],[4,"EC_POINT"],[4,"ENGINE"],[4,"EVP_CIPHER_CTX"],[4,"EVP_MD"],[4,"EVP_PKEY_CTX"],[4,"OCSP_BASICRESP"],[4,"OCSP_CERTID"],[4,"OCSP_RESPONSE"],[4,"OCSP_REQUEST"],[4,"OCSP_ONEREQ"],[4,"SSL_CIPHER"],[4,"SSL_METHOD"],[4,"X509_CRL"],[4,"X509_EXTENSION"],[4,"X509_NAME"],[4,"X509_NAME_ENTRY"],[4,"X509_STORE"],[4,"X509_STORE_CTX"],[4,"bio_st"],[4,"DH_METHOD"],[4,"RSA_METHOD"],[4,"BN_MONT_CTX"],[4,"BN_BLINDING"],[4,"DSA_METHOD"],[4,"EVP_PKEY_ASN1_METHOD"]]};
searchIndex["proc_macro2"]={"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`] API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a sequence of token trees.",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion information.",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`, `-` or `#`.",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`), byte character (`b'a'`), an integer or floating point number with or without a suffix (`1`, `1u8`, `2.3`, `2.3f32`).",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another `Punct` or followed by another token or whitespace.",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,"token_stream","","Public implementation details for the `TokenStream` type, such as iterators.",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"next","","",3,[[["self"]],["option",["tokentree"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"into_iter","proc_macro2","",4,[[["self"]],["intoiter"]]],[11,"clone","","",4,[[["self"]],["tokenstream"]]],[11,"new","","Returns an empty `TokenStream` containing no token trees.",4,[[],["tokenstream"]]],[11,"empty","","",4,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",4,[[["self"]],["bool"]]],[11,"default","","",4,[[],["self"]]],[11,"from_str","","",4,[[["str"]],["result",["tokenstream","lexerror"]]]],[11,"from","","",4,[[["tokenstream"]],["tokenstream"]]],[11,"extend","","",4,[[["self"],["i"]]]],[11,"from_iter","","",4,[[["i"]],["self"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["span"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",6,[[],["span"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"span","","Returns the span of this tree, delegating to the `span` method of the contained token or a delimited stream.",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"new","","Creates a new `Group` with the given delimiter and token stream.",7,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",7,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in this `Group`.",7,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream, spanning the entire `Group`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not its internal tokens.",7,[[["self"],["span"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",8,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",8,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character, indicating whether it's immediately followed by another `Punct` in the token stream, so they can potentially be combined into a multicharacter operator (`Joint`), or it's followed by some other token or whitespace (`Alone`) so the operator has certainly ended.",8,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",8,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",8,[[["self"],["span"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["ident"]]],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",9,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",9,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",9,[[["self"],["span"]]]],[11,"eq","","",9,[[["self"],["ident"]],["bool"]]],[11,"eq","","",9,[[["self"],["t"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["ident"]],["option",["ordering"]]]],[11,"cmp","","",9,[[["self"],["ident"]],["ordering"]]],[11,"hash","","",9,[[["self"],["h"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["literal"]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","",10,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",10,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",10,[[["f32"]],["literal"]]],[11,"string","","",10,[[["str"]],["literal"]]],[11,"character","","",10,[[["char"]],["literal"]]],[11,"byte_string","","",10,N],[11,"span","","",10,[[["self"]],["span"]]],[11,"set_span","","",10,[[["self"],["span"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"not_found","","",4,[[["str"],["str"]],["e"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"not_found","","",5,[[["str"],["str"]],["e"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"not_found","","",6,[[["str"],["str"]],["e"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"not_found","","",7,[[["str"],["str"]],["e"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"not_found","","",8,[[["str"],["str"]],["e"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"not_found","","",9,[[["str"],["str"]],["e"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"not_found","","",10,[[["str"],["str"]],["e"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"not_found","","",0,[[["str"],["str"]],["e"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"not_found","","",1,[[["str"],["str"]],["e"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"not_found","","",2,[[["str"],["str"]],["e"]]],[11,"into","proc_macro2::token_stream","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"not_found","","",3,[[["str"],["str"]],["e"]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"IntoIter"],[3,"TokenStream"],[3,"LexError"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"]]};
searchIndex["protobuf"]={"doc":"Library to read and write protocol buffers data.","items":[[3,"UnknownFields","protobuf","",N,N],[12,"fields","","",0,N],[3,"UnknownFieldsIter","","",N,N],[3,"UnknownValues","","",N,N],[12,"fixed32","","",1,N],[12,"fixed64","","",1,N],[12,"varint","","",1,N],[12,"length_delimited","","",1,N],[3,"UnknownValuesIter","","",N,N],[3,"RepeatedField","","Wrapper around vector to avoid deallocations on clear.",N,N],[3,"SingularField","","Like `Option<T>`, but keeps the actual element on `clear`.",N,N],[3,"SingularPtrField","","Like `Option<Box<T>>`, but keeps the actual element on `clear`.",N,N],[3,"CachedSize","","Cached size field used in generated code. It is always equal to itself to simplify generated code. (Generated code can use `#[derive(Eq)]`).",N,N],[4,"UnknownValue","","",N,N],[13,"Fixed32","","",2,N],[13,"Fixed64","","",2,N],[13,"Varint","","",2,N],[13,"LengthDelimited","","",2,N],[4,"UnknownValueRef","","",N,N],[13,"Fixed32","","",3,N],[13,"Fixed64","","",3,N],[13,"Varint","","",3,N],[13,"LengthDelimited","","",3,N],[5,"parse_from_bytes","","Parse message from byte array.",N,N],[5,"parse_from_reader","","Parse message from reader. Parse stops on EOF or when error encountered.",N,[[["read"]],["protobufresult"]]],[5,"parse_length_delimited_from","","Parse length-delimited message from stream.",N,[[["codedinputstream"]],["protobufresult"]]],[5,"parse_length_delimited_from_reader","","Parse length-delimited message from `Read`.",N,[[["read"]],["protobufresult"]]],[5,"parse_length_delimited_from_bytes","","Parse length-delimited message from bytes.",N,N],[0,"descriptor","","",N,N],[3,"FileDescriptorSet","protobuf::descriptor","",N,N],[3,"FileDescriptorProto","","",N,N],[3,"DescriptorProto","","",N,N],[3,"DescriptorProto_ExtensionRange","","",N,N],[3,"DescriptorProto_ReservedRange","","",N,N],[3,"FieldDescriptorProto","","",N,N],[3,"OneofDescriptorProto","","",N,N],[3,"EnumDescriptorProto","","",N,N],[3,"EnumValueDescriptorProto","","",N,N],[3,"ServiceDescriptorProto","","",N,N],[3,"MethodDescriptorProto","","",N,N],[3,"FileOptions","","",N,N],[3,"MessageOptions","","",N,N],[3,"FieldOptions","","",N,N],[3,"OneofOptions","","",N,N],[3,"EnumOptions","","",N,N],[3,"EnumValueOptions","","",N,N],[3,"ServiceOptions","","",N,N],[3,"MethodOptions","","",N,N],[3,"UninterpretedOption","","",N,N],[3,"UninterpretedOption_NamePart","","",N,N],[3,"SourceCodeInfo","","",N,N],[3,"SourceCodeInfo_Location","","",N,N],[3,"GeneratedCodeInfo","","",N,N],[3,"GeneratedCodeInfo_Annotation","","",N,N],[4,"FieldDescriptorProto_Type","","",N,N],[13,"TYPE_DOUBLE","","",4,N],[13,"TYPE_FLOAT","","",4,N],[13,"TYPE_INT64","","",4,N],[13,"TYPE_UINT64","","",4,N],[13,"TYPE_INT32","","",4,N],[13,"TYPE_FIXED64","","",4,N],[13,"TYPE_FIXED32","","",4,N],[13,"TYPE_BOOL","","",4,N],[13,"TYPE_STRING","","",4,N],[13,"TYPE_GROUP","","",4,N],[13,"TYPE_MESSAGE","","",4,N],[13,"TYPE_BYTES","","",4,N],[13,"TYPE_UINT32","","",4,N],[13,"TYPE_ENUM","","",4,N],[13,"TYPE_SFIXED32","","",4,N],[13,"TYPE_SFIXED64","","",4,N],[13,"TYPE_SINT32","","",4,N],[13,"TYPE_SINT64","","",4,N],[4,"FieldDescriptorProto_Label","","",N,N],[13,"LABEL_OPTIONAL","","",5,N],[13,"LABEL_REQUIRED","","",5,N],[13,"LABEL_REPEATED","","",5,N],[4,"FileOptions_OptimizeMode","","",N,N],[13,"SPEED","","",6,N],[13,"CODE_SIZE","","",6,N],[13,"LITE_RUNTIME","","",6,N],[4,"FieldOptions_CType","","",N,N],[13,"STRING","","",7,N],[13,"CORD","","",7,N],[13,"STRING_PIECE","","",7,N],[4,"FieldOptions_JSType","","",N,N],[13,"JS_NORMAL","","",8,N],[13,"JS_STRING","","",8,N],[13,"JS_NUMBER","","",8,N],[5,"file_descriptor_proto","","",N,[[],["filedescriptorproto"]]],[11,"eq","","",9,[[["self"],["filedescriptorset"]],["bool"]]],[11,"ne","","",9,[[["self"],["filedescriptorset"]],["bool"]]],[11,"clone","","",9,[[["self"]],["filedescriptorset"]]],[11,"default","","",9,[[],["filedescriptorset"]]],[11,"new","","",9,[[],["filedescriptorset"]]],[11,"clear_file","","",9,[[["self"]]]],[11,"set_file","","",9,[[["self"],["repeatedfield",["filedescriptorproto"]]]]],[11,"mut_file","","",9,[[["self"]],["repeatedfield"]]],[11,"take_file","","",9,[[["self"]],["repeatedfield",["filedescriptorproto"]]]],[11,"get_file","","",9,N],[11,"is_initialized","","",9,[[["self"]],["bool"]]],[11,"merge_from","","",9,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",9,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",9,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",9,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",9,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",9,[[["self"]],["unknownfields"]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any","","",9,[[["box"]],["box",["any"]]]],[11,"descriptor","","",9,[[["self"]],["messagedescriptor"]]],[11,"new","","",9,[[],["filedescriptorset"]]],[11,"descriptor_static","","",9,[[],["messagedescriptor"]]],[11,"default_instance","","",9,[[],["filedescriptorset"]]],[11,"clear","","",9,[[["self"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",9,[[["self"]],["protobufvalueref"]]],[11,"eq","","",10,[[["self"],["filedescriptorproto"]],["bool"]]],[11,"ne","","",10,[[["self"],["filedescriptorproto"]],["bool"]]],[11,"clone","","",10,[[["self"]],["filedescriptorproto"]]],[11,"default","","",10,[[],["filedescriptorproto"]]],[11,"new","","",10,[[],["filedescriptorproto"]]],[11,"clear_name","","",10,[[["self"]]]],[11,"has_name","","",10,[[["self"]],["bool"]]],[11,"set_name","","",10,[[["self"],["string"]]]],[11,"mut_name","","",10,[[["self"]],["string"]]],[11,"take_name","","",10,[[["self"]],["string"]]],[11,"get_name","","",10,[[["self"]],["str"]]],[11,"clear_package","","",10,[[["self"]]]],[11,"has_package","","",10,[[["self"]],["bool"]]],[11,"set_package","","",10,[[["self"],["string"]]]],[11,"mut_package","","",10,[[["self"]],["string"]]],[11,"take_package","","",10,[[["self"]],["string"]]],[11,"get_package","","",10,[[["self"]],["str"]]],[11,"clear_dependency","","",10,[[["self"]]]],[11,"set_dependency","","",10,[[["self"],["repeatedfield",["string"]]]]],[11,"mut_dependency","","",10,[[["self"]],["repeatedfield"]]],[11,"take_dependency","","",10,[[["self"]],["repeatedfield",["string"]]]],[11,"get_dependency","","",10,N],[11,"clear_public_dependency","","",10,[[["self"]]]],[11,"set_public_dependency","","",10,[[["self"],["vec",["i32"]]]]],[11,"mut_public_dependency","","",10,[[["self"]],["vec"]]],[11,"take_public_dependency","","",10,[[["self"]],["vec",["i32"]]]],[11,"get_public_dependency","","",10,N],[11,"clear_weak_dependency","","",10,[[["self"]]]],[11,"set_weak_dependency","","",10,[[["self"],["vec",["i32"]]]]],[11,"mut_weak_dependency","","",10,[[["self"]],["vec"]]],[11,"take_weak_dependency","","",10,[[["self"]],["vec",["i32"]]]],[11,"get_weak_dependency","","",10,N],[11,"clear_message_type","","",10,[[["self"]]]],[11,"set_message_type","","",10,[[["self"],["repeatedfield",["descriptorproto"]]]]],[11,"mut_message_type","","",10,[[["self"]],["repeatedfield"]]],[11,"take_message_type","","",10,[[["self"]],["repeatedfield",["descriptorproto"]]]],[11,"get_message_type","","",10,N],[11,"clear_enum_type","","",10,[[["self"]]]],[11,"set_enum_type","","",10,[[["self"],["repeatedfield",["enumdescriptorproto"]]]]],[11,"mut_enum_type","","",10,[[["self"]],["repeatedfield"]]],[11,"take_enum_type","","",10,[[["self"]],["repeatedfield",["enumdescriptorproto"]]]],[11,"get_enum_type","","",10,N],[11,"clear_service","","",10,[[["self"]]]],[11,"set_service","","",10,[[["self"],["repeatedfield",["servicedescriptorproto"]]]]],[11,"mut_service","","",10,[[["self"]],["repeatedfield"]]],[11,"take_service","","",10,[[["self"]],["repeatedfield",["servicedescriptorproto"]]]],[11,"get_service","","",10,N],[11,"clear_extension","","",10,[[["self"]]]],[11,"set_extension","","",10,[[["self"],["repeatedfield",["fielddescriptorproto"]]]]],[11,"mut_extension","","",10,[[["self"]],["repeatedfield"]]],[11,"take_extension","","",10,[[["self"]],["repeatedfield",["fielddescriptorproto"]]]],[11,"get_extension","","",10,N],[11,"clear_options","","",10,[[["self"]]]],[11,"has_options","","",10,[[["self"]],["bool"]]],[11,"set_options","","",10,[[["self"],["fileoptions"]]]],[11,"mut_options","","",10,[[["self"]],["fileoptions"]]],[11,"take_options","","",10,[[["self"]],["fileoptions"]]],[11,"get_options","","",10,[[["self"]],["fileoptions"]]],[11,"clear_source_code_info","","",10,[[["self"]]]],[11,"has_source_code_info","","",10,[[["self"]],["bool"]]],[11,"set_source_code_info","","",10,[[["self"],["sourcecodeinfo"]]]],[11,"mut_source_code_info","","",10,[[["self"]],["sourcecodeinfo"]]],[11,"take_source_code_info","","",10,[[["self"]],["sourcecodeinfo"]]],[11,"get_source_code_info","","",10,[[["self"]],["sourcecodeinfo"]]],[11,"clear_syntax","","",10,[[["self"]]]],[11,"has_syntax","","",10,[[["self"]],["bool"]]],[11,"set_syntax","","",10,[[["self"],["string"]]]],[11,"mut_syntax","","",10,[[["self"]],["string"]]],[11,"take_syntax","","",10,[[["self"]],["string"]]],[11,"get_syntax","","",10,[[["self"]],["str"]]],[11,"is_initialized","","",10,[[["self"]],["bool"]]],[11,"merge_from","","",10,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",10,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",10,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",10,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",10,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",10,[[["self"]],["unknownfields"]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"into_any","","",10,[[["box"]],["box",["any"]]]],[11,"descriptor","","",10,[[["self"]],["messagedescriptor"]]],[11,"new","","",10,[[],["filedescriptorproto"]]],[11,"descriptor_static","","",10,[[],["messagedescriptor"]]],[11,"default_instance","","",10,[[],["filedescriptorproto"]]],[11,"clear","","",10,[[["self"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",10,[[["self"]],["protobufvalueref"]]],[11,"eq","","",11,[[["self"],["descriptorproto"]],["bool"]]],[11,"ne","","",11,[[["self"],["descriptorproto"]],["bool"]]],[11,"clone","","",11,[[["self"]],["descriptorproto"]]],[11,"default","","",11,[[],["descriptorproto"]]],[11,"new","","",11,[[],["descriptorproto"]]],[11,"clear_name","","",11,[[["self"]]]],[11,"has_name","","",11,[[["self"]],["bool"]]],[11,"set_name","","",11,[[["self"],["string"]]]],[11,"mut_name","","",11,[[["self"]],["string"]]],[11,"take_name","","",11,[[["self"]],["string"]]],[11,"get_name","","",11,[[["self"]],["str"]]],[11,"clear_field","","",11,[[["self"]]]],[11,"set_field","","",11,[[["self"],["repeatedfield",["fielddescriptorproto"]]]]],[11,"mut_field","","",11,[[["self"]],["repeatedfield"]]],[11,"take_field","","",11,[[["self"]],["repeatedfield",["fielddescriptorproto"]]]],[11,"get_field","","",11,N],[11,"clear_extension","","",11,[[["self"]]]],[11,"set_extension","","",11,[[["self"],["repeatedfield",["fielddescriptorproto"]]]]],[11,"mut_extension","","",11,[[["self"]],["repeatedfield"]]],[11,"take_extension","","",11,[[["self"]],["repeatedfield",["fielddescriptorproto"]]]],[11,"get_extension","","",11,N],[11,"clear_nested_type","","",11,[[["self"]]]],[11,"set_nested_type","","",11,[[["self"],["repeatedfield",["descriptorproto"]]]]],[11,"mut_nested_type","","",11,[[["self"]],["repeatedfield"]]],[11,"take_nested_type","","",11,[[["self"]],["repeatedfield",["descriptorproto"]]]],[11,"get_nested_type","","",11,N],[11,"clear_enum_type","","",11,[[["self"]]]],[11,"set_enum_type","","",11,[[["self"],["repeatedfield",["enumdescriptorproto"]]]]],[11,"mut_enum_type","","",11,[[["self"]],["repeatedfield"]]],[11,"take_enum_type","","",11,[[["self"]],["repeatedfield",["enumdescriptorproto"]]]],[11,"get_enum_type","","",11,N],[11,"clear_extension_range","","",11,[[["self"]]]],[11,"set_extension_range","","",11,[[["self"],["repeatedfield",["descriptorproto_extensionrange"]]]]],[11,"mut_extension_range","","",11,[[["self"]],["repeatedfield"]]],[11,"take_extension_range","","",11,[[["self"]],["repeatedfield",["descriptorproto_extensionrange"]]]],[11,"get_extension_range","","",11,N],[11,"clear_oneof_decl","","",11,[[["self"]]]],[11,"set_oneof_decl","","",11,[[["self"],["repeatedfield",["oneofdescriptorproto"]]]]],[11,"mut_oneof_decl","","",11,[[["self"]],["repeatedfield"]]],[11,"take_oneof_decl","","",11,[[["self"]],["repeatedfield",["oneofdescriptorproto"]]]],[11,"get_oneof_decl","","",11,N],[11,"clear_options","","",11,[[["self"]]]],[11,"has_options","","",11,[[["self"]],["bool"]]],[11,"set_options","","",11,[[["self"],["messageoptions"]]]],[11,"mut_options","","",11,[[["self"]],["messageoptions"]]],[11,"take_options","","",11,[[["self"]],["messageoptions"]]],[11,"get_options","","",11,[[["self"]],["messageoptions"]]],[11,"clear_reserved_range","","",11,[[["self"]]]],[11,"set_reserved_range","","",11,[[["self"],["repeatedfield",["descriptorproto_reservedrange"]]]]],[11,"mut_reserved_range","","",11,[[["self"]],["repeatedfield"]]],[11,"take_reserved_range","","",11,[[["self"]],["repeatedfield",["descriptorproto_reservedrange"]]]],[11,"get_reserved_range","","",11,N],[11,"clear_reserved_name","","",11,[[["self"]]]],[11,"set_reserved_name","","",11,[[["self"],["repeatedfield",["string"]]]]],[11,"mut_reserved_name","","",11,[[["self"]],["repeatedfield"]]],[11,"take_reserved_name","","",11,[[["self"]],["repeatedfield",["string"]]]],[11,"get_reserved_name","","",11,N],[11,"is_initialized","","",11,[[["self"]],["bool"]]],[11,"merge_from","","",11,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",11,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",11,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",11,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",11,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",11,[[["self"]],["unknownfields"]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"into_any","","",11,[[["box"]],["box",["any"]]]],[11,"descriptor","","",11,[[["self"]],["messagedescriptor"]]],[11,"new","","",11,[[],["descriptorproto"]]],[11,"descriptor_static","","",11,[[],["messagedescriptor"]]],[11,"default_instance","","",11,[[],["descriptorproto"]]],[11,"clear","","",11,[[["self"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",11,[[["self"]],["protobufvalueref"]]],[11,"eq","","",12,[[["self"],["descriptorproto_extensionrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["descriptorproto_extensionrange"]],["bool"]]],[11,"clone","","",12,[[["self"]],["descriptorproto_extensionrange"]]],[11,"default","","",12,[[],["descriptorproto_extensionrange"]]],[11,"new","","",12,[[],["descriptorproto_extensionrange"]]],[11,"clear_start","","",12,[[["self"]]]],[11,"has_start","","",12,[[["self"]],["bool"]]],[11,"set_start","","",12,[[["self"],["i32"]]]],[11,"get_start","","",12,[[["self"]],["i32"]]],[11,"clear_end","","",12,[[["self"]]]],[11,"has_end","","",12,[[["self"]],["bool"]]],[11,"set_end","","",12,[[["self"],["i32"]]]],[11,"get_end","","",12,[[["self"]],["i32"]]],[11,"is_initialized","","",12,[[["self"]],["bool"]]],[11,"merge_from","","",12,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",12,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",12,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",12,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",12,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",12,[[["self"]],["unknownfields"]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"into_any","","",12,[[["box"]],["box",["any"]]]],[11,"descriptor","","",12,[[["self"]],["messagedescriptor"]]],[11,"new","","",12,[[],["descriptorproto_extensionrange"]]],[11,"descriptor_static","","",12,[[],["messagedescriptor"]]],[11,"default_instance","","",12,[[],["descriptorproto_extensionrange"]]],[11,"clear","","",12,[[["self"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",12,[[["self"]],["protobufvalueref"]]],[11,"eq","","",13,[[["self"],["descriptorproto_reservedrange"]],["bool"]]],[11,"ne","","",13,[[["self"],["descriptorproto_reservedrange"]],["bool"]]],[11,"clone","","",13,[[["self"]],["descriptorproto_reservedrange"]]],[11,"default","","",13,[[],["descriptorproto_reservedrange"]]],[11,"new","","",13,[[],["descriptorproto_reservedrange"]]],[11,"clear_start","","",13,[[["self"]]]],[11,"has_start","","",13,[[["self"]],["bool"]]],[11,"set_start","","",13,[[["self"],["i32"]]]],[11,"get_start","","",13,[[["self"]],["i32"]]],[11,"clear_end","","",13,[[["self"]]]],[11,"has_end","","",13,[[["self"]],["bool"]]],[11,"set_end","","",13,[[["self"],["i32"]]]],[11,"get_end","","",13,[[["self"]],["i32"]]],[11,"is_initialized","","",13,[[["self"]],["bool"]]],[11,"merge_from","","",13,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",13,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",13,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",13,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",13,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",13,[[["self"]],["unknownfields"]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"into_any","","",13,[[["box"]],["box",["any"]]]],[11,"descriptor","","",13,[[["self"]],["messagedescriptor"]]],[11,"new","","",13,[[],["descriptorproto_reservedrange"]]],[11,"descriptor_static","","",13,[[],["messagedescriptor"]]],[11,"default_instance","","",13,[[],["descriptorproto_reservedrange"]]],[11,"clear","","",13,[[["self"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",13,[[["self"]],["protobufvalueref"]]],[11,"eq","","",14,[[["self"],["fielddescriptorproto"]],["bool"]]],[11,"ne","","",14,[[["self"],["fielddescriptorproto"]],["bool"]]],[11,"clone","","",14,[[["self"]],["fielddescriptorproto"]]],[11,"default","","",14,[[],["fielddescriptorproto"]]],[11,"new","","",14,[[],["fielddescriptorproto"]]],[11,"clear_name","","",14,[[["self"]]]],[11,"has_name","","",14,[[["self"]],["bool"]]],[11,"set_name","","",14,[[["self"],["string"]]]],[11,"mut_name","","",14,[[["self"]],["string"]]],[11,"take_name","","",14,[[["self"]],["string"]]],[11,"get_name","","",14,[[["self"]],["str"]]],[11,"clear_number","","",14,[[["self"]]]],[11,"has_number","","",14,[[["self"]],["bool"]]],[11,"set_number","","",14,[[["self"],["i32"]]]],[11,"get_number","","",14,[[["self"]],["i32"]]],[11,"clear_label","","",14,[[["self"]]]],[11,"has_label","","",14,[[["self"]],["bool"]]],[11,"set_label","","",14,[[["self"],["fielddescriptorproto_label"]]]],[11,"get_label","","",14,[[["self"]],["fielddescriptorproto_label"]]],[11,"clear_field_type","","",14,[[["self"]]]],[11,"has_field_type","","",14,[[["self"]],["bool"]]],[11,"set_field_type","","",14,[[["self"],["fielddescriptorproto_type"]]]],[11,"get_field_type","","",14,[[["self"]],["fielddescriptorproto_type"]]],[11,"clear_type_name","","",14,[[["self"]]]],[11,"has_type_name","","",14,[[["self"]],["bool"]]],[11,"set_type_name","","",14,[[["self"],["string"]]]],[11,"mut_type_name","","",14,[[["self"]],["string"]]],[11,"take_type_name","","",14,[[["self"]],["string"]]],[11,"get_type_name","","",14,[[["self"]],["str"]]],[11,"clear_extendee","","",14,[[["self"]]]],[11,"has_extendee","","",14,[[["self"]],["bool"]]],[11,"set_extendee","","",14,[[["self"],["string"]]]],[11,"mut_extendee","","",14,[[["self"]],["string"]]],[11,"take_extendee","","",14,[[["self"]],["string"]]],[11,"get_extendee","","",14,[[["self"]],["str"]]],[11,"clear_default_value","","",14,[[["self"]]]],[11,"has_default_value","","",14,[[["self"]],["bool"]]],[11,"set_default_value","","",14,[[["self"],["string"]]]],[11,"mut_default_value","","",14,[[["self"]],["string"]]],[11,"take_default_value","","",14,[[["self"]],["string"]]],[11,"get_default_value","","",14,[[["self"]],["str"]]],[11,"clear_oneof_index","","",14,[[["self"]]]],[11,"has_oneof_index","","",14,[[["self"]],["bool"]]],[11,"set_oneof_index","","",14,[[["self"],["i32"]]]],[11,"get_oneof_index","","",14,[[["self"]],["i32"]]],[11,"clear_json_name","","",14,[[["self"]]]],[11,"has_json_name","","",14,[[["self"]],["bool"]]],[11,"set_json_name","","",14,[[["self"],["string"]]]],[11,"mut_json_name","","",14,[[["self"]],["string"]]],[11,"take_json_name","","",14,[[["self"]],["string"]]],[11,"get_json_name","","",14,[[["self"]],["str"]]],[11,"clear_options","","",14,[[["self"]]]],[11,"has_options","","",14,[[["self"]],["bool"]]],[11,"set_options","","",14,[[["self"],["fieldoptions"]]]],[11,"mut_options","","",14,[[["self"]],["fieldoptions"]]],[11,"take_options","","",14,[[["self"]],["fieldoptions"]]],[11,"get_options","","",14,[[["self"]],["fieldoptions"]]],[11,"is_initialized","","",14,[[["self"]],["bool"]]],[11,"merge_from","","",14,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",14,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",14,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",14,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",14,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",14,[[["self"]],["unknownfields"]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"into_any","","",14,[[["box"]],["box",["any"]]]],[11,"descriptor","","",14,[[["self"]],["messagedescriptor"]]],[11,"new","","",14,[[],["fielddescriptorproto"]]],[11,"descriptor_static","","",14,[[],["messagedescriptor"]]],[11,"default_instance","","",14,[[],["fielddescriptorproto"]]],[11,"clear","","",14,[[["self"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",14,[[["self"]],["protobufvalueref"]]],[11,"clone","","",4,[[["self"]],["fielddescriptorproto_type"]]],[11,"eq","","",4,[[["self"],["fielddescriptorproto_type"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",4,N],[11,"value","","",4,[[["self"]],["i32"]]],[11,"from_i32","","",4,[[["i32"]],["option",["fielddescriptorproto_type"]]]],[11,"values","","",4,N],[11,"enum_descriptor_static","","",4,[[],["enumdescriptor"]]],[11,"as_ref","","",4,[[["self"]],["protobufvalueref"]]],[11,"clone","","",5,[[["self"]],["fielddescriptorproto_label"]]],[11,"eq","","",5,[[["self"],["fielddescriptorproto_label"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",5,N],[11,"value","","",5,[[["self"]],["i32"]]],[11,"from_i32","","",5,[[["i32"]],["option",["fielddescriptorproto_label"]]]],[11,"values","","",5,N],[11,"enum_descriptor_static","","",5,[[],["enumdescriptor"]]],[11,"as_ref","","",5,[[["self"]],["protobufvalueref"]]],[11,"eq","","",15,[[["self"],["oneofdescriptorproto"]],["bool"]]],[11,"ne","","",15,[[["self"],["oneofdescriptorproto"]],["bool"]]],[11,"clone","","",15,[[["self"]],["oneofdescriptorproto"]]],[11,"default","","",15,[[],["oneofdescriptorproto"]]],[11,"new","","",15,[[],["oneofdescriptorproto"]]],[11,"clear_name","","",15,[[["self"]]]],[11,"has_name","","",15,[[["self"]],["bool"]]],[11,"set_name","","",15,[[["self"],["string"]]]],[11,"mut_name","","",15,[[["self"]],["string"]]],[11,"take_name","","",15,[[["self"]],["string"]]],[11,"get_name","","",15,[[["self"]],["str"]]],[11,"clear_options","","",15,[[["self"]]]],[11,"has_options","","",15,[[["self"]],["bool"]]],[11,"set_options","","",15,[[["self"],["oneofoptions"]]]],[11,"mut_options","","",15,[[["self"]],["oneofoptions"]]],[11,"take_options","","",15,[[["self"]],["oneofoptions"]]],[11,"get_options","","",15,[[["self"]],["oneofoptions"]]],[11,"is_initialized","","",15,[[["self"]],["bool"]]],[11,"merge_from","","",15,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",15,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",15,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",15,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",15,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",15,[[["self"]],["unknownfields"]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"into_any","","",15,[[["box"]],["box",["any"]]]],[11,"descriptor","","",15,[[["self"]],["messagedescriptor"]]],[11,"new","","",15,[[],["oneofdescriptorproto"]]],[11,"descriptor_static","","",15,[[],["messagedescriptor"]]],[11,"default_instance","","",15,[[],["oneofdescriptorproto"]]],[11,"clear","","",15,[[["self"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",15,[[["self"]],["protobufvalueref"]]],[11,"eq","","",16,[[["self"],["enumdescriptorproto"]],["bool"]]],[11,"ne","","",16,[[["self"],["enumdescriptorproto"]],["bool"]]],[11,"clone","","",16,[[["self"]],["enumdescriptorproto"]]],[11,"default","","",16,[[],["enumdescriptorproto"]]],[11,"new","","",16,[[],["enumdescriptorproto"]]],[11,"clear_name","","",16,[[["self"]]]],[11,"has_name","","",16,[[["self"]],["bool"]]],[11,"set_name","","",16,[[["self"],["string"]]]],[11,"mut_name","","",16,[[["self"]],["string"]]],[11,"take_name","","",16,[[["self"]],["string"]]],[11,"get_name","","",16,[[["self"]],["str"]]],[11,"clear_value","","",16,[[["self"]]]],[11,"set_value","","",16,[[["self"],["repeatedfield",["enumvaluedescriptorproto"]]]]],[11,"mut_value","","",16,[[["self"]],["repeatedfield"]]],[11,"take_value","","",16,[[["self"]],["repeatedfield",["enumvaluedescriptorproto"]]]],[11,"get_value","","",16,N],[11,"clear_options","","",16,[[["self"]]]],[11,"has_options","","",16,[[["self"]],["bool"]]],[11,"set_options","","",16,[[["self"],["enumoptions"]]]],[11,"mut_options","","",16,[[["self"]],["enumoptions"]]],[11,"take_options","","",16,[[["self"]],["enumoptions"]]],[11,"get_options","","",16,[[["self"]],["enumoptions"]]],[11,"is_initialized","","",16,[[["self"]],["bool"]]],[11,"merge_from","","",16,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",16,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",16,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",16,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",16,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",16,[[["self"]],["unknownfields"]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"into_any","","",16,[[["box"]],["box",["any"]]]],[11,"descriptor","","",16,[[["self"]],["messagedescriptor"]]],[11,"new","","",16,[[],["enumdescriptorproto"]]],[11,"descriptor_static","","",16,[[],["messagedescriptor"]]],[11,"default_instance","","",16,[[],["enumdescriptorproto"]]],[11,"clear","","",16,[[["self"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",16,[[["self"]],["protobufvalueref"]]],[11,"eq","","",17,[[["self"],["enumvaluedescriptorproto"]],["bool"]]],[11,"ne","","",17,[[["self"],["enumvaluedescriptorproto"]],["bool"]]],[11,"clone","","",17,[[["self"]],["enumvaluedescriptorproto"]]],[11,"default","","",17,[[],["enumvaluedescriptorproto"]]],[11,"new","","",17,[[],["enumvaluedescriptorproto"]]],[11,"clear_name","","",17,[[["self"]]]],[11,"has_name","","",17,[[["self"]],["bool"]]],[11,"set_name","","",17,[[["self"],["string"]]]],[11,"mut_name","","",17,[[["self"]],["string"]]],[11,"take_name","","",17,[[["self"]],["string"]]],[11,"get_name","","",17,[[["self"]],["str"]]],[11,"clear_number","","",17,[[["self"]]]],[11,"has_number","","",17,[[["self"]],["bool"]]],[11,"set_number","","",17,[[["self"],["i32"]]]],[11,"get_number","","",17,[[["self"]],["i32"]]],[11,"clear_options","","",17,[[["self"]]]],[11,"has_options","","",17,[[["self"]],["bool"]]],[11,"set_options","","",17,[[["self"],["enumvalueoptions"]]]],[11,"mut_options","","",17,[[["self"]],["enumvalueoptions"]]],[11,"take_options","","",17,[[["self"]],["enumvalueoptions"]]],[11,"get_options","","",17,[[["self"]],["enumvalueoptions"]]],[11,"is_initialized","","",17,[[["self"]],["bool"]]],[11,"merge_from","","",17,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",17,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",17,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",17,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",17,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",17,[[["self"]],["unknownfields"]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"into_any","","",17,[[["box"]],["box",["any"]]]],[11,"descriptor","","",17,[[["self"]],["messagedescriptor"]]],[11,"new","","",17,[[],["enumvaluedescriptorproto"]]],[11,"descriptor_static","","",17,[[],["messagedescriptor"]]],[11,"default_instance","","",17,[[],["enumvaluedescriptorproto"]]],[11,"clear","","",17,[[["self"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",17,[[["self"]],["protobufvalueref"]]],[11,"eq","","",18,[[["self"],["servicedescriptorproto"]],["bool"]]],[11,"ne","","",18,[[["self"],["servicedescriptorproto"]],["bool"]]],[11,"clone","","",18,[[["self"]],["servicedescriptorproto"]]],[11,"default","","",18,[[],["servicedescriptorproto"]]],[11,"new","","",18,[[],["servicedescriptorproto"]]],[11,"clear_name","","",18,[[["self"]]]],[11,"has_name","","",18,[[["self"]],["bool"]]],[11,"set_name","","",18,[[["self"],["string"]]]],[11,"mut_name","","",18,[[["self"]],["string"]]],[11,"take_name","","",18,[[["self"]],["string"]]],[11,"get_name","","",18,[[["self"]],["str"]]],[11,"clear_method","","",18,[[["self"]]]],[11,"set_method","","",18,[[["self"],["repeatedfield",["methoddescriptorproto"]]]]],[11,"mut_method","","",18,[[["self"]],["repeatedfield"]]],[11,"take_method","","",18,[[["self"]],["repeatedfield",["methoddescriptorproto"]]]],[11,"get_method","","",18,N],[11,"clear_options","","",18,[[["self"]]]],[11,"has_options","","",18,[[["self"]],["bool"]]],[11,"set_options","","",18,[[["self"],["serviceoptions"]]]],[11,"mut_options","","",18,[[["self"]],["serviceoptions"]]],[11,"take_options","","",18,[[["self"]],["serviceoptions"]]],[11,"get_options","","",18,[[["self"]],["serviceoptions"]]],[11,"is_initialized","","",18,[[["self"]],["bool"]]],[11,"merge_from","","",18,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",18,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",18,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",18,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",18,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",18,[[["self"]],["unknownfields"]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"into_any","","",18,[[["box"]],["box",["any"]]]],[11,"descriptor","","",18,[[["self"]],["messagedescriptor"]]],[11,"new","","",18,[[],["servicedescriptorproto"]]],[11,"descriptor_static","","",18,[[],["messagedescriptor"]]],[11,"default_instance","","",18,[[],["servicedescriptorproto"]]],[11,"clear","","",18,[[["self"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",18,[[["self"]],["protobufvalueref"]]],[11,"eq","","",19,[[["self"],["methoddescriptorproto"]],["bool"]]],[11,"ne","","",19,[[["self"],["methoddescriptorproto"]],["bool"]]],[11,"clone","","",19,[[["self"]],["methoddescriptorproto"]]],[11,"default","","",19,[[],["methoddescriptorproto"]]],[11,"new","","",19,[[],["methoddescriptorproto"]]],[11,"clear_name","","",19,[[["self"]]]],[11,"has_name","","",19,[[["self"]],["bool"]]],[11,"set_name","","",19,[[["self"],["string"]]]],[11,"mut_name","","",19,[[["self"]],["string"]]],[11,"take_name","","",19,[[["self"]],["string"]]],[11,"get_name","","",19,[[["self"]],["str"]]],[11,"clear_input_type","","",19,[[["self"]]]],[11,"has_input_type","","",19,[[["self"]],["bool"]]],[11,"set_input_type","","",19,[[["self"],["string"]]]],[11,"mut_input_type","","",19,[[["self"]],["string"]]],[11,"take_input_type","","",19,[[["self"]],["string"]]],[11,"get_input_type","","",19,[[["self"]],["str"]]],[11,"clear_output_type","","",19,[[["self"]]]],[11,"has_output_type","","",19,[[["self"]],["bool"]]],[11,"set_output_type","","",19,[[["self"],["string"]]]],[11,"mut_output_type","","",19,[[["self"]],["string"]]],[11,"take_output_type","","",19,[[["self"]],["string"]]],[11,"get_output_type","","",19,[[["self"]],["str"]]],[11,"clear_options","","",19,[[["self"]]]],[11,"has_options","","",19,[[["self"]],["bool"]]],[11,"set_options","","",19,[[["self"],["methodoptions"]]]],[11,"mut_options","","",19,[[["self"]],["methodoptions"]]],[11,"take_options","","",19,[[["self"]],["methodoptions"]]],[11,"get_options","","",19,[[["self"]],["methodoptions"]]],[11,"clear_client_streaming","","",19,[[["self"]]]],[11,"has_client_streaming","","",19,[[["self"]],["bool"]]],[11,"set_client_streaming","","",19,[[["self"],["bool"]]]],[11,"get_client_streaming","","",19,[[["self"]],["bool"]]],[11,"clear_server_streaming","","",19,[[["self"]]]],[11,"has_server_streaming","","",19,[[["self"]],["bool"]]],[11,"set_server_streaming","","",19,[[["self"],["bool"]]]],[11,"get_server_streaming","","",19,[[["self"]],["bool"]]],[11,"is_initialized","","",19,[[["self"]],["bool"]]],[11,"merge_from","","",19,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",19,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",19,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",19,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",19,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",19,[[["self"]],["unknownfields"]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"into_any","","",19,[[["box"]],["box",["any"]]]],[11,"descriptor","","",19,[[["self"]],["messagedescriptor"]]],[11,"new","","",19,[[],["methoddescriptorproto"]]],[11,"descriptor_static","","",19,[[],["messagedescriptor"]]],[11,"default_instance","","",19,[[],["methoddescriptorproto"]]],[11,"clear","","",19,[[["self"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",19,[[["self"]],["protobufvalueref"]]],[11,"eq","","",20,[[["self"],["fileoptions"]],["bool"]]],[11,"ne","","",20,[[["self"],["fileoptions"]],["bool"]]],[11,"clone","","",20,[[["self"]],["fileoptions"]]],[11,"default","","",20,[[],["fileoptions"]]],[11,"new","","",20,[[],["fileoptions"]]],[11,"clear_java_package","","",20,[[["self"]]]],[11,"has_java_package","","",20,[[["self"]],["bool"]]],[11,"set_java_package","","",20,[[["self"],["string"]]]],[11,"mut_java_package","","",20,[[["self"]],["string"]]],[11,"take_java_package","","",20,[[["self"]],["string"]]],[11,"get_java_package","","",20,[[["self"]],["str"]]],[11,"clear_java_outer_classname","","",20,[[["self"]]]],[11,"has_java_outer_classname","","",20,[[["self"]],["bool"]]],[11,"set_java_outer_classname","","",20,[[["self"],["string"]]]],[11,"mut_java_outer_classname","","",20,[[["self"]],["string"]]],[11,"take_java_outer_classname","","",20,[[["self"]],["string"]]],[11,"get_java_outer_classname","","",20,[[["self"]],["str"]]],[11,"clear_java_multiple_files","","",20,[[["self"]]]],[11,"has_java_multiple_files","","",20,[[["self"]],["bool"]]],[11,"set_java_multiple_files","","",20,[[["self"],["bool"]]]],[11,"get_java_multiple_files","","",20,[[["self"]],["bool"]]],[11,"clear_java_generate_equals_and_hash","","",20,[[["self"]]]],[11,"has_java_generate_equals_and_hash","","",20,[[["self"]],["bool"]]],[11,"set_java_generate_equals_and_hash","","",20,[[["self"],["bool"]]]],[11,"get_java_generate_equals_and_hash","","",20,[[["self"]],["bool"]]],[11,"clear_java_string_check_utf8","","",20,[[["self"]]]],[11,"has_java_string_check_utf8","","",20,[[["self"]],["bool"]]],[11,"set_java_string_check_utf8","","",20,[[["self"],["bool"]]]],[11,"get_java_string_check_utf8","","",20,[[["self"]],["bool"]]],[11,"clear_optimize_for","","",20,[[["self"]]]],[11,"has_optimize_for","","",20,[[["self"]],["bool"]]],[11,"set_optimize_for","","",20,[[["self"],["fileoptions_optimizemode"]]]],[11,"get_optimize_for","","",20,[[["self"]],["fileoptions_optimizemode"]]],[11,"clear_go_package","","",20,[[["self"]]]],[11,"has_go_package","","",20,[[["self"]],["bool"]]],[11,"set_go_package","","",20,[[["self"],["string"]]]],[11,"mut_go_package","","",20,[[["self"]],["string"]]],[11,"take_go_package","","",20,[[["self"]],["string"]]],[11,"get_go_package","","",20,[[["self"]],["str"]]],[11,"clear_cc_generic_services","","",20,[[["self"]]]],[11,"has_cc_generic_services","","",20,[[["self"]],["bool"]]],[11,"set_cc_generic_services","","",20,[[["self"],["bool"]]]],[11,"get_cc_generic_services","","",20,[[["self"]],["bool"]]],[11,"clear_java_generic_services","","",20,[[["self"]]]],[11,"has_java_generic_services","","",20,[[["self"]],["bool"]]],[11,"set_java_generic_services","","",20,[[["self"],["bool"]]]],[11,"get_java_generic_services","","",20,[[["self"]],["bool"]]],[11,"clear_py_generic_services","","",20,[[["self"]]]],[11,"has_py_generic_services","","",20,[[["self"]],["bool"]]],[11,"set_py_generic_services","","",20,[[["self"],["bool"]]]],[11,"get_py_generic_services","","",20,[[["self"]],["bool"]]],[11,"clear_deprecated","","",20,[[["self"]]]],[11,"has_deprecated","","",20,[[["self"]],["bool"]]],[11,"set_deprecated","","",20,[[["self"],["bool"]]]],[11,"get_deprecated","","",20,[[["self"]],["bool"]]],[11,"clear_cc_enable_arenas","","",20,[[["self"]]]],[11,"has_cc_enable_arenas","","",20,[[["self"]],["bool"]]],[11,"set_cc_enable_arenas","","",20,[[["self"],["bool"]]]],[11,"get_cc_enable_arenas","","",20,[[["self"]],["bool"]]],[11,"clear_objc_class_prefix","","",20,[[["self"]]]],[11,"has_objc_class_prefix","","",20,[[["self"]],["bool"]]],[11,"set_objc_class_prefix","","",20,[[["self"],["string"]]]],[11,"mut_objc_class_prefix","","",20,[[["self"]],["string"]]],[11,"take_objc_class_prefix","","",20,[[["self"]],["string"]]],[11,"get_objc_class_prefix","","",20,[[["self"]],["str"]]],[11,"clear_csharp_namespace","","",20,[[["self"]]]],[11,"has_csharp_namespace","","",20,[[["self"]],["bool"]]],[11,"set_csharp_namespace","","",20,[[["self"],["string"]]]],[11,"mut_csharp_namespace","","",20,[[["self"]],["string"]]],[11,"take_csharp_namespace","","",20,[[["self"]],["string"]]],[11,"get_csharp_namespace","","",20,[[["self"]],["str"]]],[11,"clear_uninterpreted_option","","",20,[[["self"]]]],[11,"set_uninterpreted_option","","",20,[[["self"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",20,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",20,[[["self"]],["repeatedfield",["uninterpretedoption"]]]],[11,"get_uninterpreted_option","","",20,N],[11,"is_initialized","","",20,[[["self"]],["bool"]]],[11,"merge_from","","",20,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",20,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",20,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",20,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",20,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",20,[[["self"]],["unknownfields"]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"into_any","","",20,[[["box"]],["box",["any"]]]],[11,"descriptor","","",20,[[["self"]],["messagedescriptor"]]],[11,"new","","",20,[[],["fileoptions"]]],[11,"descriptor_static","","",20,[[],["messagedescriptor"]]],[11,"default_instance","","",20,[[],["fileoptions"]]],[11,"clear","","",20,[[["self"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",20,[[["self"]],["protobufvalueref"]]],[11,"clone","","",6,[[["self"]],["fileoptions_optimizemode"]]],[11,"eq","","",6,[[["self"],["fileoptions_optimizemode"]],["bool"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"hash","","",6,N],[11,"value","","",6,[[["self"]],["i32"]]],[11,"from_i32","","",6,[[["i32"]],["option",["fileoptions_optimizemode"]]]],[11,"values","","",6,N],[11,"enum_descriptor_static","","",6,[[],["enumdescriptor"]]],[11,"as_ref","","",6,[[["self"]],["protobufvalueref"]]],[11,"eq","","",21,[[["self"],["messageoptions"]],["bool"]]],[11,"ne","","",21,[[["self"],["messageoptions"]],["bool"]]],[11,"clone","","",21,[[["self"]],["messageoptions"]]],[11,"default","","",21,[[],["messageoptions"]]],[11,"new","","",21,[[],["messageoptions"]]],[11,"clear_message_set_wire_format","","",21,[[["self"]]]],[11,"has_message_set_wire_format","","",21,[[["self"]],["bool"]]],[11,"set_message_set_wire_format","","",21,[[["self"],["bool"]]]],[11,"get_message_set_wire_format","","",21,[[["self"]],["bool"]]],[11,"clear_no_standard_descriptor_accessor","","",21,[[["self"]]]],[11,"has_no_standard_descriptor_accessor","","",21,[[["self"]],["bool"]]],[11,"set_no_standard_descriptor_accessor","","",21,[[["self"],["bool"]]]],[11,"get_no_standard_descriptor_accessor","","",21,[[["self"]],["bool"]]],[11,"clear_deprecated","","",21,[[["self"]]]],[11,"has_deprecated","","",21,[[["self"]],["bool"]]],[11,"set_deprecated","","",21,[[["self"],["bool"]]]],[11,"get_deprecated","","",21,[[["self"]],["bool"]]],[11,"clear_map_entry","","",21,[[["self"]]]],[11,"has_map_entry","","",21,[[["self"]],["bool"]]],[11,"set_map_entry","","",21,[[["self"],["bool"]]]],[11,"get_map_entry","","",21,[[["self"]],["bool"]]],[11,"clear_uninterpreted_option","","",21,[[["self"]]]],[11,"set_uninterpreted_option","","",21,[[["self"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",21,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",21,[[["self"]],["repeatedfield",["uninterpretedoption"]]]],[11,"get_uninterpreted_option","","",21,N],[11,"is_initialized","","",21,[[["self"]],["bool"]]],[11,"merge_from","","",21,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",21,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",21,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",21,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",21,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",21,[[["self"]],["unknownfields"]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"into_any","","",21,[[["box"]],["box",["any"]]]],[11,"descriptor","","",21,[[["self"]],["messagedescriptor"]]],[11,"new","","",21,[[],["messageoptions"]]],[11,"descriptor_static","","",21,[[],["messagedescriptor"]]],[11,"default_instance","","",21,[[],["messageoptions"]]],[11,"clear","","",21,[[["self"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",21,[[["self"]],["protobufvalueref"]]],[11,"eq","","",22,[[["self"],["fieldoptions"]],["bool"]]],[11,"ne","","",22,[[["self"],["fieldoptions"]],["bool"]]],[11,"clone","","",22,[[["self"]],["fieldoptions"]]],[11,"default","","",22,[[],["fieldoptions"]]],[11,"new","","",22,[[],["fieldoptions"]]],[11,"clear_ctype","","",22,[[["self"]]]],[11,"has_ctype","","",22,[[["self"]],["bool"]]],[11,"set_ctype","","",22,[[["self"],["fieldoptions_ctype"]]]],[11,"get_ctype","","",22,[[["self"]],["fieldoptions_ctype"]]],[11,"clear_packed","","",22,[[["self"]]]],[11,"has_packed","","",22,[[["self"]],["bool"]]],[11,"set_packed","","",22,[[["self"],["bool"]]]],[11,"get_packed","","",22,[[["self"]],["bool"]]],[11,"clear_jstype","","",22,[[["self"]]]],[11,"has_jstype","","",22,[[["self"]],["bool"]]],[11,"set_jstype","","",22,[[["self"],["fieldoptions_jstype"]]]],[11,"get_jstype","","",22,[[["self"]],["fieldoptions_jstype"]]],[11,"clear_lazy","","",22,[[["self"]]]],[11,"has_lazy","","",22,[[["self"]],["bool"]]],[11,"set_lazy","","",22,[[["self"],["bool"]]]],[11,"get_lazy","","",22,[[["self"]],["bool"]]],[11,"clear_deprecated","","",22,[[["self"]]]],[11,"has_deprecated","","",22,[[["self"]],["bool"]]],[11,"set_deprecated","","",22,[[["self"],["bool"]]]],[11,"get_deprecated","","",22,[[["self"]],["bool"]]],[11,"clear_weak","","",22,[[["self"]]]],[11,"has_weak","","",22,[[["self"]],["bool"]]],[11,"set_weak","","",22,[[["self"],["bool"]]]],[11,"get_weak","","",22,[[["self"]],["bool"]]],[11,"clear_uninterpreted_option","","",22,[[["self"]]]],[11,"set_uninterpreted_option","","",22,[[["self"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",22,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",22,[[["self"]],["repeatedfield",["uninterpretedoption"]]]],[11,"get_uninterpreted_option","","",22,N],[11,"is_initialized","","",22,[[["self"]],["bool"]]],[11,"merge_from","","",22,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",22,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",22,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",22,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",22,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",22,[[["self"]],["unknownfields"]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"into_any","","",22,[[["box"]],["box",["any"]]]],[11,"descriptor","","",22,[[["self"]],["messagedescriptor"]]],[11,"new","","",22,[[],["fieldoptions"]]],[11,"descriptor_static","","",22,[[],["messagedescriptor"]]],[11,"default_instance","","",22,[[],["fieldoptions"]]],[11,"clear","","",22,[[["self"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",22,[[["self"]],["protobufvalueref"]]],[11,"clone","","",7,[[["self"]],["fieldoptions_ctype"]]],[11,"eq","","",7,[[["self"],["fieldoptions_ctype"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"hash","","",7,N],[11,"value","","",7,[[["self"]],["i32"]]],[11,"from_i32","","",7,[[["i32"]],["option",["fieldoptions_ctype"]]]],[11,"values","","",7,N],[11,"enum_descriptor_static","","",7,[[],["enumdescriptor"]]],[11,"as_ref","","",7,[[["self"]],["protobufvalueref"]]],[11,"clone","","",8,[[["self"]],["fieldoptions_jstype"]]],[11,"eq","","",8,[[["self"],["fieldoptions_jstype"]],["bool"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",8,N],[11,"value","","",8,[[["self"]],["i32"]]],[11,"from_i32","","",8,[[["i32"]],["option",["fieldoptions_jstype"]]]],[11,"values","","",8,N],[11,"enum_descriptor_static","","",8,[[],["enumdescriptor"]]],[11,"as_ref","","",8,[[["self"]],["protobufvalueref"]]],[11,"eq","","",23,[[["self"],["oneofoptions"]],["bool"]]],[11,"ne","","",23,[[["self"],["oneofoptions"]],["bool"]]],[11,"clone","","",23,[[["self"]],["oneofoptions"]]],[11,"default","","",23,[[],["oneofoptions"]]],[11,"new","","",23,[[],["oneofoptions"]]],[11,"clear_uninterpreted_option","","",23,[[["self"]]]],[11,"set_uninterpreted_option","","",23,[[["self"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",23,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",23,[[["self"]],["repeatedfield",["uninterpretedoption"]]]],[11,"get_uninterpreted_option","","",23,N],[11,"is_initialized","","",23,[[["self"]],["bool"]]],[11,"merge_from","","",23,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",23,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",23,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",23,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",23,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",23,[[["self"]],["unknownfields"]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"into_any","","",23,[[["box"]],["box",["any"]]]],[11,"descriptor","","",23,[[["self"]],["messagedescriptor"]]],[11,"new","","",23,[[],["oneofoptions"]]],[11,"descriptor_static","","",23,[[],["messagedescriptor"]]],[11,"default_instance","","",23,[[],["oneofoptions"]]],[11,"clear","","",23,[[["self"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",23,[[["self"]],["protobufvalueref"]]],[11,"eq","","",24,[[["self"],["enumoptions"]],["bool"]]],[11,"ne","","",24,[[["self"],["enumoptions"]],["bool"]]],[11,"clone","","",24,[[["self"]],["enumoptions"]]],[11,"default","","",24,[[],["enumoptions"]]],[11,"new","","",24,[[],["enumoptions"]]],[11,"clear_allow_alias","","",24,[[["self"]]]],[11,"has_allow_alias","","",24,[[["self"]],["bool"]]],[11,"set_allow_alias","","",24,[[["self"],["bool"]]]],[11,"get_allow_alias","","",24,[[["self"]],["bool"]]],[11,"clear_deprecated","","",24,[[["self"]]]],[11,"has_deprecated","","",24,[[["self"]],["bool"]]],[11,"set_deprecated","","",24,[[["self"],["bool"]]]],[11,"get_deprecated","","",24,[[["self"]],["bool"]]],[11,"clear_uninterpreted_option","","",24,[[["self"]]]],[11,"set_uninterpreted_option","","",24,[[["self"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",24,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",24,[[["self"]],["repeatedfield",["uninterpretedoption"]]]],[11,"get_uninterpreted_option","","",24,N],[11,"is_initialized","","",24,[[["self"]],["bool"]]],[11,"merge_from","","",24,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",24,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",24,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",24,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",24,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",24,[[["self"]],["unknownfields"]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"into_any","","",24,[[["box"]],["box",["any"]]]],[11,"descriptor","","",24,[[["self"]],["messagedescriptor"]]],[11,"new","","",24,[[],["enumoptions"]]],[11,"descriptor_static","","",24,[[],["messagedescriptor"]]],[11,"default_instance","","",24,[[],["enumoptions"]]],[11,"clear","","",24,[[["self"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",24,[[["self"]],["protobufvalueref"]]],[11,"eq","","",25,[[["self"],["enumvalueoptions"]],["bool"]]],[11,"ne","","",25,[[["self"],["enumvalueoptions"]],["bool"]]],[11,"clone","","",25,[[["self"]],["enumvalueoptions"]]],[11,"default","","",25,[[],["enumvalueoptions"]]],[11,"new","","",25,[[],["enumvalueoptions"]]],[11,"clear_deprecated","","",25,[[["self"]]]],[11,"has_deprecated","","",25,[[["self"]],["bool"]]],[11,"set_deprecated","","",25,[[["self"],["bool"]]]],[11,"get_deprecated","","",25,[[["self"]],["bool"]]],[11,"clear_uninterpreted_option","","",25,[[["self"]]]],[11,"set_uninterpreted_option","","",25,[[["self"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",25,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",25,[[["self"]],["repeatedfield",["uninterpretedoption"]]]],[11,"get_uninterpreted_option","","",25,N],[11,"is_initialized","","",25,[[["self"]],["bool"]]],[11,"merge_from","","",25,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",25,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",25,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",25,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",25,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",25,[[["self"]],["unknownfields"]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any","","",25,[[["box"]],["box",["any"]]]],[11,"descriptor","","",25,[[["self"]],["messagedescriptor"]]],[11,"new","","",25,[[],["enumvalueoptions"]]],[11,"descriptor_static","","",25,[[],["messagedescriptor"]]],[11,"default_instance","","",25,[[],["enumvalueoptions"]]],[11,"clear","","",25,[[["self"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",25,[[["self"]],["protobufvalueref"]]],[11,"eq","","",26,[[["self"],["serviceoptions"]],["bool"]]],[11,"ne","","",26,[[["self"],["serviceoptions"]],["bool"]]],[11,"clone","","",26,[[["self"]],["serviceoptions"]]],[11,"default","","",26,[[],["serviceoptions"]]],[11,"new","","",26,[[],["serviceoptions"]]],[11,"clear_deprecated","","",26,[[["self"]]]],[11,"has_deprecated","","",26,[[["self"]],["bool"]]],[11,"set_deprecated","","",26,[[["self"],["bool"]]]],[11,"get_deprecated","","",26,[[["self"]],["bool"]]],[11,"clear_uninterpreted_option","","",26,[[["self"]]]],[11,"set_uninterpreted_option","","",26,[[["self"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",26,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",26,[[["self"]],["repeatedfield",["uninterpretedoption"]]]],[11,"get_uninterpreted_option","","",26,N],[11,"is_initialized","","",26,[[["self"]],["bool"]]],[11,"merge_from","","",26,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",26,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",26,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",26,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",26,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",26,[[["self"]],["unknownfields"]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"into_any","","",26,[[["box"]],["box",["any"]]]],[11,"descriptor","","",26,[[["self"]],["messagedescriptor"]]],[11,"new","","",26,[[],["serviceoptions"]]],[11,"descriptor_static","","",26,[[],["messagedescriptor"]]],[11,"default_instance","","",26,[[],["serviceoptions"]]],[11,"clear","","",26,[[["self"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",26,[[["self"]],["protobufvalueref"]]],[11,"eq","","",27,[[["self"],["methodoptions"]],["bool"]]],[11,"ne","","",27,[[["self"],["methodoptions"]],["bool"]]],[11,"clone","","",27,[[["self"]],["methodoptions"]]],[11,"default","","",27,[[],["methodoptions"]]],[11,"new","","",27,[[],["methodoptions"]]],[11,"clear_deprecated","","",27,[[["self"]]]],[11,"has_deprecated","","",27,[[["self"]],["bool"]]],[11,"set_deprecated","","",27,[[["self"],["bool"]]]],[11,"get_deprecated","","",27,[[["self"]],["bool"]]],[11,"clear_uninterpreted_option","","",27,[[["self"]]]],[11,"set_uninterpreted_option","","",27,[[["self"],["repeatedfield",["uninterpretedoption"]]]]],[11,"mut_uninterpreted_option","","",27,[[["self"]],["repeatedfield"]]],[11,"take_uninterpreted_option","","",27,[[["self"]],["repeatedfield",["uninterpretedoption"]]]],[11,"get_uninterpreted_option","","",27,N],[11,"is_initialized","","",27,[[["self"]],["bool"]]],[11,"merge_from","","",27,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",27,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",27,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",27,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",27,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",27,[[["self"]],["unknownfields"]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"into_any","","",27,[[["box"]],["box",["any"]]]],[11,"descriptor","","",27,[[["self"]],["messagedescriptor"]]],[11,"new","","",27,[[],["methodoptions"]]],[11,"descriptor_static","","",27,[[],["messagedescriptor"]]],[11,"default_instance","","",27,[[],["methodoptions"]]],[11,"clear","","",27,[[["self"]]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",27,[[["self"]],["protobufvalueref"]]],[11,"eq","","",28,[[["self"],["uninterpretedoption"]],["bool"]]],[11,"ne","","",28,[[["self"],["uninterpretedoption"]],["bool"]]],[11,"clone","","",28,[[["self"]],["uninterpretedoption"]]],[11,"default","","",28,[[],["uninterpretedoption"]]],[11,"new","","",28,[[],["uninterpretedoption"]]],[11,"clear_name","","",28,[[["self"]]]],[11,"set_name","","",28,[[["self"],["repeatedfield",["uninterpretedoption_namepart"]]]]],[11,"mut_name","","",28,[[["self"]],["repeatedfield"]]],[11,"take_name","","",28,[[["self"]],["repeatedfield",["uninterpretedoption_namepart"]]]],[11,"get_name","","",28,N],[11,"clear_identifier_value","","",28,[[["self"]]]],[11,"has_identifier_value","","",28,[[["self"]],["bool"]]],[11,"set_identifier_value","","",28,[[["self"],["string"]]]],[11,"mut_identifier_value","","",28,[[["self"]],["string"]]],[11,"take_identifier_value","","",28,[[["self"]],["string"]]],[11,"get_identifier_value","","",28,[[["self"]],["str"]]],[11,"clear_positive_int_value","","",28,[[["self"]]]],[11,"has_positive_int_value","","",28,[[["self"]],["bool"]]],[11,"set_positive_int_value","","",28,[[["self"],["u64"]]]],[11,"get_positive_int_value","","",28,[[["self"]],["u64"]]],[11,"clear_negative_int_value","","",28,[[["self"]]]],[11,"has_negative_int_value","","",28,[[["self"]],["bool"]]],[11,"set_negative_int_value","","",28,[[["self"],["i64"]]]],[11,"get_negative_int_value","","",28,[[["self"]],["i64"]]],[11,"clear_double_value","","",28,[[["self"]]]],[11,"has_double_value","","",28,[[["self"]],["bool"]]],[11,"set_double_value","","",28,[[["self"],["f64"]]]],[11,"get_double_value","","",28,[[["self"]],["f64"]]],[11,"clear_string_value","","",28,[[["self"]]]],[11,"has_string_value","","",28,[[["self"]],["bool"]]],[11,"set_string_value","","",28,[[["self"],["vec",["u8"]]]]],[11,"mut_string_value","","",28,[[["self"]],["vec"]]],[11,"take_string_value","","",28,[[["self"]],["vec",["u8"]]]],[11,"get_string_value","","",28,N],[11,"clear_aggregate_value","","",28,[[["self"]]]],[11,"has_aggregate_value","","",28,[[["self"]],["bool"]]],[11,"set_aggregate_value","","",28,[[["self"],["string"]]]],[11,"mut_aggregate_value","","",28,[[["self"]],["string"]]],[11,"take_aggregate_value","","",28,[[["self"]],["string"]]],[11,"get_aggregate_value","","",28,[[["self"]],["str"]]],[11,"is_initialized","","",28,[[["self"]],["bool"]]],[11,"merge_from","","",28,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",28,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",28,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",28,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",28,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",28,[[["self"]],["unknownfields"]]],[11,"as_any","","",28,[[["self"]],["any"]]],[11,"as_any_mut","","",28,[[["self"]],["any"]]],[11,"into_any","","",28,[[["box"]],["box",["any"]]]],[11,"descriptor","","",28,[[["self"]],["messagedescriptor"]]],[11,"new","","",28,[[],["uninterpretedoption"]]],[11,"descriptor_static","","",28,[[],["messagedescriptor"]]],[11,"default_instance","","",28,[[],["uninterpretedoption"]]],[11,"clear","","",28,[[["self"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",28,[[["self"]],["protobufvalueref"]]],[11,"eq","","",29,[[["self"],["uninterpretedoption_namepart"]],["bool"]]],[11,"ne","","",29,[[["self"],["uninterpretedoption_namepart"]],["bool"]]],[11,"clone","","",29,[[["self"]],["uninterpretedoption_namepart"]]],[11,"default","","",29,[[],["uninterpretedoption_namepart"]]],[11,"new","","",29,[[],["uninterpretedoption_namepart"]]],[11,"clear_name_part","","",29,[[["self"]]]],[11,"has_name_part","","",29,[[["self"]],["bool"]]],[11,"set_name_part","","",29,[[["self"],["string"]]]],[11,"mut_name_part","","",29,[[["self"]],["string"]]],[11,"take_name_part","","",29,[[["self"]],["string"]]],[11,"get_name_part","","",29,[[["self"]],["str"]]],[11,"clear_is_extension","","",29,[[["self"]]]],[11,"has_is_extension","","",29,[[["self"]],["bool"]]],[11,"set_is_extension","","",29,[[["self"],["bool"]]]],[11,"get_is_extension","","",29,[[["self"]],["bool"]]],[11,"is_initialized","","",29,[[["self"]],["bool"]]],[11,"merge_from","","",29,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",29,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",29,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",29,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",29,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",29,[[["self"]],["unknownfields"]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"into_any","","",29,[[["box"]],["box",["any"]]]],[11,"descriptor","","",29,[[["self"]],["messagedescriptor"]]],[11,"new","","",29,[[],["uninterpretedoption_namepart"]]],[11,"descriptor_static","","",29,[[],["messagedescriptor"]]],[11,"default_instance","","",29,[[],["uninterpretedoption_namepart"]]],[11,"clear","","",29,[[["self"]]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",29,[[["self"]],["protobufvalueref"]]],[11,"eq","","",30,[[["self"],["sourcecodeinfo"]],["bool"]]],[11,"ne","","",30,[[["self"],["sourcecodeinfo"]],["bool"]]],[11,"clone","","",30,[[["self"]],["sourcecodeinfo"]]],[11,"default","","",30,[[],["sourcecodeinfo"]]],[11,"new","","",30,[[],["sourcecodeinfo"]]],[11,"clear_location","","",30,[[["self"]]]],[11,"set_location","","",30,[[["self"],["repeatedfield",["sourcecodeinfo_location"]]]]],[11,"mut_location","","",30,[[["self"]],["repeatedfield"]]],[11,"take_location","","",30,[[["self"]],["repeatedfield",["sourcecodeinfo_location"]]]],[11,"get_location","","",30,N],[11,"is_initialized","","",30,[[["self"]],["bool"]]],[11,"merge_from","","",30,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",30,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",30,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",30,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",30,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",30,[[["self"]],["unknownfields"]]],[11,"as_any","","",30,[[["self"]],["any"]]],[11,"as_any_mut","","",30,[[["self"]],["any"]]],[11,"into_any","","",30,[[["box"]],["box",["any"]]]],[11,"descriptor","","",30,[[["self"]],["messagedescriptor"]]],[11,"new","","",30,[[],["sourcecodeinfo"]]],[11,"descriptor_static","","",30,[[],["messagedescriptor"]]],[11,"default_instance","","",30,[[],["sourcecodeinfo"]]],[11,"clear","","",30,[[["self"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",30,[[["self"]],["protobufvalueref"]]],[11,"eq","","",31,[[["self"],["sourcecodeinfo_location"]],["bool"]]],[11,"ne","","",31,[[["self"],["sourcecodeinfo_location"]],["bool"]]],[11,"clone","","",31,[[["self"]],["sourcecodeinfo_location"]]],[11,"default","","",31,[[],["sourcecodeinfo_location"]]],[11,"new","","",31,[[],["sourcecodeinfo_location"]]],[11,"clear_path","","",31,[[["self"]]]],[11,"set_path","","",31,[[["self"],["vec",["i32"]]]]],[11,"mut_path","","",31,[[["self"]],["vec"]]],[11,"take_path","","",31,[[["self"]],["vec",["i32"]]]],[11,"get_path","","",31,N],[11,"clear_span","","",31,[[["self"]]]],[11,"set_span","","",31,[[["self"],["vec",["i32"]]]]],[11,"mut_span","","",31,[[["self"]],["vec"]]],[11,"take_span","","",31,[[["self"]],["vec",["i32"]]]],[11,"get_span","","",31,N],[11,"clear_leading_comments","","",31,[[["self"]]]],[11,"has_leading_comments","","",31,[[["self"]],["bool"]]],[11,"set_leading_comments","","",31,[[["self"],["string"]]]],[11,"mut_leading_comments","","",31,[[["self"]],["string"]]],[11,"take_leading_comments","","",31,[[["self"]],["string"]]],[11,"get_leading_comments","","",31,[[["self"]],["str"]]],[11,"clear_trailing_comments","","",31,[[["self"]]]],[11,"has_trailing_comments","","",31,[[["self"]],["bool"]]],[11,"set_trailing_comments","","",31,[[["self"],["string"]]]],[11,"mut_trailing_comments","","",31,[[["self"]],["string"]]],[11,"take_trailing_comments","","",31,[[["self"]],["string"]]],[11,"get_trailing_comments","","",31,[[["self"]],["str"]]],[11,"clear_leading_detached_comments","","",31,[[["self"]]]],[11,"set_leading_detached_comments","","",31,[[["self"],["repeatedfield",["string"]]]]],[11,"mut_leading_detached_comments","","",31,[[["self"]],["repeatedfield"]]],[11,"take_leading_detached_comments","","",31,[[["self"]],["repeatedfield",["string"]]]],[11,"get_leading_detached_comments","","",31,N],[11,"is_initialized","","",31,[[["self"]],["bool"]]],[11,"merge_from","","",31,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",31,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",31,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",31,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",31,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",31,[[["self"]],["unknownfields"]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"into_any","","",31,[[["box"]],["box",["any"]]]],[11,"descriptor","","",31,[[["self"]],["messagedescriptor"]]],[11,"new","","",31,[[],["sourcecodeinfo_location"]]],[11,"descriptor_static","","",31,[[],["messagedescriptor"]]],[11,"default_instance","","",31,[[],["sourcecodeinfo_location"]]],[11,"clear","","",31,[[["self"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",31,[[["self"]],["protobufvalueref"]]],[11,"eq","","",32,[[["self"],["generatedcodeinfo"]],["bool"]]],[11,"ne","","",32,[[["self"],["generatedcodeinfo"]],["bool"]]],[11,"clone","","",32,[[["self"]],["generatedcodeinfo"]]],[11,"default","","",32,[[],["generatedcodeinfo"]]],[11,"new","","",32,[[],["generatedcodeinfo"]]],[11,"clear_annotation","","",32,[[["self"]]]],[11,"set_annotation","","",32,[[["self"],["repeatedfield",["generatedcodeinfo_annotation"]]]]],[11,"mut_annotation","","",32,[[["self"]],["repeatedfield"]]],[11,"take_annotation","","",32,[[["self"]],["repeatedfield",["generatedcodeinfo_annotation"]]]],[11,"get_annotation","","",32,N],[11,"is_initialized","","",32,[[["self"]],["bool"]]],[11,"merge_from","","",32,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",32,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",32,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",32,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",32,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",32,[[["self"]],["unknownfields"]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"into_any","","",32,[[["box"]],["box",["any"]]]],[11,"descriptor","","",32,[[["self"]],["messagedescriptor"]]],[11,"new","","",32,[[],["generatedcodeinfo"]]],[11,"descriptor_static","","",32,[[],["messagedescriptor"]]],[11,"default_instance","","",32,[[],["generatedcodeinfo"]]],[11,"clear","","",32,[[["self"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",32,[[["self"]],["protobufvalueref"]]],[11,"eq","","",33,[[["self"],["generatedcodeinfo_annotation"]],["bool"]]],[11,"ne","","",33,[[["self"],["generatedcodeinfo_annotation"]],["bool"]]],[11,"clone","","",33,[[["self"]],["generatedcodeinfo_annotation"]]],[11,"default","","",33,[[],["generatedcodeinfo_annotation"]]],[11,"new","","",33,[[],["generatedcodeinfo_annotation"]]],[11,"clear_path","","",33,[[["self"]]]],[11,"set_path","","",33,[[["self"],["vec",["i32"]]]]],[11,"mut_path","","",33,[[["self"]],["vec"]]],[11,"take_path","","",33,[[["self"]],["vec",["i32"]]]],[11,"get_path","","",33,N],[11,"clear_source_file","","",33,[[["self"]]]],[11,"has_source_file","","",33,[[["self"]],["bool"]]],[11,"set_source_file","","",33,[[["self"],["string"]]]],[11,"mut_source_file","","",33,[[["self"]],["string"]]],[11,"take_source_file","","",33,[[["self"]],["string"]]],[11,"get_source_file","","",33,[[["self"]],["str"]]],[11,"clear_begin","","",33,[[["self"]]]],[11,"has_begin","","",33,[[["self"]],["bool"]]],[11,"set_begin","","",33,[[["self"],["i32"]]]],[11,"get_begin","","",33,[[["self"]],["i32"]]],[11,"clear_end","","",33,[[["self"]]]],[11,"has_end","","",33,[[["self"]],["bool"]]],[11,"set_end","","",33,[[["self"],["i32"]]]],[11,"get_end","","",33,[[["self"]],["i32"]]],[11,"is_initialized","","",33,[[["self"]],["bool"]]],[11,"merge_from","","",33,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",33,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",33,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",33,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",33,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",33,[[["self"]],["unknownfields"]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"into_any","","",33,[[["box"]],["box",["any"]]]],[11,"descriptor","","",33,[[["self"]],["messagedescriptor"]]],[11,"new","","",33,[[],["generatedcodeinfo_annotation"]]],[11,"descriptor_static","","",33,[[],["messagedescriptor"]]],[11,"default_instance","","",33,[[],["generatedcodeinfo_annotation"]]],[11,"clear","","",33,[[["self"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",33,[[["self"]],["protobufvalueref"]]],[0,"plugin","protobuf","",N,N],[3,"CodeGeneratorRequest","protobuf::plugin","",N,N],[3,"CodeGeneratorResponse","","",N,N],[3,"CodeGeneratorResponse_File","","",N,N],[5,"file_descriptor_proto","","",N,[[],["filedescriptorproto"]]],[11,"eq","","",34,[[["self"],["codegeneratorrequest"]],["bool"]]],[11,"ne","","",34,[[["self"],["codegeneratorrequest"]],["bool"]]],[11,"clone","","",34,[[["self"]],["codegeneratorrequest"]]],[11,"default","","",34,[[],["codegeneratorrequest"]]],[11,"new","","",34,[[],["codegeneratorrequest"]]],[11,"clear_file_to_generate","","",34,[[["self"]]]],[11,"set_file_to_generate","","",34,[[["self"],["repeatedfield",["string"]]]]],[11,"mut_file_to_generate","","",34,[[["self"]],["repeatedfield"]]],[11,"take_file_to_generate","","",34,[[["self"]],["repeatedfield",["string"]]]],[11,"get_file_to_generate","","",34,N],[11,"clear_parameter","","",34,[[["self"]]]],[11,"has_parameter","","",34,[[["self"]],["bool"]]],[11,"set_parameter","","",34,[[["self"],["string"]]]],[11,"mut_parameter","","",34,[[["self"]],["string"]]],[11,"take_parameter","","",34,[[["self"]],["string"]]],[11,"get_parameter","","",34,[[["self"]],["str"]]],[11,"clear_proto_file","","",34,[[["self"]]]],[11,"set_proto_file","","",34,[[["self"],["repeatedfield",["filedescriptorproto"]]]]],[11,"mut_proto_file","","",34,[[["self"]],["repeatedfield"]]],[11,"take_proto_file","","",34,[[["self"]],["repeatedfield",["filedescriptorproto"]]]],[11,"get_proto_file","","",34,N],[11,"is_initialized","","",34,[[["self"]],["bool"]]],[11,"merge_from","","",34,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",34,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",34,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",34,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",34,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",34,[[["self"]],["unknownfields"]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"into_any","","",34,[[["box"]],["box",["any"]]]],[11,"descriptor","","",34,[[["self"]],["messagedescriptor"]]],[11,"new","","",34,[[],["codegeneratorrequest"]]],[11,"descriptor_static","","",34,[[],["messagedescriptor"]]],[11,"default_instance","","",34,[[],["codegeneratorrequest"]]],[11,"clear","","",34,[[["self"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",34,[[["self"]],["protobufvalueref"]]],[11,"eq","","",35,[[["self"],["codegeneratorresponse"]],["bool"]]],[11,"ne","","",35,[[["self"],["codegeneratorresponse"]],["bool"]]],[11,"clone","","",35,[[["self"]],["codegeneratorresponse"]]],[11,"default","","",35,[[],["codegeneratorresponse"]]],[11,"new","","",35,[[],["codegeneratorresponse"]]],[11,"clear_error","","",35,[[["self"]]]],[11,"has_error","","",35,[[["self"]],["bool"]]],[11,"set_error","","",35,[[["self"],["string"]]]],[11,"mut_error","","",35,[[["self"]],["string"]]],[11,"take_error","","",35,[[["self"]],["string"]]],[11,"get_error","","",35,[[["self"]],["str"]]],[11,"clear_file","","",35,[[["self"]]]],[11,"set_file","","",35,[[["self"],["repeatedfield",["codegeneratorresponse_file"]]]]],[11,"mut_file","","",35,[[["self"]],["repeatedfield"]]],[11,"take_file","","",35,[[["self"]],["repeatedfield",["codegeneratorresponse_file"]]]],[11,"get_file","","",35,N],[11,"is_initialized","","",35,[[["self"]],["bool"]]],[11,"merge_from","","",35,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",35,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",35,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",35,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",35,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",35,[[["self"]],["unknownfields"]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any","","",35,[[["box"]],["box",["any"]]]],[11,"descriptor","","",35,[[["self"]],["messagedescriptor"]]],[11,"new","","",35,[[],["codegeneratorresponse"]]],[11,"descriptor_static","","",35,[[],["messagedescriptor"]]],[11,"default_instance","","",35,[[],["codegeneratorresponse"]]],[11,"clear","","",35,[[["self"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",35,[[["self"]],["protobufvalueref"]]],[11,"eq","","",36,[[["self"],["codegeneratorresponse_file"]],["bool"]]],[11,"ne","","",36,[[["self"],["codegeneratorresponse_file"]],["bool"]]],[11,"clone","","",36,[[["self"]],["codegeneratorresponse_file"]]],[11,"default","","",36,[[],["codegeneratorresponse_file"]]],[11,"new","","",36,[[],["codegeneratorresponse_file"]]],[11,"clear_name","","",36,[[["self"]]]],[11,"has_name","","",36,[[["self"]],["bool"]]],[11,"set_name","","",36,[[["self"],["string"]]]],[11,"mut_name","","",36,[[["self"]],["string"]]],[11,"take_name","","",36,[[["self"]],["string"]]],[11,"get_name","","",36,[[["self"]],["str"]]],[11,"clear_insertion_point","","",36,[[["self"]]]],[11,"has_insertion_point","","",36,[[["self"]],["bool"]]],[11,"set_insertion_point","","",36,[[["self"],["string"]]]],[11,"mut_insertion_point","","",36,[[["self"]],["string"]]],[11,"take_insertion_point","","",36,[[["self"]],["string"]]],[11,"get_insertion_point","","",36,[[["self"]],["str"]]],[11,"clear_content","","",36,[[["self"]]]],[11,"has_content","","",36,[[["self"]],["bool"]]],[11,"set_content","","",36,[[["self"],["string"]]]],[11,"mut_content","","",36,[[["self"]],["string"]]],[11,"take_content","","",36,[[["self"]],["string"]]],[11,"get_content","","",36,[[["self"]],["str"]]],[11,"is_initialized","","",36,[[["self"]],["bool"]]],[11,"merge_from","","",36,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",36,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",36,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",36,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",36,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",36,[[["self"]],["unknownfields"]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"into_any","","",36,[[["box"]],["box",["any"]]]],[11,"descriptor","","",36,[[["self"]],["messagedescriptor"]]],[11,"new","","",36,[[],["codegeneratorresponse_file"]]],[11,"descriptor_static","","",36,[[],["messagedescriptor"]]],[11,"default_instance","","",36,[[],["codegeneratorresponse_file"]]],[11,"clear","","",36,[[["self"]]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",36,[[["self"]],["protobufvalueref"]]],[0,"rustproto","protobuf","",N,N],[5,"file_descriptor_proto","protobuf::rustproto","",N,[[],["filedescriptorproto"]]],[0,"exts","","",N,N],[17,"expose_oneof_all","protobuf::rustproto::exts","",N,N],[17,"expose_fields_all","","",N,N],[17,"generate_accessors_all","","",N,N],[17,"carllerche_bytes_for_bytes_all","","",N,N],[17,"carllerche_bytes_for_string_all","","",N,N],[17,"expose_oneof","","",N,N],[17,"expose_fields","","",N,N],[17,"generate_accessors","","",N,N],[17,"carllerche_bytes_for_bytes","","",N,N],[17,"carllerche_bytes_for_string","","",N,N],[17,"expose_fields_field","","",N,N],[17,"generate_accessors_field","","",N,N],[17,"carllerche_bytes_for_bytes_field","","",N,N],[17,"carllerche_bytes_for_string_field","","",N,N],[0,"rt","protobuf","Functions used by generated protobuf code. Should not be used by programs written by hands.",N,N],[5,"compute_raw_varint64_size","protobuf::rt","Given `u64` value compute varint encoded length.",N,[[["u64"]],["u32"]]],[5,"compute_raw_varint32_size","","Given `u32` value compute varint encoded length.",N,[[["u32"]],["u32"]]],[5,"vec_packed_varint_data_size","","Size of serialized repeated packed field, excluding length and tag.",N,N],[5,"vec_packed_varint_zigzag_data_size","","Size of serialized repeated packed field, excluding length and tag.",N,N],[5,"vec_packed_enum_data_size","","Size of serialized repeated packed enum field, excluding length and tag.",N,N],[5,"vec_packed_varint_size","","Size of serialized data with length prefix and tag",N,N],[5,"vec_packed_varint_zigzag_size","","Size of serialized data with length prefix and tag",N,N],[5,"vec_packed_enum_size","","Size of serialized data with length prefix and tag",N,N],[5,"tag_size","","Compute tag size. Size of tag does not depend on wire type.",N,[[["u32"]],["u32"]]],[5,"value_size","","Integer value size when encoded as specified wire type.",N,[[["u32"],["t"],["wiretype"]],["u32"]]],[5,"value_varint_zigzag_size_no_tag","","Integer value size when encoded as specified wire type.",N,[[["t"]],["u32"]]],[5,"value_varint_zigzag_size","","Length of value when encoding with zigzag encoding with tag",N,[[["u32"],["t"]],["u32"]]],[5,"enum_size","","Size of encoded enum field value.",N,[[["u32"],["e"]],["u32"]]],[5,"bytes_size","","Size of encoded bytes field.",N,N],[5,"string_size","","Size of encoded string field.",N,[[["u32"],["str"]],["u32"]]],[5,"unknown_fields_size","","Size of encoded unknown fields size.",N,[[["unknownfields"]],["u32"]]],[5,"read_repeated_int32_into","","Read repeated `int32` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_int64_into","","Read repeated `int64` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_uint32_into","","Read repeated `uint32` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_uint64_into","","Read repeated `uint64` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_sint32_into","","Read repeated `sint32` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_sint64_into","","Read repeated `sint64` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_fixed32_into","","Read repeated `fixed32` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_fixed64_into","","Read repeated `fixed64` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_sfixed32_into","","Read repeated `sfixed32` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_sfixed64_into","","Read repeated `sfixed64` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_double_into","","Read repeated `double` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_float_into","","Read repeated `float` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_bool_into","","Read repeated `bool` field into given vec.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_enum_into","","Read repeated `enum` field into given vec. This function is no longer called from generated code, remove in 1.5.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_enum_with_unknown_fields_into","","Read repeated `enum` field into given vec, and when value is unknown store it in unknown fields which matches proto2 spec.",N,[[["wiretype"],["codedinputstream"],["vec"],["u32"],["unknownfields"]],["protobufresult"]]],[5,"read_proto3_enum_with_unknown_fields_into","","Read repeated `enum` field into given vec, and when value is unknown store it in unknown fields which matches proto2 spec.",N,[[["wiretype"],["codedinputstream"],["e"],["u32"],["unknownfields"]],["protobufresult"]]],[5,"read_proto2_enum_with_unknown_fields_into","","Read repeated `enum` field into given vec, and when value is unknown store it in unknown fields which matches proto2 spec.",N,[[["wiretype"],["codedinputstream"],["option"],["u32"],["unknownfields"]],["protobufresult"]]],[5,"read_repeated_string_into","","Read repeated `string` field into given vec.",N,[[["wiretype"],["codedinputstream"],["repeatedfield"]],["protobufresult"]]],[5,"read_singular_string_into","","Read singular `string` field.",N,[[["wiretype"],["codedinputstream"],["singularfield"]],["protobufresult"]]],[5,"read_singular_proto3_string_into","","Read singular `string` field for proto3.",N,[[["wiretype"],["codedinputstream"],["string"]],["protobufresult"]]],[5,"read_repeated_bytes_into","","Read repeated `bytes` field into given vec.",N,[[["wiretype"],["codedinputstream"],["repeatedfield"]],["protobufresult"]]],[5,"read_singular_bytes_into","","Read singular `bytes` field.",N,[[["wiretype"],["codedinputstream"],["singularfield"]],["protobufresult"]]],[5,"read_singular_proto3_bytes_into","","Read singular `bytes` field for proto3.",N,[[["wiretype"],["codedinputstream"],["vec"]],["protobufresult"]]],[5,"read_repeated_message_into","","Read repeated `message` field.",N,[[["wiretype"],["codedinputstream"],["repeatedfield"]],["protobufresult"]]],[5,"read_singular_message_into","","Read singular `message` field.",N,[[["wiretype"],["codedinputstream"],["singularptrfield"]],["protobufresult"]]],[5,"read_unknown_or_skip_group","","Handle unknown field in generated code. Either store a value in unknown, or skip a group.",N,[[["u32"],["wiretype"],["codedinputstream"],["unknownfields"]],["protobufresult"]]],[5,"unexpected_wire_type","","Create an error for unexpected wire type.",N,[[["wiretype"]],["protobuferror"]]],[5,"compute_map_size","","Compute serialized size of `map` field and cache nested field sizes.",N,[[["u32"],["hashmap"]],["u32"]]],[5,"write_map_with_cached_sizes","","Write map, message sizes must be already known.",N,[[["u32"],["hashmap"],["codedoutputstream"]],["protobufresult"]]],[5,"read_map_into","","Read `map` field.",N,[[["wiretype"],["codedinputstream"],["hashmap"]],["protobufresult"]]],[8,"ProtobufVarint","","Helper trait implemented by integer types which could be encoded as varint.",N,N],[10,"len_varint","","Size of self when encoded as varint.",37,[[["self"]],["u32"]]],[8,"ProtobufVarintZigzag","","Helper trait implemented by integer types which could be encoded as zigzag varint.",N,N],[10,"len_varint_zigzag","","Size of self when encoded as zigzag varint.",38,[[["self"]],["u32"]]],[0,"lazy","protobuf","Lazily initialized data. Used in generated code.",N,N],[3,"Lazy","protobuf::lazy","Lasily initialized data.",N,N],[17,"ONCE_INIT","","Used to initialize `lock` field in `Lazy` struct.",N,N],[11,"get","","Get lazy field value, initialize it with given function if not yet.",39,[[["self"],["f"]],["t"]]],[11,"len","protobuf","Return number of elements in this container.",40,[[["self"]],["usize"]]],[11,"clear","","Clear.",40,[[["self"]]]],[11,"clear","","",40,[[["self"]]]],[11,"default","","",40,[[],["repeatedfield"]]],[11,"new","","Create new empty container.",40,[[],["repeatedfield"]]],[11,"from_vec","","Create a contained with data from given vec.",40,[[["vec"]],["repeatedfield"]]],[11,"into_vec","","Convert data into vec.",40,[[["self"]],["vec"]]],[11,"capacity","","Return current capacity.",40,[[["self"]],["usize"]]],[11,"as_mut_slice","","View data as mutable slice.",40,N],[11,"slice","","Get subslice of this container.",40,N],[11,"slice_mut","","Get mutable subslice of this container.",40,N],[11,"slice_from","","Get slice from given index.",40,N],[11,"slice_from_mut","","Get mutable slice from given index.",40,N],[11,"slice_to","","Get slice to given index.",40,N],[11,"slice_to_mut","","Get mutable slice to given index.",40,N],[11,"split_at","","View this container as two slices split at given index.",40,N],[11,"split_at_mut","","View this container as two mutable slices split at given index.",40,N],[11,"tail","","View all but first elements of this container.",40,N],[11,"last","","Last element of this container.",40,[[["self"]],["option"]]],[11,"last_mut","","Mutable last element of this container.",40,[[["self"]],["option"]]],[11,"init","","View all but last elements of this container.",40,N],[11,"push","","Push an element to the end.",40,[[["self"],["t"]]]],[11,"pop","","Pop last element.",40,[[["self"]],["option"]]],[11,"insert","","Insert an element at specified position.",40,[[["self"],["usize"],["t"]]]],[11,"remove","","Remove an element from specified position.",40,[[["self"],["usize"]],["t"]]],[11,"truncate","","Truncate at specified length.",40,[[["self"],["usize"]]]],[11,"reverse","","Reverse in place.",40,[[["self"]]]],[11,"into_iter","","Into owned iterator.",40,[[["self"]],["intoiter"]]],[11,"iter","","Immutable data iterator.",40,[[["self"]],["iter"]]],[11,"iter_mut","","Mutable data iterator.",40,[[["self"]],["itermut"]]],[11,"sort_by","","Sort elements with given comparator.",40,[[["self"],["f"]]]],[11,"as_ptr","","Get data as raw pointer.",40,N],[11,"as_mut_ptr","","Get data a mutable raw pointer.",40,N],[11,"push_default","","Push default value. This operation could be faster than `rf.push(Default::default())`, because it may reuse previously allocated and cleared element.",40,[[["self"]],["t"]]],[11,"from","","",40,[[["vec"]],["repeatedfield"]]],[11,"from","","",40,N],[11,"into","","",40,[[["self"]],["vec"]]],[11,"from_slice","","Copy slice data to `RepeatedField`",40,N],[11,"from_ref","","Copy slice data to `RepeatedField`",40,[[["x"]],["repeatedfield"]]],[11,"to_vec","","Copy this data into new vec.",40,[[["self"]],["vec"]]],[11,"clone","","",40,[[["self"]],["repeatedfield"]]],[11,"from_iter","","",40,[[["i"]],["repeatedfield"]]],[11,"eq","","",40,[[["self"],["repeatedfield"]],["bool"]]],[11,"contains","","True iff this container contains given element.",40,[[["self"],["t"]],["bool"]]],[11,"hash","","",40,[[["self"],["h"]]]],[11,"as_ref","","",40,N],[11,"borrow","","",40,N],[11,"deref","","",40,N],[11,"deref_mut","","",40,N],[11,"index","","",40,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",40,[[["self"],["usize"]],["t"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"some","","Construct this object from given value.",41,[[["t"]],["singularfield"]]],[11,"is_some","","True iff this object contains data.",41,[[["self"]],["bool"]]],[11,"is_none","","True iff this object contains no data.",41,[[["self"]],["bool"]]],[11,"into_option","","Convert this object into `Option`.",41,[[["self"]],["option"]]],[11,"as_ref","","View data as `Option`.",41,[[["self"]],["option"]]],[11,"as_mut","","View data as mutable `Option`.",41,[[["self"]],["option"]]],[11,"unwrap_ref","","Unwrap data as reference.",41,[[["self"]],["t"]]],[11,"unwrap_mut_ref","","Unwrap data as mutable reference.",41,[[["self"]],["t"]]],[11,"unwrap","","Unwrap data, panic if not set.",41,[[["self"]],["t"]]],[11,"unwrap_or","","Unwrap data or return given default value.",41,[[["self"],["t"]],["t"]]],[11,"unwrap_or_else","","Unwrap data or return given default value.",41,[[["self"],["f"]],["t"]]],[11,"map","","Apply a function to contained element and store result in new `SingularPtrField`.",41,[[["self"],["f"]],["singularptrfield"]]],[11,"iter","","View as iterator over references.",41,[[["self"]],["intoiter"]]],[11,"mut_iter","","View as iterator over mutable references.",41,[[["self"]],["intoiter"]]],[11,"clear","","Clear this object. Note, contained object destructor is not called, so allocated memory could be reused.",41,[[["self"]]]],[11,"none","","Construct a `SingularField` with no data.",41,[[],["singularfield"]]],[11,"from_option","","Construct `SingularField` from `Option`.",41,[[["option"]],["singularfield"]]],[11,"take","","Return data as option, clear this object.",41,[[["self"]],["option"]]],[11,"some","","Construct `SingularPtrField` from given object.",42,[[["t"]],["singularptrfield"]]],[11,"none","","Construct an empty `SingularPtrField`.",42,[[],["singularptrfield"]]],[11,"from_option","","Construct `SingularPtrField` from optional.",42,[[["option"]],["singularptrfield"]]],[11,"is_some","","True iff this object contains data.",42,[[["self"]],["bool"]]],[11,"is_none","","True iff this object contains no data.",42,[[["self"]],["bool"]]],[11,"into_option","","Convert into `Option<T>`.",42,[[["self"]],["option"]]],[11,"as_ref","","View data as reference option.",42,[[["self"]],["option"]]],[11,"as_mut","","View data as mutable reference option.",42,[[["self"]],["option"]]],[11,"get_ref","","Get data as reference. Panics if empty.",42,[[["self"]],["t"]]],[11,"get_mut_ref","","Get data as mutable reference. Panics if empty.",42,[[["self"]],["t"]]],[11,"unwrap","","Take the data. Panics if empty",42,[[["self"]],["t"]]],[11,"unwrap_or","","Take the data or return supplied default element if empty.",42,[[["self"],["t"]],["t"]]],[11,"unwrap_or_else","","Take the data or return supplied default element if empty.",42,[[["self"],["f"]],["t"]]],[11,"map","","Apply given function to contained data to construct another `SingularPtrField`. Returns empty `SingularPtrField` if this object is empty.",42,[[["self"],["f"]],["singularptrfield"]]],[11,"iter","","View data as iterator.",42,[[["self"]],["intoiter"]]],[11,"mut_iter","","View data as mutable iterator.",42,[[["self"]],["intoiter"]]],[11,"take","","Take data as option, leaving this object empty.",42,[[["self"]],["option"]]],[11,"clear","","Clear this object, but do not call destructor of underlying data.",42,[[["self"]]]],[11,"unwrap_or_default","","Get contained data, consume self. Return default value for type if this is empty.",41,[[["self"]],["t"]]],[11,"set_default","","Initialize this object with default value. This operation can be more efficient then construction of clear element, because it may reuse previously contained object.",41,[[["self"]],["t"]]],[11,"unwrap_or_default","","Get contained data, consume self. Return default value for type if this is empty.",42,[[["self"]],["t"]]],[11,"set_default","","Initialize this object with default value. This operation can be more efficient then construction of clear element, because it may reuse previously contained object.",42,[[["self"]],["t"]]],[11,"default","","",41,[[],["singularfield"]]],[11,"default","","",42,[[],["singularptrfield"]]],[11,"clone","","",41,[[["self"]],["singularfield"]]],[11,"clone","","",42,[[["self"]],["singularptrfield"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"eq","","",41,[[["self"],["singularfield"]],["bool"]]],[11,"eq","","",42,[[["self"],["singularptrfield"]],["bool"]]],[11,"hash","","",41,[[["self"],["h"]]]],[11,"hash","","",42,[[["self"],["h"]]]],[0,"reflect","","Reflection implementation for protobuf types.",N,N],[3,"FieldDescriptor","protobuf::reflect","",N,N],[3,"MessageDescriptor","","",N,N],[3,"EnumValueDescriptor","","",N,N],[3,"EnumDescriptor","","",N,N],[4,"ProtobufValueRef","","",N,N],[13,"U32","","",43,N],[13,"U64","","",43,N],[13,"I32","","",43,N],[13,"I64","","",43,N],[13,"F32","","",43,N],[13,"F64","","",43,N],[13,"Bool","","",43,N],[13,"String","","",43,N],[13,"Bytes","","",43,N],[13,"Enum","","",43,N],[13,"Message","","",43,N],[4,"ReflectFieldRef","","",N,N],[13,"Repeated","","",44,N],[13,"Map","","",44,N],[13,"Optional","","",44,N],[0,"accessor","","",N,N],[5,"make_singular_u32_accessor","protobuf::reflect::accessor","",N,N],[5,"make_singular_i32_accessor","","",N,N],[5,"make_singular_u64_accessor","","",N,N],[5,"make_singular_i64_accessor","","",N,N],[5,"make_singular_f32_accessor","","",N,N],[5,"make_singular_f64_accessor","","",N,N],[5,"make_singular_bool_accessor","","",N,N],[5,"make_singular_enum_accessor","","",N,N],[5,"make_singular_string_accessor","","",N,N],[5,"make_singular_bytes_accessor","","",N,N],[5,"make_singular_message_accessor","","",N,N],[5,"make_vec_accessor","","",N,N],[5,"make_repeated_field_accessor","","",N,N],[5,"make_option_accessor","","",N,N],[5,"make_singular_field_accessor","","",N,N],[5,"make_singular_ptr_field_accessor","","",N,N],[5,"make_simple_field_accessor","","",N,N],[5,"make_map_accessor","","",N,N],[8,"FieldAccessor","","this trait should not be used directly, use `FieldDescriptor` instead",N,N],[10,"name_generic","","",45,[[["self"]],["str"]]],[10,"has_field_generic","","",45,[[["self"],["message"]],["bool"]]],[10,"len_field_generic","","",45,[[["self"],["message"]],["usize"]]],[10,"get_message_generic","","",45,[[["self"],["message"]],["message"]]],[10,"get_enum_generic","","",45,[[["self"],["message"]],["enumvaluedescriptor"]]],[10,"get_str_generic","","",45,[[["self"],["message"]],["str"]]],[10,"get_bytes_generic","","",45,N],[10,"get_u32_generic","","",45,[[["self"],["message"]],["u32"]]],[10,"get_u64_generic","","",45,[[["self"],["message"]],["u64"]]],[10,"get_i32_generic","","",45,[[["self"],["message"]],["i32"]]],[10,"get_i64_generic","","",45,[[["self"],["message"]],["i64"]]],[10,"get_bool_generic","","",45,[[["self"],["message"]],["bool"]]],[10,"get_f32_generic","","",45,[[["self"],["message"]],["f32"]]],[10,"get_f64_generic","","",45,[[["self"],["message"]],["f64"]]],[10,"get_reflect","","",45,[[["self"],["message"]],["reflectfieldref"]]],[11,"is_non_zero","protobuf::reflect","",43,[[["self"]],["bool"]]],[8,"ProtobufValue","","",N,N],[10,"as_ref","","",46,[[["self"]],["protobufvalueref"]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"is_non_zero","","",46,[[["self"]],["bool"]]],[11,"as_ref_copy","","",46,[[["self"]],["protobufvalueref"]]],[11,"proto","","",47,[[["self"]],["fielddescriptorproto"]]],[11,"name","","",47,[[["self"]],["str"]]],[11,"is_repeated","","",47,[[["self"]],["bool"]]],[11,"has_field","","",47,[[["self"],["message"]],["bool"]]],[11,"len_field","","",47,[[["self"],["message"]],["usize"]]],[11,"get_message","","",47,[[["self"],["message"]],["message"]]],[11,"get_enum","","",47,[[["self"],["message"]],["enumvaluedescriptor"]]],[11,"get_str","","",47,[[["self"],["message"]],["str"]]],[11,"get_bytes","","",47,N],[11,"get_u32","","",47,[[["self"],["message"]],["u32"]]],[11,"get_u64","","",47,[[["self"],["message"]],["u64"]]],[11,"get_i32","","",47,[[["self"],["message"]],["i32"]]],[11,"get_i64","","",47,[[["self"],["message"]],["i64"]]],[11,"get_bool","","",47,[[["self"],["message"]],["bool"]]],[11,"get_f32","","",47,[[["self"],["message"]],["f32"]]],[11,"get_f64","","",47,[[["self"],["message"]],["f64"]]],[11,"get_reflect","","",47,[[["self"],["message"]],["reflectfieldref"]]],[11,"for_type","","",48,[[],["messagedescriptor"]]],[11,"new","","",48,[[["str"],["vec",["box"]],["filedescriptorproto"]],["messagedescriptor"]]],[11,"new_instance","","",48,[[["self"]],["box",["message"]]]],[11,"name","","",48,[[["self"]],["str"]]],[11,"full_name","","",48,[[["self"]],["str"]]],[11,"fields","","",48,N],[11,"field_by_name","","",48,[[["self"],["str"]],["fielddescriptor"]]],[11,"field_by_number","","",48,[[["self"],["u32"]],["fielddescriptor"]]],[11,"clone","","",49,[[["self"]],["enumvaluedescriptor"]]],[11,"name","","",49,[[["self"]],["str"]]],[11,"value","","",49,[[["self"]],["i32"]]],[11,"name","","",50,[[["self"]],["str"]]],[11,"for_type","","",50,[[],["enumdescriptor"]]],[11,"new","","",50,[[["str"],["filedescriptorproto"]],["enumdescriptor"]]],[11,"value_by_name","","",50,[[["self"],["str"]],["enumvaluedescriptor"]]],[11,"value_by_number","","",50,[[["self"],["i32"]],["enumvaluedescriptor"]]],[0,"text_format","protobuf","",N,N],[5,"print_to","protobuf::text_format","",N,[[["message"],["string"]]]],[5,"print_to_string","","",N,[[["message"]],["string"]]],[5,"fmt","","",N,[[["message"],["formatter"]],["result"]]],[0,"stream","protobuf","",N,N],[3,"CodedInputStream","protobuf::stream","",N,N],[3,"CodedOutputStream","","",N,N],[5,"with_coded_output_stream_to_bytes","","",N,[[["f"]],["protobufresult",["vec"]]]],[0,"wire_format","","",N,N],[3,"Tag","protobuf::stream::wire_format","",N,N],[4,"WireType","","",N,N],[13,"WireTypeVarint","","",51,N],[13,"WireTypeFixed64","","",51,N],[13,"WireTypeLengthDelimited","","",51,N],[13,"WireTypeStartGroup","","",51,N],[13,"WireTypeEndGroup","","",51,N],[13,"WireTypeFixed32","","",51,N],[17,"TAG_TYPE_BITS","","",N,N],[17,"TAG_TYPE_MASK","","",N,N],[17,"FIELD_NUMBER_MAX","","",N,N],[11,"eq","","",51,[[["self"],["wiretype"]],["bool"]]],[11,"clone","","",51,[[["self"]],["wiretype"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"new","","",51,[[["u32"]],["option",["wiretype"]]]],[11,"clone","","",52,[[["self"]],["tag"]]],[11,"value","","",52,[[["self"]],["u32"]]],[11,"new","","",52,[[["u32"]],["option",["tag"]]]],[11,"make","","",52,[[["u32"],["wiretype"]],["tag"]]],[11,"unpack","","",52,N],[11,"field_number","","",52,[[["self"]],["u32"]]],[8,"WithCodedOutputStream","protobuf::stream","",N,N],[10,"with_coded_output_stream","","",53,[[["self"],["f"]],["protobufresult"]]],[8,"WithCodedInputStream","","",N,N],[10,"with_coded_input_stream","","",54,[[["self"],["f"]],["protobufresult"]]],[11,"new","","",55,[[["read"]],["codedinputstream"]]],[11,"from_buffered_reader","","",55,[[["bufread"]],["codedinputstream"]]],[11,"from_bytes","","",55,N],[11,"set_recursion_limit","","Set the recursion limit.",55,[[["self"],["u32"]]]],[11,"pos","","",55,[[["self"]],["u64"]]],[11,"bytes_until_limit","","",55,[[["self"]],["u64"]]],[11,"read","","",55,N],[11,"read_raw_byte","","",55,[[["self"]],["protobufresult",["u8"]]]],[11,"push_limit","","",55,[[["self"],["u64"]],["protobufresult",["u64"]]]],[11,"pop_limit","","",55,[[["self"],["u64"]]]],[11,"eof","","",55,[[["self"]],["protobufresult",["bool"]]]],[11,"check_eof","","",55,[[["self"]],["protobufresult"]]],[11,"read_raw_varint64","","",55,[[["self"]],["protobufresult",["u64"]]]],[11,"read_raw_varint32","","",55,[[["self"]],["protobufresult",["u32"]]]],[11,"read_raw_little_endian32","","",55,[[["self"]],["protobufresult",["u32"]]]],[11,"read_raw_little_endian64","","",55,[[["self"]],["protobufresult",["u64"]]]],[11,"read_tag","","",55,[[["self"]],["protobufresult",["tag"]]]],[11,"read_tag_unpack","","",55,[[["self"]],["protobufresult"]]],[11,"read_double","","",55,[[["self"]],["protobufresult",["f64"]]]],[11,"read_float","","",55,[[["self"]],["protobufresult",["f32"]]]],[11,"read_int64","","",55,[[["self"]],["protobufresult",["i64"]]]],[11,"read_int32","","",55,[[["self"]],["protobufresult",["i32"]]]],[11,"read_uint64","","",55,[[["self"]],["protobufresult",["u64"]]]],[11,"read_uint32","","",55,[[["self"]],["protobufresult",["u32"]]]],[11,"read_sint64","","",55,[[["self"]],["protobufresult",["i64"]]]],[11,"read_sint32","","",55,[[["self"]],["protobufresult",["i32"]]]],[11,"read_fixed64","","",55,[[["self"]],["protobufresult",["u64"]]]],[11,"read_fixed32","","",55,[[["self"]],["protobufresult",["u32"]]]],[11,"read_sfixed64","","",55,[[["self"]],["protobufresult",["i64"]]]],[11,"read_sfixed32","","",55,[[["self"]],["protobufresult",["i32"]]]],[11,"read_bool","","",55,[[["self"]],["protobufresult",["bool"]]]],[11,"read_enum","","",55,[[["self"]],["protobufresult"]]],[11,"read_repeated_packed_double_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_float_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_int64_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_int32_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_uint64_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_uint32_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_sint64_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_sint32_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_fixed64_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_fixed32_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_sfixed64_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_sfixed32_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_bool_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_repeated_packed_enum_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_unknown","","",55,[[["self"],["wiretype"]],["protobufresult",["unknownvalue"]]]],[11,"skip_field","","",55,[[["self"],["wiretype"]],["protobufresult"]]],[11,"read_raw_bytes_into","","Read raw bytes into the supplied vector.  The vector will be resized as needed and overwritten.",55,[[["self"],["u32"],["vec"]],["protobufresult"]]],[11,"read_raw_bytes","","Read exact number of bytes",55,[[["self"],["u32"]],["protobufresult",["vec"]]]],[11,"skip_raw_bytes","","",55,[[["self"],["u32"]],["protobufresult"]]],[11,"read_bytes","","",55,[[["self"]],["protobufresult",["vec"]]]],[11,"read_bytes_into","","",55,[[["self"],["vec"]],["protobufresult"]]],[11,"read_string","","",55,[[["self"]],["protobufresult",["string"]]]],[11,"read_string_into","","",55,[[["self"],["string"]],["protobufresult"]]],[11,"merge_message","","",55,[[["self"],["m"]],["protobufresult"]]],[11,"read_message","","",55,[[["self"]],["protobufresult"]]],[11,"read","","",55,N],[11,"fill_buf","","",55,[[["self"]],["result"]]],[11,"consume","","",55,[[["self"],["usize"]]]],[11,"new","","",56,[[["write"]],["codedoutputstream"]]],[11,"bytes","","`CodedOutputStream` which writes directly to bytes.",56,N],[11,"vec","","`CodedOutputStream` which writes directly to `Vec<u8>`.",56,[[["vec"]],["codedoutputstream"]]],[11,"check_eof","","",56,[[["self"]]]],[11,"flush","","",56,[[["self"]],["protobufresult"]]],[11,"write_raw_byte","","",56,[[["self"],["u8"]],["protobufresult"]]],[11,"write_raw_bytes","","",56,N],[11,"write_tag","","",56,[[["self"],["u32"],["wiretype"]],["protobufresult"]]],[11,"write_raw_varint32","","",56,[[["self"],["u32"]],["protobufresult"]]],[11,"write_raw_varint64","","",56,[[["self"],["u64"]],["protobufresult"]]],[11,"write_raw_little_endian32","","",56,[[["self"],["u32"]],["protobufresult"]]],[11,"write_raw_little_endian64","","",56,[[["self"],["u64"]],["protobufresult"]]],[11,"write_float_no_tag","","",56,[[["self"],["f32"]],["protobufresult"]]],[11,"write_double_no_tag","","",56,[[["self"],["f64"]],["protobufresult"]]],[11,"write_float","","",56,[[["self"],["u32"],["f32"]],["protobufresult"]]],[11,"write_double","","",56,[[["self"],["u32"],["f64"]],["protobufresult"]]],[11,"write_uint64_no_tag","","",56,[[["self"],["u64"]],["protobufresult"]]],[11,"write_uint32_no_tag","","",56,[[["self"],["u32"]],["protobufresult"]]],[11,"write_int64_no_tag","","",56,[[["self"],["i64"]],["protobufresult"]]],[11,"write_int32_no_tag","","",56,[[["self"],["i32"]],["protobufresult"]]],[11,"write_sint64_no_tag","","",56,[[["self"],["i64"]],["protobufresult"]]],[11,"write_sint32_no_tag","","",56,[[["self"],["i32"]],["protobufresult"]]],[11,"write_fixed64_no_tag","","",56,[[["self"],["u64"]],["protobufresult"]]],[11,"write_fixed32_no_tag","","",56,[[["self"],["u32"]],["protobufresult"]]],[11,"write_sfixed64_no_tag","","",56,[[["self"],["i64"]],["protobufresult"]]],[11,"write_sfixed32_no_tag","","",56,[[["self"],["i32"]],["protobufresult"]]],[11,"write_bool_no_tag","","",56,[[["self"],["bool"]],["protobufresult"]]],[11,"write_enum_no_tag","","",56,[[["self"],["i32"]],["protobufresult"]]],[11,"write_enum_obj_no_tag","","",56,[[["self"],["e"]],["protobufresult"]]],[11,"write_unknown_no_tag","","",56,[[["self"],["unknownvalueref"]],["protobufresult"]]],[11,"write_uint64","","",56,[[["self"],["u32"],["u64"]],["protobufresult"]]],[11,"write_uint32","","",56,[[["self"],["u32"],["u32"]],["protobufresult"]]],[11,"write_int64","","",56,[[["self"],["u32"],["i64"]],["protobufresult"]]],[11,"write_int32","","",56,[[["self"],["u32"],["i32"]],["protobufresult"]]],[11,"write_sint64","","",56,[[["self"],["u32"],["i64"]],["protobufresult"]]],[11,"write_sint32","","",56,[[["self"],["u32"],["i32"]],["protobufresult"]]],[11,"write_fixed64","","",56,[[["self"],["u32"],["u64"]],["protobufresult"]]],[11,"write_fixed32","","",56,[[["self"],["u32"],["u32"]],["protobufresult"]]],[11,"write_sfixed64","","",56,[[["self"],["u32"],["i64"]],["protobufresult"]]],[11,"write_sfixed32","","",56,[[["self"],["u32"],["i32"]],["protobufresult"]]],[11,"write_bool","","",56,[[["self"],["u32"],["bool"]],["protobufresult"]]],[11,"write_enum","","",56,[[["self"],["u32"],["i32"]],["protobufresult"]]],[11,"write_enum_obj","","",56,[[["self"],["u32"],["e"]],["protobufresult"]]],[11,"write_unknown","","",56,[[["self"],["u32"],["unknownvalueref"]],["protobufresult"]]],[11,"write_unknown_fields","","",56,[[["self"],["unknownfields"]],["protobufresult"]]],[11,"write_bytes_no_tag","","",56,N],[11,"write_string_no_tag","","",56,[[["self"],["str"]],["protobufresult"]]],[11,"write_message_no_tag","","",56,[[["self"],["m"]],["protobufresult"]]],[11,"write_bytes","","",56,N],[11,"write_string","","",56,[[["self"],["u32"],["str"]],["protobufresult"]]],[11,"write_message","","",56,[[["self"],["u32"],["m"]],["protobufresult"]]],[11,"write","","",56,N],[11,"flush","","",56,[[["self"]],["result"]]],[0,"error","protobuf","",N,N],[4,"WireError","protobuf::error","Enum values added here for diagnostic purposes. Users should not depend on specific values.",N,N],[13,"UnexpectedEof","","",57,N],[13,"UnexpectedWireType","","",57,N],[13,"IncorrectTag","","",57,N],[13,"IncompleteMap","","",57,N],[13,"IncorrectVarint","","",57,N],[13,"Utf8Error","","",57,N],[13,"InvalidEnumValue","","",57,N],[13,"OverRecursionLimit","","",57,N],[13,"Other","","",57,N],[4,"ProtobufError","","",N,N],[13,"IoError","","",58,N],[13,"WireError","","",58,N],[13,"Utf8","","",58,N],[13,"MessageNotInitialized","","",58,N],[12,"message","protobuf::error::ProtobufError","",58,N],[6,"ProtobufResult","protobuf::error","",N,N],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"message_not_initialized","","",58,[[["str"]],["protobuferror"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"description","","",58,[[["self"]],["str"]]],[11,"cause","","",58,[[["self"]],["option",["error"]]]],[11,"from","","",58,[[["error"]],["self"]]],[11,"from","","",58,[[["utf8error"]],["self"]]],[0,"types","protobuf","",N,N],[3,"ProtobufTypeFloat","protobuf::types","",N,N],[3,"ProtobufTypeDouble","","",N,N],[3,"ProtobufTypeInt32","","",N,N],[3,"ProtobufTypeInt64","","",N,N],[3,"ProtobufTypeUint32","","",N,N],[3,"ProtobufTypeUint64","","",N,N],[3,"ProtobufTypeSint32","","",N,N],[3,"ProtobufTypeSint64","","",N,N],[3,"ProtobufTypeFixed32","","",N,N],[3,"ProtobufTypeFixed64","","",N,N],[3,"ProtobufTypeSfixed32","","",N,N],[3,"ProtobufTypeSfixed64","","",N,N],[3,"ProtobufTypeBool","","",N,N],[3,"ProtobufTypeString","","",N,N],[3,"ProtobufTypeBytes","","",N,N],[3,"ProtobufTypeChars","","",N,N],[3,"ProtobufTypeEnum","","",N,N],[3,"ProtobufTypeMessage","","",N,N],[8,"ProtobufType","","",N,N],[16,"Value","","",59,N],[10,"wire_type","","",59,[[],["wiretype"]]],[10,"read","","",59,[[["codedinputstream"]],["protobufresult"]]],[10,"compute_size","","",59,N],[11,"compute_size_with_length_delimiter","","Compute size adding length prefix if wire type is length delimited (i. e. string, bytes, message)",59,N],[11,"get_from_unknown","","",59,[[["unknownvalues"]],["option"]]],[11,"get_cached_size","","Get previously computed size",59,N],[11,"get_cached_size_with_length_delimiter","","Get previously cached size with length prefix",59,N],[10,"write_with_cached_size","","",59,N],[11,"wire_type","","",60,[[],["wiretype"]]],[11,"read","","",60,[[["codedinputstream"]],["protobufresult",["f32"]]]],[11,"compute_size","","",60,[[["f32"]],["u32"]]],[11,"write_with_cached_size","","",60,[[["u32"],["f32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",61,[[],["wiretype"]]],[11,"read","","",61,[[["codedinputstream"]],["protobufresult",["f64"]]]],[11,"compute_size","","",61,[[["f64"]],["u32"]]],[11,"write_with_cached_size","","",61,[[["u32"],["f64"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",62,[[],["wiretype"]]],[11,"read","","",62,[[["codedinputstream"]],["protobufresult",["i32"]]]],[11,"compute_size","","",62,[[["i32"]],["u32"]]],[11,"write_with_cached_size","","",62,[[["u32"],["i32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",63,[[],["wiretype"]]],[11,"read","","",63,[[["codedinputstream"]],["protobufresult",["i64"]]]],[11,"compute_size","","",63,[[["i64"]],["u32"]]],[11,"write_with_cached_size","","",63,[[["u32"],["i64"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",64,[[],["wiretype"]]],[11,"read","","",64,[[["codedinputstream"]],["protobufresult",["u32"]]]],[11,"compute_size","","",64,[[["u32"]],["u32"]]],[11,"write_with_cached_size","","",64,[[["u32"],["u32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",65,[[],["wiretype"]]],[11,"read","","",65,[[["codedinputstream"]],["protobufresult",["u64"]]]],[11,"compute_size","","",65,[[["u64"]],["u32"]]],[11,"write_with_cached_size","","",65,[[["u32"],["u64"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",66,[[],["wiretype"]]],[11,"read","","",66,[[["codedinputstream"]],["protobufresult",["i32"]]]],[11,"compute_size","","",66,[[["i32"]],["u32"]]],[11,"write_with_cached_size","","",66,[[["u32"],["i32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",67,[[],["wiretype"]]],[11,"read","","",67,[[["codedinputstream"]],["protobufresult",["i64"]]]],[11,"compute_size","","",67,[[["i64"]],["u32"]]],[11,"write_with_cached_size","","",67,[[["u32"],["i64"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",68,[[],["wiretype"]]],[11,"read","","",68,[[["codedinputstream"]],["protobufresult",["u32"]]]],[11,"compute_size","","",68,[[["u32"]],["u32"]]],[11,"write_with_cached_size","","",68,[[["u32"],["u32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",69,[[],["wiretype"]]],[11,"read","","",69,[[["codedinputstream"]],["protobufresult",["u64"]]]],[11,"compute_size","","",69,[[["u64"]],["u32"]]],[11,"write_with_cached_size","","",69,[[["u32"],["u64"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",70,[[],["wiretype"]]],[11,"read","","",70,[[["codedinputstream"]],["protobufresult",["i32"]]]],[11,"compute_size","","",70,[[["i32"]],["u32"]]],[11,"write_with_cached_size","","",70,[[["u32"],["i32"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",71,[[],["wiretype"]]],[11,"read","","",71,[[["codedinputstream"]],["protobufresult",["i64"]]]],[11,"compute_size","","",71,[[["i64"]],["u32"]]],[11,"write_with_cached_size","","",71,[[["u32"],["i64"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",72,[[],["wiretype"]]],[11,"read","","",72,[[["codedinputstream"]],["protobufresult",["bool"]]]],[11,"get_from_unknown","","",72,[[["unknownvalues"]],["option",["bool"]]]],[11,"compute_size","","",72,[[["bool"]],["u32"]]],[11,"write_with_cached_size","","",72,[[["u32"],["bool"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",73,[[],["wiretype"]]],[11,"read","","",73,[[["codedinputstream"]],["protobufresult",["string"]]]],[11,"compute_size","","",73,[[["string"]],["u32"]]],[11,"write_with_cached_size","","",73,[[["u32"],["string"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",74,[[],["wiretype"]]],[11,"read","","",74,[[["codedinputstream"]],["protobufresult",["vec"]]]],[11,"compute_size","","",74,[[["vec"]],["u32"]]],[11,"write_with_cached_size","","",74,[[["u32"],["vec"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",75,[[],["wiretype"]]],[11,"read","","",75,[[["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",75,[[["e"]],["u32"]]],[11,"write_with_cached_size","","",75,[[["u32"],["e"],["codedoutputstream"]],["protobufresult"]]],[11,"wire_type","","",76,[[],["wiretype"]]],[11,"read","","",76,[[["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",76,[[["m"]],["u32"]]],[11,"get_cached_size","","",76,[[["m"]],["u32"]]],[11,"write_with_cached_size","","",76,N],[0,"well_known_types","protobuf","",N,N],[3,"Any","protobuf::well_known_types","",N,N],[12,"type_url","","",77,N],[12,"value","","",77,N],[3,"Api","","",N,N],[12,"name","","",78,N],[12,"methods","","",78,N],[12,"options","","",78,N],[12,"version","","",78,N],[12,"source_context","","",78,N],[12,"mixins","","",78,N],[12,"syntax","","",78,N],[3,"Method","","",N,N],[12,"name","","",79,N],[12,"request_type_url","","",79,N],[12,"request_streaming","","",79,N],[12,"response_type_url","","",79,N],[12,"response_streaming","","",79,N],[12,"options","","",79,N],[12,"syntax","","",79,N],[3,"Mixin","","",N,N],[12,"name","","",80,N],[12,"root","","",80,N],[3,"Duration","","",N,N],[12,"seconds","","",81,N],[12,"nanos","","",81,N],[3,"Empty","","",N,N],[3,"FieldMask","","",N,N],[12,"paths","","",82,N],[3,"SourceContext","","",N,N],[12,"file_name","","",83,N],[3,"Struct","","",N,N],[12,"fields","","",84,N],[3,"Value","","",N,N],[12,"kind","","",85,N],[3,"ListValue","","",N,N],[12,"values","","",86,N],[3,"Timestamp","","",N,N],[12,"seconds","","",87,N],[12,"nanos","","",87,N],[3,"Type","","",N,N],[12,"name","","",88,N],[12,"fields","","",88,N],[12,"oneofs","","",88,N],[12,"options","","",88,N],[12,"source_context","","",88,N],[12,"syntax","","",88,N],[3,"Field","","",N,N],[12,"kind","","",89,N],[12,"cardinality","","",89,N],[12,"number","","",89,N],[12,"name","","",89,N],[12,"type_url","","",89,N],[12,"oneof_index","","",89,N],[12,"packed","","",89,N],[12,"options","","",89,N],[12,"json_name","","",89,N],[12,"default_value","","",89,N],[3,"Enum","","",N,N],[12,"name","","",90,N],[12,"enumvalue","","",90,N],[12,"options","","",90,N],[12,"source_context","","",90,N],[12,"syntax","","",90,N],[3,"EnumValue","","",N,N],[12,"name","","",91,N],[12,"number","","",91,N],[12,"options","","",91,N],[3,"Option","","",N,N],[12,"name","","",92,N],[12,"value","","",92,N],[3,"DoubleValue","","",N,N],[12,"value","","",93,N],[3,"FloatValue","","",N,N],[12,"value","","",94,N],[3,"Int64Value","","",N,N],[12,"value","","",95,N],[3,"UInt64Value","","",N,N],[12,"value","","",96,N],[3,"Int32Value","","",N,N],[12,"value","","",97,N],[3,"UInt32Value","","",N,N],[12,"value","","",98,N],[3,"BoolValue","","",N,N],[12,"value","","",99,N],[3,"StringValue","","",N,N],[12,"value","","",100,N],[3,"BytesValue","","",N,N],[12,"value","","",101,N],[4,"Value_oneof_kind","","",N,N],[13,"null_value","","",102,N],[13,"number_value","","",102,N],[13,"string_value","","",102,N],[13,"bool_value","","",102,N],[13,"struct_value","","",102,N],[13,"list_value","","",102,N],[4,"NullValue","","",N,N],[13,"NULL_VALUE","","",103,N],[4,"Field_Kind","","",N,N],[13,"TYPE_UNKNOWN","","",104,N],[13,"TYPE_DOUBLE","","",104,N],[13,"TYPE_FLOAT","","",104,N],[13,"TYPE_INT64","","",104,N],[13,"TYPE_UINT64","","",104,N],[13,"TYPE_INT32","","",104,N],[13,"TYPE_FIXED64","","",104,N],[13,"TYPE_FIXED32","","",104,N],[13,"TYPE_BOOL","","",104,N],[13,"TYPE_STRING","","",104,N],[13,"TYPE_GROUP","","",104,N],[13,"TYPE_MESSAGE","","",104,N],[13,"TYPE_BYTES","","",104,N],[13,"TYPE_UINT32","","",104,N],[13,"TYPE_ENUM","","",104,N],[13,"TYPE_SFIXED32","","",104,N],[13,"TYPE_SFIXED64","","",104,N],[13,"TYPE_SINT32","","",104,N],[13,"TYPE_SINT64","","",104,N],[4,"Field_Cardinality","","",N,N],[13,"CARDINALITY_UNKNOWN","","",105,N],[13,"CARDINALITY_OPTIONAL","","",105,N],[13,"CARDINALITY_REQUIRED","","",105,N],[13,"CARDINALITY_REPEATED","","",105,N],[4,"Syntax","","",N,N],[13,"SYNTAX_PROTO2","","",106,N],[13,"SYNTAX_PROTO3","","",106,N],[11,"eq","","",77,[[["self"],["any"]],["bool"]]],[11,"ne","","",77,[[["self"],["any"]],["bool"]]],[11,"clone","","",77,[[["self"]],["any"]]],[11,"default","","",77,[[],["any"]]],[11,"new","","",77,[[],["any"]]],[11,"clear_type_url","","",77,[[["self"]]]],[11,"set_type_url","","",77,[[["self"],["string"]]]],[11,"mut_type_url","","",77,[[["self"]],["string"]]],[11,"take_type_url","","",77,[[["self"]],["string"]]],[11,"get_type_url","","",77,[[["self"]],["str"]]],[11,"clear_value","","",77,[[["self"]]]],[11,"set_value","","",77,[[["self"],["vec",["u8"]]]]],[11,"mut_value","","",77,[[["self"]],["vec"]]],[11,"take_value","","",77,[[["self"]],["vec",["u8"]]]],[11,"get_value","","",77,N],[11,"is_initialized","","",77,[[["self"]],["bool"]]],[11,"merge_from","","",77,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",77,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",77,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",77,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",77,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",77,[[["self"]],["unknownfields"]]],[11,"as_any","","",77,[[["self"]],["any"]]],[11,"as_any_mut","","",77,[[["self"]],["any"]]],[11,"into_any","","",77,[[["box"]],["box",["any"]]]],[11,"descriptor","","",77,[[["self"]],["messagedescriptor"]]],[11,"new","","",77,[[],["any"]]],[11,"descriptor_static","","",77,[[],["messagedescriptor"]]],[11,"default_instance","","",77,[[],["any"]]],[11,"clear","","",77,[[["self"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",77,[[["self"]],["protobufvalueref"]]],[11,"eq","","",78,[[["self"],["api"]],["bool"]]],[11,"ne","","",78,[[["self"],["api"]],["bool"]]],[11,"clone","","",78,[[["self"]],["api"]]],[11,"default","","",78,[[],["api"]]],[11,"new","","",78,[[],["api"]]],[11,"clear_name","","",78,[[["self"]]]],[11,"set_name","","",78,[[["self"],["string"]]]],[11,"mut_name","","",78,[[["self"]],["string"]]],[11,"take_name","","",78,[[["self"]],["string"]]],[11,"get_name","","",78,[[["self"]],["str"]]],[11,"clear_methods","","",78,[[["self"]]]],[11,"set_methods","","",78,[[["self"],["repeatedfield",["method"]]]]],[11,"mut_methods","","",78,[[["self"]],["repeatedfield"]]],[11,"take_methods","","",78,[[["self"]],["repeatedfield",["method"]]]],[11,"get_methods","","",78,N],[11,"clear_options","","",78,[[["self"]]]],[11,"set_options","","",78,[[["self"],["repeatedfield",["option"]]]]],[11,"mut_options","","",78,[[["self"]],["repeatedfield"]]],[11,"take_options","","",78,[[["self"]],["repeatedfield",["option"]]]],[11,"get_options","","",78,N],[11,"clear_version","","",78,[[["self"]]]],[11,"set_version","","",78,[[["self"],["string"]]]],[11,"mut_version","","",78,[[["self"]],["string"]]],[11,"take_version","","",78,[[["self"]],["string"]]],[11,"get_version","","",78,[[["self"]],["str"]]],[11,"clear_source_context","","",78,[[["self"]]]],[11,"has_source_context","","",78,[[["self"]],["bool"]]],[11,"set_source_context","","",78,[[["self"],["sourcecontext"]]]],[11,"mut_source_context","","",78,[[["self"]],["sourcecontext"]]],[11,"take_source_context","","",78,[[["self"]],["sourcecontext"]]],[11,"get_source_context","","",78,[[["self"]],["sourcecontext"]]],[11,"clear_mixins","","",78,[[["self"]]]],[11,"set_mixins","","",78,[[["self"],["repeatedfield",["mixin"]]]]],[11,"mut_mixins","","",78,[[["self"]],["repeatedfield"]]],[11,"take_mixins","","",78,[[["self"]],["repeatedfield",["mixin"]]]],[11,"get_mixins","","",78,N],[11,"clear_syntax","","",78,[[["self"]]]],[11,"set_syntax","","",78,[[["self"],["syntax"]]]],[11,"get_syntax","","",78,[[["self"]],["syntax"]]],[11,"is_initialized","","",78,[[["self"]],["bool"]]],[11,"merge_from","","",78,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",78,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",78,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",78,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",78,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",78,[[["self"]],["unknownfields"]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"into_any","","",78,[[["box"]],["box",["any"]]]],[11,"descriptor","","",78,[[["self"]],["messagedescriptor"]]],[11,"new","","",78,[[],["api"]]],[11,"descriptor_static","","",78,[[],["messagedescriptor"]]],[11,"default_instance","","",78,[[],["api"]]],[11,"clear","","",78,[[["self"]]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",78,[[["self"]],["protobufvalueref"]]],[11,"eq","","",79,[[["self"],["method"]],["bool"]]],[11,"ne","","",79,[[["self"],["method"]],["bool"]]],[11,"clone","","",79,[[["self"]],["method"]]],[11,"default","","",79,[[],["method"]]],[11,"new","","",79,[[],["method"]]],[11,"clear_name","","",79,[[["self"]]]],[11,"set_name","","",79,[[["self"],["string"]]]],[11,"mut_name","","",79,[[["self"]],["string"]]],[11,"take_name","","",79,[[["self"]],["string"]]],[11,"get_name","","",79,[[["self"]],["str"]]],[11,"clear_request_type_url","","",79,[[["self"]]]],[11,"set_request_type_url","","",79,[[["self"],["string"]]]],[11,"mut_request_type_url","","",79,[[["self"]],["string"]]],[11,"take_request_type_url","","",79,[[["self"]],["string"]]],[11,"get_request_type_url","","",79,[[["self"]],["str"]]],[11,"clear_request_streaming","","",79,[[["self"]]]],[11,"set_request_streaming","","",79,[[["self"],["bool"]]]],[11,"get_request_streaming","","",79,[[["self"]],["bool"]]],[11,"clear_response_type_url","","",79,[[["self"]]]],[11,"set_response_type_url","","",79,[[["self"],["string"]]]],[11,"mut_response_type_url","","",79,[[["self"]],["string"]]],[11,"take_response_type_url","","",79,[[["self"]],["string"]]],[11,"get_response_type_url","","",79,[[["self"]],["str"]]],[11,"clear_response_streaming","","",79,[[["self"]]]],[11,"set_response_streaming","","",79,[[["self"],["bool"]]]],[11,"get_response_streaming","","",79,[[["self"]],["bool"]]],[11,"clear_options","","",79,[[["self"]]]],[11,"set_options","","",79,[[["self"],["repeatedfield",["option"]]]]],[11,"mut_options","","",79,[[["self"]],["repeatedfield"]]],[11,"take_options","","",79,[[["self"]],["repeatedfield",["option"]]]],[11,"get_options","","",79,N],[11,"clear_syntax","","",79,[[["self"]]]],[11,"set_syntax","","",79,[[["self"],["syntax"]]]],[11,"get_syntax","","",79,[[["self"]],["syntax"]]],[11,"is_initialized","","",79,[[["self"]],["bool"]]],[11,"merge_from","","",79,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",79,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",79,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",79,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",79,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",79,[[["self"]],["unknownfields"]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"into_any","","",79,[[["box"]],["box",["any"]]]],[11,"descriptor","","",79,[[["self"]],["messagedescriptor"]]],[11,"new","","",79,[[],["method"]]],[11,"descriptor_static","","",79,[[],["messagedescriptor"]]],[11,"default_instance","","",79,[[],["method"]]],[11,"clear","","",79,[[["self"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",79,[[["self"]],["protobufvalueref"]]],[11,"eq","","",80,[[["self"],["mixin"]],["bool"]]],[11,"ne","","",80,[[["self"],["mixin"]],["bool"]]],[11,"clone","","",80,[[["self"]],["mixin"]]],[11,"default","","",80,[[],["mixin"]]],[11,"new","","",80,[[],["mixin"]]],[11,"clear_name","","",80,[[["self"]]]],[11,"set_name","","",80,[[["self"],["string"]]]],[11,"mut_name","","",80,[[["self"]],["string"]]],[11,"take_name","","",80,[[["self"]],["string"]]],[11,"get_name","","",80,[[["self"]],["str"]]],[11,"clear_root","","",80,[[["self"]]]],[11,"set_root","","",80,[[["self"],["string"]]]],[11,"mut_root","","",80,[[["self"]],["string"]]],[11,"take_root","","",80,[[["self"]],["string"]]],[11,"get_root","","",80,[[["self"]],["str"]]],[11,"is_initialized","","",80,[[["self"]],["bool"]]],[11,"merge_from","","",80,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",80,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",80,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",80,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",80,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",80,[[["self"]],["unknownfields"]]],[11,"as_any","","",80,[[["self"]],["any"]]],[11,"as_any_mut","","",80,[[["self"]],["any"]]],[11,"into_any","","",80,[[["box"]],["box",["any"]]]],[11,"descriptor","","",80,[[["self"]],["messagedescriptor"]]],[11,"new","","",80,[[],["mixin"]]],[11,"descriptor_static","","",80,[[],["messagedescriptor"]]],[11,"default_instance","","",80,[[],["mixin"]]],[11,"clear","","",80,[[["self"]]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",80,[[["self"]],["protobufvalueref"]]],[11,"eq","","",81,[[["self"],["duration"]],["bool"]]],[11,"ne","","",81,[[["self"],["duration"]],["bool"]]],[11,"clone","","",81,[[["self"]],["duration"]]],[11,"default","","",81,[[],["duration"]]],[11,"new","","",81,[[],["duration"]]],[11,"clear_seconds","","",81,[[["self"]]]],[11,"set_seconds","","",81,[[["self"],["i64"]]]],[11,"get_seconds","","",81,[[["self"]],["i64"]]],[11,"clear_nanos","","",81,[[["self"]]]],[11,"set_nanos","","",81,[[["self"],["i32"]]]],[11,"get_nanos","","",81,[[["self"]],["i32"]]],[11,"is_initialized","","",81,[[["self"]],["bool"]]],[11,"merge_from","","",81,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",81,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",81,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",81,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",81,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",81,[[["self"]],["unknownfields"]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"into_any","","",81,[[["box"]],["box",["any"]]]],[11,"descriptor","","",81,[[["self"]],["messagedescriptor"]]],[11,"new","","",81,[[],["duration"]]],[11,"descriptor_static","","",81,[[],["messagedescriptor"]]],[11,"default_instance","","",81,[[],["duration"]]],[11,"clear","","",81,[[["self"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",81,[[["self"]],["protobufvalueref"]]],[11,"eq","","",107,[[["self"],["empty"]],["bool"]]],[11,"ne","","",107,[[["self"],["empty"]],["bool"]]],[11,"clone","","",107,[[["self"]],["empty"]]],[11,"default","","",107,[[],["empty"]]],[11,"new","","",107,[[],["empty"]]],[11,"is_initialized","","",107,[[["self"]],["bool"]]],[11,"merge_from","","",107,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",107,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",107,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",107,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",107,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",107,[[["self"]],["unknownfields"]]],[11,"as_any","","",107,[[["self"]],["any"]]],[11,"as_any_mut","","",107,[[["self"]],["any"]]],[11,"into_any","","",107,[[["box"]],["box",["any"]]]],[11,"descriptor","","",107,[[["self"]],["messagedescriptor"]]],[11,"new","","",107,[[],["empty"]]],[11,"descriptor_static","","",107,[[],["messagedescriptor"]]],[11,"default_instance","","",107,[[],["empty"]]],[11,"clear","","",107,[[["self"]]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",107,[[["self"]],["protobufvalueref"]]],[11,"eq","","",82,[[["self"],["fieldmask"]],["bool"]]],[11,"ne","","",82,[[["self"],["fieldmask"]],["bool"]]],[11,"clone","","",82,[[["self"]],["fieldmask"]]],[11,"default","","",82,[[],["fieldmask"]]],[11,"new","","",82,[[],["fieldmask"]]],[11,"clear_paths","","",82,[[["self"]]]],[11,"set_paths","","",82,[[["self"],["repeatedfield",["string"]]]]],[11,"mut_paths","","",82,[[["self"]],["repeatedfield"]]],[11,"take_paths","","",82,[[["self"]],["repeatedfield",["string"]]]],[11,"get_paths","","",82,N],[11,"is_initialized","","",82,[[["self"]],["bool"]]],[11,"merge_from","","",82,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",82,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",82,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",82,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",82,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",82,[[["self"]],["unknownfields"]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"into_any","","",82,[[["box"]],["box",["any"]]]],[11,"descriptor","","",82,[[["self"]],["messagedescriptor"]]],[11,"new","","",82,[[],["fieldmask"]]],[11,"descriptor_static","","",82,[[],["messagedescriptor"]]],[11,"default_instance","","",82,[[],["fieldmask"]]],[11,"clear","","",82,[[["self"]]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",82,[[["self"]],["protobufvalueref"]]],[11,"eq","","",83,[[["self"],["sourcecontext"]],["bool"]]],[11,"ne","","",83,[[["self"],["sourcecontext"]],["bool"]]],[11,"clone","","",83,[[["self"]],["sourcecontext"]]],[11,"default","","",83,[[],["sourcecontext"]]],[11,"new","","",83,[[],["sourcecontext"]]],[11,"clear_file_name","","",83,[[["self"]]]],[11,"set_file_name","","",83,[[["self"],["string"]]]],[11,"mut_file_name","","",83,[[["self"]],["string"]]],[11,"take_file_name","","",83,[[["self"]],["string"]]],[11,"get_file_name","","",83,[[["self"]],["str"]]],[11,"is_initialized","","",83,[[["self"]],["bool"]]],[11,"merge_from","","",83,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",83,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",83,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",83,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",83,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",83,[[["self"]],["unknownfields"]]],[11,"as_any","","",83,[[["self"]],["any"]]],[11,"as_any_mut","","",83,[[["self"]],["any"]]],[11,"into_any","","",83,[[["box"]],["box",["any"]]]],[11,"descriptor","","",83,[[["self"]],["messagedescriptor"]]],[11,"new","","",83,[[],["sourcecontext"]]],[11,"descriptor_static","","",83,[[],["messagedescriptor"]]],[11,"default_instance","","",83,[[],["sourcecontext"]]],[11,"clear","","",83,[[["self"]]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",83,[[["self"]],["protobufvalueref"]]],[11,"eq","","",84,[[["self"],["struct"]],["bool"]]],[11,"ne","","",84,[[["self"],["struct"]],["bool"]]],[11,"clone","","",84,[[["self"]],["struct"]]],[11,"default","","",84,[[],["struct"]]],[11,"new","","",84,[[],["struct"]]],[11,"clear_fields","","",84,[[["self"]]]],[11,"set_fields","","",84,[[["self"],["hashmap",["string","value"]]]]],[11,"mut_fields","","",84,[[["self"]],["hashmap"]]],[11,"take_fields","","",84,[[["self"]],["hashmap",["string","value"]]]],[11,"get_fields","","",84,[[["self"]],["hashmap"]]],[11,"is_initialized","","",84,[[["self"]],["bool"]]],[11,"merge_from","","",84,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",84,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",84,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",84,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",84,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",84,[[["self"]],["unknownfields"]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"into_any","","",84,[[["box"]],["box",["any"]]]],[11,"descriptor","","",84,[[["self"]],["messagedescriptor"]]],[11,"new","","",84,[[],["struct"]]],[11,"descriptor_static","","",84,[[],["messagedescriptor"]]],[11,"default_instance","","",84,[[],["struct"]]],[11,"clear","","",84,[[["self"]]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",84,[[["self"]],["protobufvalueref"]]],[11,"eq","","",85,[[["self"],["value"]],["bool"]]],[11,"ne","","",85,[[["self"],["value"]],["bool"]]],[11,"clone","","",85,[[["self"]],["value"]]],[11,"default","","",85,[[],["value"]]],[11,"clone","","",102,[[["self"]],["value_oneof_kind"]]],[11,"eq","","",102,[[["self"],["value_oneof_kind"]],["bool"]]],[11,"ne","","",102,[[["self"],["value_oneof_kind"]],["bool"]]],[11,"new","","",85,[[],["value"]]],[11,"clear_null_value","","",85,[[["self"]]]],[11,"has_null_value","","",85,[[["self"]],["bool"]]],[11,"set_null_value","","",85,[[["self"],["nullvalue"]]]],[11,"get_null_value","","",85,[[["self"]],["nullvalue"]]],[11,"clear_number_value","","",85,[[["self"]]]],[11,"has_number_value","","",85,[[["self"]],["bool"]]],[11,"set_number_value","","",85,[[["self"],["f64"]]]],[11,"get_number_value","","",85,[[["self"]],["f64"]]],[11,"clear_string_value","","",85,[[["self"]]]],[11,"has_string_value","","",85,[[["self"]],["bool"]]],[11,"set_string_value","","",85,[[["self"],["string"]]]],[11,"mut_string_value","","",85,[[["self"]],["string"]]],[11,"take_string_value","","",85,[[["self"]],["string"]]],[11,"get_string_value","","",85,[[["self"]],["str"]]],[11,"clear_bool_value","","",85,[[["self"]]]],[11,"has_bool_value","","",85,[[["self"]],["bool"]]],[11,"set_bool_value","","",85,[[["self"],["bool"]]]],[11,"get_bool_value","","",85,[[["self"]],["bool"]]],[11,"clear_struct_value","","",85,[[["self"]]]],[11,"has_struct_value","","",85,[[["self"]],["bool"]]],[11,"set_struct_value","","",85,[[["self"],["struct"]]]],[11,"mut_struct_value","","",85,[[["self"]],["struct"]]],[11,"take_struct_value","","",85,[[["self"]],["struct"]]],[11,"get_struct_value","","",85,[[["self"]],["struct"]]],[11,"clear_list_value","","",85,[[["self"]]]],[11,"has_list_value","","",85,[[["self"]],["bool"]]],[11,"set_list_value","","",85,[[["self"],["listvalue"]]]],[11,"mut_list_value","","",85,[[["self"]],["listvalue"]]],[11,"take_list_value","","",85,[[["self"]],["listvalue"]]],[11,"get_list_value","","",85,[[["self"]],["listvalue"]]],[11,"is_initialized","","",85,[[["self"]],["bool"]]],[11,"merge_from","","",85,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",85,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",85,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",85,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",85,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",85,[[["self"]],["unknownfields"]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"into_any","","",85,[[["box"]],["box",["any"]]]],[11,"descriptor","","",85,[[["self"]],["messagedescriptor"]]],[11,"new","","",85,[[],["value"]]],[11,"descriptor_static","","",85,[[],["messagedescriptor"]]],[11,"default_instance","","",85,[[],["value"]]],[11,"clear","","",85,[[["self"]]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",85,[[["self"]],["protobufvalueref"]]],[11,"eq","","",86,[[["self"],["listvalue"]],["bool"]]],[11,"ne","","",86,[[["self"],["listvalue"]],["bool"]]],[11,"clone","","",86,[[["self"]],["listvalue"]]],[11,"default","","",86,[[],["listvalue"]]],[11,"new","","",86,[[],["listvalue"]]],[11,"clear_values","","",86,[[["self"]]]],[11,"set_values","","",86,[[["self"],["repeatedfield",["value"]]]]],[11,"mut_values","","",86,[[["self"]],["repeatedfield"]]],[11,"take_values","","",86,[[["self"]],["repeatedfield",["value"]]]],[11,"get_values","","",86,N],[11,"is_initialized","","",86,[[["self"]],["bool"]]],[11,"merge_from","","",86,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",86,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",86,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",86,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",86,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",86,[[["self"]],["unknownfields"]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"into_any","","",86,[[["box"]],["box",["any"]]]],[11,"descriptor","","",86,[[["self"]],["messagedescriptor"]]],[11,"new","","",86,[[],["listvalue"]]],[11,"descriptor_static","","",86,[[],["messagedescriptor"]]],[11,"default_instance","","",86,[[],["listvalue"]]],[11,"clear","","",86,[[["self"]]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",86,[[["self"]],["protobufvalueref"]]],[11,"clone","","",103,[[["self"]],["nullvalue"]]],[11,"eq","","",103,[[["self"],["nullvalue"]],["bool"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"hash","","",103,N],[11,"value","","",103,[[["self"]],["i32"]]],[11,"from_i32","","",103,[[["i32"]],["option",["nullvalue"]]]],[11,"values","","",103,N],[11,"enum_descriptor_static","","",103,[[],["enumdescriptor"]]],[11,"default","","",103,[[],["self"]]],[11,"as_ref","","",103,[[["self"]],["protobufvalueref"]]],[11,"eq","","",87,[[["self"],["timestamp"]],["bool"]]],[11,"ne","","",87,[[["self"],["timestamp"]],["bool"]]],[11,"clone","","",87,[[["self"]],["timestamp"]]],[11,"default","","",87,[[],["timestamp"]]],[11,"new","","",87,[[],["timestamp"]]],[11,"clear_seconds","","",87,[[["self"]]]],[11,"set_seconds","","",87,[[["self"],["i64"]]]],[11,"get_seconds","","",87,[[["self"]],["i64"]]],[11,"clear_nanos","","",87,[[["self"]]]],[11,"set_nanos","","",87,[[["self"],["i32"]]]],[11,"get_nanos","","",87,[[["self"]],["i32"]]],[11,"is_initialized","","",87,[[["self"]],["bool"]]],[11,"merge_from","","",87,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",87,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",87,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",87,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",87,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",87,[[["self"]],["unknownfields"]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"into_any","","",87,[[["box"]],["box",["any"]]]],[11,"descriptor","","",87,[[["self"]],["messagedescriptor"]]],[11,"new","","",87,[[],["timestamp"]]],[11,"descriptor_static","","",87,[[],["messagedescriptor"]]],[11,"default_instance","","",87,[[],["timestamp"]]],[11,"clear","","",87,[[["self"]]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",87,[[["self"]],["protobufvalueref"]]],[11,"eq","","",88,[[["self"],["type"]],["bool"]]],[11,"ne","","",88,[[["self"],["type"]],["bool"]]],[11,"clone","","",88,[[["self"]],["type"]]],[11,"default","","",88,[[],["type"]]],[11,"new","","",88,[[],["type"]]],[11,"clear_name","","",88,[[["self"]]]],[11,"set_name","","",88,[[["self"],["string"]]]],[11,"mut_name","","",88,[[["self"]],["string"]]],[11,"take_name","","",88,[[["self"]],["string"]]],[11,"get_name","","",88,[[["self"]],["str"]]],[11,"clear_fields","","",88,[[["self"]]]],[11,"set_fields","","",88,[[["self"],["repeatedfield",["field"]]]]],[11,"mut_fields","","",88,[[["self"]],["repeatedfield"]]],[11,"take_fields","","",88,[[["self"]],["repeatedfield",["field"]]]],[11,"get_fields","","",88,N],[11,"clear_oneofs","","",88,[[["self"]]]],[11,"set_oneofs","","",88,[[["self"],["repeatedfield",["string"]]]]],[11,"mut_oneofs","","",88,[[["self"]],["repeatedfield"]]],[11,"take_oneofs","","",88,[[["self"]],["repeatedfield",["string"]]]],[11,"get_oneofs","","",88,N],[11,"clear_options","","",88,[[["self"]]]],[11,"set_options","","",88,[[["self"],["repeatedfield",["option"]]]]],[11,"mut_options","","",88,[[["self"]],["repeatedfield"]]],[11,"take_options","","",88,[[["self"]],["repeatedfield",["option"]]]],[11,"get_options","","",88,N],[11,"clear_source_context","","",88,[[["self"]]]],[11,"has_source_context","","",88,[[["self"]],["bool"]]],[11,"set_source_context","","",88,[[["self"],["sourcecontext"]]]],[11,"mut_source_context","","",88,[[["self"]],["sourcecontext"]]],[11,"take_source_context","","",88,[[["self"]],["sourcecontext"]]],[11,"get_source_context","","",88,[[["self"]],["sourcecontext"]]],[11,"clear_syntax","","",88,[[["self"]]]],[11,"set_syntax","","",88,[[["self"],["syntax"]]]],[11,"get_syntax","","",88,[[["self"]],["syntax"]]],[11,"is_initialized","","",88,[[["self"]],["bool"]]],[11,"merge_from","","",88,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",88,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",88,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",88,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",88,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",88,[[["self"]],["unknownfields"]]],[11,"as_any","","",88,[[["self"]],["any"]]],[11,"as_any_mut","","",88,[[["self"]],["any"]]],[11,"into_any","","",88,[[["box"]],["box",["any"]]]],[11,"descriptor","","",88,[[["self"]],["messagedescriptor"]]],[11,"new","","",88,[[],["type"]]],[11,"descriptor_static","","",88,[[],["messagedescriptor"]]],[11,"default_instance","","",88,[[],["type"]]],[11,"clear","","",88,[[["self"]]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",88,[[["self"]],["protobufvalueref"]]],[11,"eq","","",89,[[["self"],["field"]],["bool"]]],[11,"ne","","",89,[[["self"],["field"]],["bool"]]],[11,"clone","","",89,[[["self"]],["field"]]],[11,"default","","",89,[[],["field"]]],[11,"new","","",89,[[],["field"]]],[11,"clear_kind","","",89,[[["self"]]]],[11,"set_kind","","",89,[[["self"],["field_kind"]]]],[11,"get_kind","","",89,[[["self"]],["field_kind"]]],[11,"clear_cardinality","","",89,[[["self"]]]],[11,"set_cardinality","","",89,[[["self"],["field_cardinality"]]]],[11,"get_cardinality","","",89,[[["self"]],["field_cardinality"]]],[11,"clear_number","","",89,[[["self"]]]],[11,"set_number","","",89,[[["self"],["i32"]]]],[11,"get_number","","",89,[[["self"]],["i32"]]],[11,"clear_name","","",89,[[["self"]]]],[11,"set_name","","",89,[[["self"],["string"]]]],[11,"mut_name","","",89,[[["self"]],["string"]]],[11,"take_name","","",89,[[["self"]],["string"]]],[11,"get_name","","",89,[[["self"]],["str"]]],[11,"clear_type_url","","",89,[[["self"]]]],[11,"set_type_url","","",89,[[["self"],["string"]]]],[11,"mut_type_url","","",89,[[["self"]],["string"]]],[11,"take_type_url","","",89,[[["self"]],["string"]]],[11,"get_type_url","","",89,[[["self"]],["str"]]],[11,"clear_oneof_index","","",89,[[["self"]]]],[11,"set_oneof_index","","",89,[[["self"],["i32"]]]],[11,"get_oneof_index","","",89,[[["self"]],["i32"]]],[11,"clear_packed","","",89,[[["self"]]]],[11,"set_packed","","",89,[[["self"],["bool"]]]],[11,"get_packed","","",89,[[["self"]],["bool"]]],[11,"clear_options","","",89,[[["self"]]]],[11,"set_options","","",89,[[["self"],["repeatedfield",["option"]]]]],[11,"mut_options","","",89,[[["self"]],["repeatedfield"]]],[11,"take_options","","",89,[[["self"]],["repeatedfield",["option"]]]],[11,"get_options","","",89,N],[11,"clear_json_name","","",89,[[["self"]]]],[11,"set_json_name","","",89,[[["self"],["string"]]]],[11,"mut_json_name","","",89,[[["self"]],["string"]]],[11,"take_json_name","","",89,[[["self"]],["string"]]],[11,"get_json_name","","",89,[[["self"]],["str"]]],[11,"clear_default_value","","",89,[[["self"]]]],[11,"set_default_value","","",89,[[["self"],["string"]]]],[11,"mut_default_value","","",89,[[["self"]],["string"]]],[11,"take_default_value","","",89,[[["self"]],["string"]]],[11,"get_default_value","","",89,[[["self"]],["str"]]],[11,"is_initialized","","",89,[[["self"]],["bool"]]],[11,"merge_from","","",89,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",89,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",89,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",89,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",89,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",89,[[["self"]],["unknownfields"]]],[11,"as_any","","",89,[[["self"]],["any"]]],[11,"as_any_mut","","",89,[[["self"]],["any"]]],[11,"into_any","","",89,[[["box"]],["box",["any"]]]],[11,"descriptor","","",89,[[["self"]],["messagedescriptor"]]],[11,"new","","",89,[[],["field"]]],[11,"descriptor_static","","",89,[[],["messagedescriptor"]]],[11,"default_instance","","",89,[[],["field"]]],[11,"clear","","",89,[[["self"]]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",89,[[["self"]],["protobufvalueref"]]],[11,"clone","","",104,[[["self"]],["field_kind"]]],[11,"eq","","",104,[[["self"],["field_kind"]],["bool"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"hash","","",104,N],[11,"value","","",104,[[["self"]],["i32"]]],[11,"from_i32","","",104,[[["i32"]],["option",["field_kind"]]]],[11,"values","","",104,N],[11,"enum_descriptor_static","","",104,[[],["enumdescriptor"]]],[11,"default","","",104,[[],["self"]]],[11,"as_ref","","",104,[[["self"]],["protobufvalueref"]]],[11,"clone","","",105,[[["self"]],["field_cardinality"]]],[11,"eq","","",105,[[["self"],["field_cardinality"]],["bool"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"hash","","",105,N],[11,"value","","",105,[[["self"]],["i32"]]],[11,"from_i32","","",105,[[["i32"]],["option",["field_cardinality"]]]],[11,"values","","",105,N],[11,"enum_descriptor_static","","",105,[[],["enumdescriptor"]]],[11,"default","","",105,[[],["self"]]],[11,"as_ref","","",105,[[["self"]],["protobufvalueref"]]],[11,"eq","","",90,[[["self"],["enum"]],["bool"]]],[11,"ne","","",90,[[["self"],["enum"]],["bool"]]],[11,"clone","","",90,[[["self"]],["enum"]]],[11,"default","","",90,[[],["enum"]]],[11,"new","","",90,[[],["enum"]]],[11,"clear_name","","",90,[[["self"]]]],[11,"set_name","","",90,[[["self"],["string"]]]],[11,"mut_name","","",90,[[["self"]],["string"]]],[11,"take_name","","",90,[[["self"]],["string"]]],[11,"get_name","","",90,[[["self"]],["str"]]],[11,"clear_enumvalue","","",90,[[["self"]]]],[11,"set_enumvalue","","",90,[[["self"],["repeatedfield",["enumvalue"]]]]],[11,"mut_enumvalue","","",90,[[["self"]],["repeatedfield"]]],[11,"take_enumvalue","","",90,[[["self"]],["repeatedfield",["enumvalue"]]]],[11,"get_enumvalue","","",90,N],[11,"clear_options","","",90,[[["self"]]]],[11,"set_options","","",90,[[["self"],["repeatedfield",["option"]]]]],[11,"mut_options","","",90,[[["self"]],["repeatedfield"]]],[11,"take_options","","",90,[[["self"]],["repeatedfield",["option"]]]],[11,"get_options","","",90,N],[11,"clear_source_context","","",90,[[["self"]]]],[11,"has_source_context","","",90,[[["self"]],["bool"]]],[11,"set_source_context","","",90,[[["self"],["sourcecontext"]]]],[11,"mut_source_context","","",90,[[["self"]],["sourcecontext"]]],[11,"take_source_context","","",90,[[["self"]],["sourcecontext"]]],[11,"get_source_context","","",90,[[["self"]],["sourcecontext"]]],[11,"clear_syntax","","",90,[[["self"]]]],[11,"set_syntax","","",90,[[["self"],["syntax"]]]],[11,"get_syntax","","",90,[[["self"]],["syntax"]]],[11,"is_initialized","","",90,[[["self"]],["bool"]]],[11,"merge_from","","",90,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",90,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",90,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",90,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",90,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",90,[[["self"]],["unknownfields"]]],[11,"as_any","","",90,[[["self"]],["any"]]],[11,"as_any_mut","","",90,[[["self"]],["any"]]],[11,"into_any","","",90,[[["box"]],["box",["any"]]]],[11,"descriptor","","",90,[[["self"]],["messagedescriptor"]]],[11,"new","","",90,[[],["enum"]]],[11,"descriptor_static","","",90,[[],["messagedescriptor"]]],[11,"default_instance","","",90,[[],["enum"]]],[11,"clear","","",90,[[["self"]]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",90,[[["self"]],["protobufvalueref"]]],[11,"eq","","",91,[[["self"],["enumvalue"]],["bool"]]],[11,"ne","","",91,[[["self"],["enumvalue"]],["bool"]]],[11,"clone","","",91,[[["self"]],["enumvalue"]]],[11,"default","","",91,[[],["enumvalue"]]],[11,"new","","",91,[[],["enumvalue"]]],[11,"clear_name","","",91,[[["self"]]]],[11,"set_name","","",91,[[["self"],["string"]]]],[11,"mut_name","","",91,[[["self"]],["string"]]],[11,"take_name","","",91,[[["self"]],["string"]]],[11,"get_name","","",91,[[["self"]],["str"]]],[11,"clear_number","","",91,[[["self"]]]],[11,"set_number","","",91,[[["self"],["i32"]]]],[11,"get_number","","",91,[[["self"]],["i32"]]],[11,"clear_options","","",91,[[["self"]]]],[11,"set_options","","",91,[[["self"],["repeatedfield",["option"]]]]],[11,"mut_options","","",91,[[["self"]],["repeatedfield"]]],[11,"take_options","","",91,[[["self"]],["repeatedfield",["option"]]]],[11,"get_options","","",91,N],[11,"is_initialized","","",91,[[["self"]],["bool"]]],[11,"merge_from","","",91,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",91,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",91,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",91,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",91,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",91,[[["self"]],["unknownfields"]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"into_any","","",91,[[["box"]],["box",["any"]]]],[11,"descriptor","","",91,[[["self"]],["messagedescriptor"]]],[11,"new","","",91,[[],["enumvalue"]]],[11,"descriptor_static","","",91,[[],["messagedescriptor"]]],[11,"default_instance","","",91,[[],["enumvalue"]]],[11,"clear","","",91,[[["self"]]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",91,[[["self"]],["protobufvalueref"]]],[11,"eq","","",92,[[["self"],["option"]],["bool"]]],[11,"ne","","",92,[[["self"],["option"]],["bool"]]],[11,"clone","","",92,[[["self"]],["option"]]],[11,"default","","",92,[[],["option"]]],[11,"new","","",92,[[],["option"]]],[11,"clear_name","","",92,[[["self"]]]],[11,"set_name","","",92,[[["self"],["string"]]]],[11,"mut_name","","",92,[[["self"]],["string"]]],[11,"take_name","","",92,[[["self"]],["string"]]],[11,"get_name","","",92,[[["self"]],["str"]]],[11,"clear_value","","",92,[[["self"]]]],[11,"has_value","","",92,[[["self"]],["bool"]]],[11,"set_value","","",92,[[["self"],["any"]]]],[11,"mut_value","","",92,[[["self"]],["any"]]],[11,"take_value","","",92,[[["self"]],["any"]]],[11,"get_value","","",92,[[["self"]],["any"]]],[11,"is_initialized","","",92,[[["self"]],["bool"]]],[11,"merge_from","","",92,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",92,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",92,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",92,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",92,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",92,[[["self"]],["unknownfields"]]],[11,"as_any","","",92,[[["self"]],["any"]]],[11,"as_any_mut","","",92,[[["self"]],["any"]]],[11,"into_any","","",92,[[["box"]],["box",["any"]]]],[11,"descriptor","","",92,[[["self"]],["messagedescriptor"]]],[11,"new","","",92,[[],["option"]]],[11,"descriptor_static","","",92,[[],["messagedescriptor"]]],[11,"default_instance","","",92,[[],["option"]]],[11,"clear","","",92,[[["self"]]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",92,[[["self"]],["protobufvalueref"]]],[11,"clone","","",106,[[["self"]],["syntax"]]],[11,"eq","","",106,[[["self"],["syntax"]],["bool"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"hash","","",106,N],[11,"value","","",106,[[["self"]],["i32"]]],[11,"from_i32","","",106,[[["i32"]],["option",["syntax"]]]],[11,"values","","",106,N],[11,"enum_descriptor_static","","",106,[[],["enumdescriptor"]]],[11,"default","","",106,[[],["self"]]],[11,"as_ref","","",106,[[["self"]],["protobufvalueref"]]],[11,"eq","","",93,[[["self"],["doublevalue"]],["bool"]]],[11,"ne","","",93,[[["self"],["doublevalue"]],["bool"]]],[11,"clone","","",93,[[["self"]],["doublevalue"]]],[11,"default","","",93,[[],["doublevalue"]]],[11,"new","","",93,[[],["doublevalue"]]],[11,"clear_value","","",93,[[["self"]]]],[11,"set_value","","",93,[[["self"],["f64"]]]],[11,"get_value","","",93,[[["self"]],["f64"]]],[11,"is_initialized","","",93,[[["self"]],["bool"]]],[11,"merge_from","","",93,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",93,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",93,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",93,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",93,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",93,[[["self"]],["unknownfields"]]],[11,"as_any","","",93,[[["self"]],["any"]]],[11,"as_any_mut","","",93,[[["self"]],["any"]]],[11,"into_any","","",93,[[["box"]],["box",["any"]]]],[11,"descriptor","","",93,[[["self"]],["messagedescriptor"]]],[11,"new","","",93,[[],["doublevalue"]]],[11,"descriptor_static","","",93,[[],["messagedescriptor"]]],[11,"default_instance","","",93,[[],["doublevalue"]]],[11,"clear","","",93,[[["self"]]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",93,[[["self"]],["protobufvalueref"]]],[11,"eq","","",94,[[["self"],["floatvalue"]],["bool"]]],[11,"ne","","",94,[[["self"],["floatvalue"]],["bool"]]],[11,"clone","","",94,[[["self"]],["floatvalue"]]],[11,"default","","",94,[[],["floatvalue"]]],[11,"new","","",94,[[],["floatvalue"]]],[11,"clear_value","","",94,[[["self"]]]],[11,"set_value","","",94,[[["self"],["f32"]]]],[11,"get_value","","",94,[[["self"]],["f32"]]],[11,"is_initialized","","",94,[[["self"]],["bool"]]],[11,"merge_from","","",94,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",94,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",94,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",94,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",94,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",94,[[["self"]],["unknownfields"]]],[11,"as_any","","",94,[[["self"]],["any"]]],[11,"as_any_mut","","",94,[[["self"]],["any"]]],[11,"into_any","","",94,[[["box"]],["box",["any"]]]],[11,"descriptor","","",94,[[["self"]],["messagedescriptor"]]],[11,"new","","",94,[[],["floatvalue"]]],[11,"descriptor_static","","",94,[[],["messagedescriptor"]]],[11,"default_instance","","",94,[[],["floatvalue"]]],[11,"clear","","",94,[[["self"]]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",94,[[["self"]],["protobufvalueref"]]],[11,"eq","","",95,[[["self"],["int64value"]],["bool"]]],[11,"ne","","",95,[[["self"],["int64value"]],["bool"]]],[11,"clone","","",95,[[["self"]],["int64value"]]],[11,"default","","",95,[[],["int64value"]]],[11,"new","","",95,[[],["int64value"]]],[11,"clear_value","","",95,[[["self"]]]],[11,"set_value","","",95,[[["self"],["i64"]]]],[11,"get_value","","",95,[[["self"]],["i64"]]],[11,"is_initialized","","",95,[[["self"]],["bool"]]],[11,"merge_from","","",95,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",95,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",95,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",95,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",95,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",95,[[["self"]],["unknownfields"]]],[11,"as_any","","",95,[[["self"]],["any"]]],[11,"as_any_mut","","",95,[[["self"]],["any"]]],[11,"into_any","","",95,[[["box"]],["box",["any"]]]],[11,"descriptor","","",95,[[["self"]],["messagedescriptor"]]],[11,"new","","",95,[[],["int64value"]]],[11,"descriptor_static","","",95,[[],["messagedescriptor"]]],[11,"default_instance","","",95,[[],["int64value"]]],[11,"clear","","",95,[[["self"]]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",95,[[["self"]],["protobufvalueref"]]],[11,"eq","","",96,[[["self"],["uint64value"]],["bool"]]],[11,"ne","","",96,[[["self"],["uint64value"]],["bool"]]],[11,"clone","","",96,[[["self"]],["uint64value"]]],[11,"default","","",96,[[],["uint64value"]]],[11,"new","","",96,[[],["uint64value"]]],[11,"clear_value","","",96,[[["self"]]]],[11,"set_value","","",96,[[["self"],["u64"]]]],[11,"get_value","","",96,[[["self"]],["u64"]]],[11,"is_initialized","","",96,[[["self"]],["bool"]]],[11,"merge_from","","",96,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",96,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",96,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",96,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",96,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",96,[[["self"]],["unknownfields"]]],[11,"as_any","","",96,[[["self"]],["any"]]],[11,"as_any_mut","","",96,[[["self"]],["any"]]],[11,"into_any","","",96,[[["box"]],["box",["any"]]]],[11,"descriptor","","",96,[[["self"]],["messagedescriptor"]]],[11,"new","","",96,[[],["uint64value"]]],[11,"descriptor_static","","",96,[[],["messagedescriptor"]]],[11,"default_instance","","",96,[[],["uint64value"]]],[11,"clear","","",96,[[["self"]]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",96,[[["self"]],["protobufvalueref"]]],[11,"eq","","",97,[[["self"],["int32value"]],["bool"]]],[11,"ne","","",97,[[["self"],["int32value"]],["bool"]]],[11,"clone","","",97,[[["self"]],["int32value"]]],[11,"default","","",97,[[],["int32value"]]],[11,"new","","",97,[[],["int32value"]]],[11,"clear_value","","",97,[[["self"]]]],[11,"set_value","","",97,[[["self"],["i32"]]]],[11,"get_value","","",97,[[["self"]],["i32"]]],[11,"is_initialized","","",97,[[["self"]],["bool"]]],[11,"merge_from","","",97,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",97,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",97,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",97,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",97,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",97,[[["self"]],["unknownfields"]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"into_any","","",97,[[["box"]],["box",["any"]]]],[11,"descriptor","","",97,[[["self"]],["messagedescriptor"]]],[11,"new","","",97,[[],["int32value"]]],[11,"descriptor_static","","",97,[[],["messagedescriptor"]]],[11,"default_instance","","",97,[[],["int32value"]]],[11,"clear","","",97,[[["self"]]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",97,[[["self"]],["protobufvalueref"]]],[11,"eq","","",98,[[["self"],["uint32value"]],["bool"]]],[11,"ne","","",98,[[["self"],["uint32value"]],["bool"]]],[11,"clone","","",98,[[["self"]],["uint32value"]]],[11,"default","","",98,[[],["uint32value"]]],[11,"new","","",98,[[],["uint32value"]]],[11,"clear_value","","",98,[[["self"]]]],[11,"set_value","","",98,[[["self"],["u32"]]]],[11,"get_value","","",98,[[["self"]],["u32"]]],[11,"is_initialized","","",98,[[["self"]],["bool"]]],[11,"merge_from","","",98,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",98,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",98,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",98,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",98,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",98,[[["self"]],["unknownfields"]]],[11,"as_any","","",98,[[["self"]],["any"]]],[11,"as_any_mut","","",98,[[["self"]],["any"]]],[11,"into_any","","",98,[[["box"]],["box",["any"]]]],[11,"descriptor","","",98,[[["self"]],["messagedescriptor"]]],[11,"new","","",98,[[],["uint32value"]]],[11,"descriptor_static","","",98,[[],["messagedescriptor"]]],[11,"default_instance","","",98,[[],["uint32value"]]],[11,"clear","","",98,[[["self"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",98,[[["self"]],["protobufvalueref"]]],[11,"eq","","",99,[[["self"],["boolvalue"]],["bool"]]],[11,"ne","","",99,[[["self"],["boolvalue"]],["bool"]]],[11,"clone","","",99,[[["self"]],["boolvalue"]]],[11,"default","","",99,[[],["boolvalue"]]],[11,"new","","",99,[[],["boolvalue"]]],[11,"clear_value","","",99,[[["self"]]]],[11,"set_value","","",99,[[["self"],["bool"]]]],[11,"get_value","","",99,[[["self"]],["bool"]]],[11,"is_initialized","","",99,[[["self"]],["bool"]]],[11,"merge_from","","",99,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",99,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",99,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",99,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",99,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",99,[[["self"]],["unknownfields"]]],[11,"as_any","","",99,[[["self"]],["any"]]],[11,"as_any_mut","","",99,[[["self"]],["any"]]],[11,"into_any","","",99,[[["box"]],["box",["any"]]]],[11,"descriptor","","",99,[[["self"]],["messagedescriptor"]]],[11,"new","","",99,[[],["boolvalue"]]],[11,"descriptor_static","","",99,[[],["messagedescriptor"]]],[11,"default_instance","","",99,[[],["boolvalue"]]],[11,"clear","","",99,[[["self"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",99,[[["self"]],["protobufvalueref"]]],[11,"eq","","",100,[[["self"],["stringvalue"]],["bool"]]],[11,"ne","","",100,[[["self"],["stringvalue"]],["bool"]]],[11,"clone","","",100,[[["self"]],["stringvalue"]]],[11,"default","","",100,[[],["stringvalue"]]],[11,"new","","",100,[[],["stringvalue"]]],[11,"clear_value","","",100,[[["self"]]]],[11,"set_value","","",100,[[["self"],["string"]]]],[11,"mut_value","","",100,[[["self"]],["string"]]],[11,"take_value","","",100,[[["self"]],["string"]]],[11,"get_value","","",100,[[["self"]],["str"]]],[11,"is_initialized","","",100,[[["self"]],["bool"]]],[11,"merge_from","","",100,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",100,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",100,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",100,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",100,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",100,[[["self"]],["unknownfields"]]],[11,"as_any","","",100,[[["self"]],["any"]]],[11,"as_any_mut","","",100,[[["self"]],["any"]]],[11,"into_any","","",100,[[["box"]],["box",["any"]]]],[11,"descriptor","","",100,[[["self"]],["messagedescriptor"]]],[11,"new","","",100,[[],["stringvalue"]]],[11,"descriptor_static","","",100,[[],["messagedescriptor"]]],[11,"default_instance","","",100,[[],["stringvalue"]]],[11,"clear","","",100,[[["self"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",100,[[["self"]],["protobufvalueref"]]],[11,"eq","","",101,[[["self"],["bytesvalue"]],["bool"]]],[11,"ne","","",101,[[["self"],["bytesvalue"]],["bool"]]],[11,"clone","","",101,[[["self"]],["bytesvalue"]]],[11,"default","","",101,[[],["bytesvalue"]]],[11,"new","","",101,[[],["bytesvalue"]]],[11,"clear_value","","",101,[[["self"]]]],[11,"set_value","","",101,[[["self"],["vec",["u8"]]]]],[11,"mut_value","","",101,[[["self"]],["vec"]]],[11,"take_value","","",101,[[["self"]],["vec",["u8"]]]],[11,"get_value","","",101,N],[11,"is_initialized","","",101,[[["self"]],["bool"]]],[11,"merge_from","","",101,[[["self"],["codedinputstream"]],["protobufresult"]]],[11,"compute_size","","",101,[[["self"]],["u32"]]],[11,"write_to_with_cached_sizes","","",101,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"get_cached_size","","",101,[[["self"]],["u32"]]],[11,"get_unknown_fields","","",101,[[["self"]],["unknownfields"]]],[11,"mut_unknown_fields","","",101,[[["self"]],["unknownfields"]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"into_any","","",101,[[["box"]],["box",["any"]]]],[11,"descriptor","","",101,[[["self"]],["messagedescriptor"]]],[11,"new","","",101,[[],["bytesvalue"]]],[11,"descriptor_static","","",101,[[],["messagedescriptor"]]],[11,"default_instance","","",101,[[],["bytesvalue"]]],[11,"clear","","",101,[[["self"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"as_ref","","",101,[[["self"]],["protobufvalueref"]]],[0,"ext","protobuf","",N,N],[3,"ExtFieldOptional","protobuf::ext","Optional ext field",N,N],[12,"field_number","","",108,N],[12,"phantom","","",108,N],[3,"ExtFieldRepeated","","Repeated ext field",N,N],[12,"field_number","","",109,N],[12,"phantom","","",109,N],[11,"get","","",108,[[["self"],["m"]],["option"]]],[11,"get","","",109,[[["self"],["m"]],["vec"]]],[0,"descriptorx","protobuf","",N,N],[3,"RootScope","protobuf::descriptorx","",N,N],[12,"file_descriptors","","",110,N],[3,"FileScope","","",N,N],[12,"file_descriptor","","",111,N],[3,"Scope","","",N,N],[12,"file_scope","","",112,N],[12,"path","","",112,N],[3,"MessageWithScope","","",N,N],[12,"scope","","",113,N],[12,"message","","",113,N],[3,"EnumWithScope","","",N,N],[12,"scope","","",114,N],[12,"en","","",114,N],[3,"FieldWithContext","","",N,N],[12,"field","","",115,N],[12,"message","","",115,N],[3,"OneofVariantWithContext","","",N,N],[12,"oneof","","",116,N],[12,"field","","",116,N],[3,"OneofWithContext","","",N,N],[12,"oneof","","",117,N],[12,"index","","",117,N],[12,"message","","",117,N],[4,"Syntax","","",N,N],[13,"PROTO2","","",118,N],[13,"PROTO3","","",118,N],[4,"MessageOrEnumWithScope","","",N,N],[13,"Message","","",119,N],[13,"Enum","","",119,N],[5,"proto_path_to_rust_mod","","",N,[[["str"]],["string"]]],[5,"find_message_by_rust_name","","",N,[[["filedescriptorproto"],["str"]],["messagewithscope"]]],[5,"find_enum_by_rust_name","","",N,[[["filedescriptorproto"],["str"]],["enumwithscope"]]],[8,"WithScope","","",N,N],[10,"get_scope","","",120,[[["self"]],["scope"]]],[11,"get_file_descriptor","","",120,[[["self"]],["filedescriptorproto"]]],[10,"get_name","","",120,[[["self"]],["str"]]],[10,"escape_prefix","","",120,[[["self"]],["str"]]],[11,"name_to_package","","",120,[[["self"]],["string"]]],[11,"rust_name","","",120,[[["self"]],["string"]]],[11,"rust_fq_name","","",120,[[["self"]],["string"]]],[8,"EnumValueDescriptorEx","","",N,N],[10,"rust_name","","",121,[[["self"]],["string"]]],[11,"find_enum","","",110,[[["self"],["str"]],["enumwithscope"]]],[11,"find_message","","",110,[[["self"],["str"]],["messagewithscope"]]],[11,"find_message_or_enum","","",110,[[["self"],["str"]],["messageorenumwithscope"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"clone","","",118,[[["self"]],["syntax"]]],[11,"eq","","",118,[[["self"],["syntax"]],["bool"]]],[11,"parse","","",118,[[["str"]],["self"]]],[11,"clone","","",111,[[["self"]],["filescope"]]],[11,"syntax","","",111,[[["self"]],["syntax"]]],[11,"to_scope","","",111,[[["self"]],["scope"]]],[11,"find_enums","","",111,[[["self"]],["vec",["enumwithscope"]]]],[11,"find_messages","","",111,[[["self"]],["vec",["messagewithscope"]]]],[11,"find_messages_and_enums","","",111,[[["self"]],["vec",["messageorenumwithscope"]]]],[11,"clone","","",112,[[["self"]],["scope"]]],[11,"get_file_descriptor","","",112,[[["self"]],["filedescriptorproto"]]],[11,"get_messages","","",112,[[["self"]],["vec",["messagewithscope"]]]],[11,"get_enums","","",112,[[["self"]],["vec",["enumwithscope"]]]],[11,"get_messages_and_enums","","",112,[[["self"]],["vec",["messageorenumwithscope"]]]],[11,"prefix","","",112,[[["self"]],["string"]]],[11,"rust_prefix","","",112,[[["self"]],["string"]]],[11,"clone","","",113,[[["self"]],["messagewithscope"]]],[11,"get_scope","","",113,[[["self"]],["scope"]]],[11,"escape_prefix","","",113,[[["self"]],["str"]]],[11,"get_name","","",113,[[["self"]],["str"]]],[11,"into_scope","","",113,[[["self"]],["scope"]]],[11,"to_scope","","",113,[[["self"]],["scope"]]],[11,"fields","","",113,[[["self"]],["vec",["fieldwithcontext"]]]],[11,"oneofs","","",113,[[["self"]],["vec",["oneofwithcontext"]]]],[11,"oneof_by_index","","",113,[[["self"],["u32"]],["oneofwithcontext"]]],[11,"map_entry","","Pair of (key, value) if this message is map entry",113,[[["self"]],["option"]]],[11,"clone","","",114,[[["self"]],["enumwithscope"]]],[11,"values","","",114,N],[11,"value_by_name","","",114,[[["self"],["str"]],["enumvaluedescriptorproto"]]],[11,"rust_name","protobuf::descriptor","",17,[[["self"]],["string"]]],[11,"get_scope","protobuf::descriptorx","",114,[[["self"]],["scope"]]],[11,"escape_prefix","","",114,[[["self"]],["str"]]],[11,"get_name","","",114,[[["self"]],["str"]]],[11,"get_scope","","",119,[[["self"]],["scope"]]],[11,"escape_prefix","","",119,[[["self"]],["str"]]],[11,"get_name","","",119,[[["self"]],["str"]]],[11,"clone","","",115,[[["self"]],["fieldwithcontext"]]],[11,"oneof","","",115,[[["self"]],["option",["oneofwithcontext"]]]],[11,"number","","",115,[[["self"]],["u32"]]],[11,"name","","Shortcut",115,[[["self"]],["str"]]],[11,"rust_name","","",115,[[["self"]],["string"]]],[11,"containing_messages","","",115,[[["self"]],["vec",["descriptorproto"]]]],[11,"clone","","",116,[[["self"]],["oneofvariantwithcontext"]]],[11,"clone","","",117,[[["self"]],["oneofwithcontext"]]],[11,"name","","",117,[[["self"]],["str"]]],[11,"rust_name","","",117,[[["self"]],["string"]]],[11,"variants","","",117,[[["self"]],["vec",["oneofvariantwithcontext"]]]],[11,"fmt","protobuf","",2,[[["self"],["formatter"]],["result"]]],[11,"wire_type","","",2,[[["self"]],["wiretype"]]],[11,"get_ref","","",2,[[["self"]],["unknownvalueref"]]],[11,"wire_type","","",3,[[["self"]],["wiretype"]]],[11,"clone","","",1,[[["self"]],["unknownvalues"]]],[11,"eq","","",1,[[["self"],["unknownvalues"]],["bool"]]],[11,"ne","","",1,[[["self"],["unknownvalues"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"default","","",1,[[],["unknownvalues"]]],[11,"add_value","","",1,[[["self"],["unknownvalue"]]]],[11,"iter","","",1,[[["self"]],["unknownvaluesiter"]]],[11,"next","","",122,[[["self"]],["option",["unknownvalueref"]]]],[11,"clone","","",0,[[["self"]],["unknownfields"]]],[11,"eq","","",0,[[["self"],["unknownfields"]],["bool"]]],[11,"ne","","",0,[[["self"],["unknownfields"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"default","","",0,[[],["unknownfields"]]],[11,"new","","",0,[[],["unknownfields"]]],[11,"add_fixed32","","",0,[[["self"],["u32"],["u32"]]]],[11,"add_fixed64","","",0,[[["self"],["u32"],["u64"]]]],[11,"add_varint","","",0,[[["self"],["u32"],["u64"]]]],[11,"add_length_delimited","","",0,[[["self"],["u32"],["vec",["u8"]]]]],[11,"add_value","","",0,[[["self"],["u32"],["unknownvalue"]]]],[11,"iter","","",0,[[["self"]],["unknownfieldsiter"]]],[11,"get","","",0,[[["self"],["u32"]],["option",["unknownvalues"]]]],[11,"clear","","",0,[[["self"]]]],[11,"next","","",123,[[["self"]],["option"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"default","","",124,[[],["cachedsize"]]],[11,"get","","",124,[[["self"]],["u32"]]],[11,"set","","",124,[[["self"],["u32"]]]],[11,"clone","","",124,[[["self"]],["cachedsize"]]],[11,"eq","","",124,[[["self"],["cachedsize"]],["bool"]]],[8,"Clear","","anything that can be cleared",N,N],[10,"clear","","Clear this make, make it equivalent to newly created object.",125,[[["self"]]]],[8,"Message","","Trait implemented for all generated structs for protobuf messages. Also, generated messages implement `Clone + Default + PartialEq`",N,N],[10,"descriptor","","Message descriptor for this message, used for reflection.",126,[[["self"]],["messagedescriptor"]]],[10,"is_initialized","","True iff all required fields are initialized. Always returns `true` for protobuf 3.",126,[[["self"]],["bool"]]],[10,"merge_from","","Update this message object with fields read from given stream.",126,[[["self"],["codedinputstream"]],["protobufresult"]]],[10,"write_to_with_cached_sizes","","Write message to the stream.",126,[[["self"],["codedoutputstream"]],["protobufresult"]]],[10,"compute_size","","Compute and cache size of this message and all nested messages",126,[[["self"]],["u32"]]],[10,"get_cached_size","","Get size previously computed by `compute_size`.",126,[[["self"]],["u32"]]],[11,"write_to","","Write the message to the stream.",126,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"write_length_delimited_to","","Write the message to the stream prepending the message with message length encoded as varint.",126,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"write_length_delimited_to_vec","","Write the message to the vec, prepend the message with message length encoded as varint.",126,[[["self"],["vec"]],["protobufresult"]]],[11,"merge_from_bytes","","Update this message object with fields read from given stream.",126,N],[11,"check_initialized","","Check if all required fields of this object are initialized.",126,[[["self"]],["protobufresult"]]],[11,"write_to_writer","","Write the message to the writer.",126,[[["self"],["write"]],["protobufresult"]]],[11,"write_to_vec","","Write the message to bytes vec.",126,[[["self"],["vec"]],["protobufresult"]]],[11,"write_to_bytes","","Write the message to bytes vec.",126,[[["self"]],["protobufresult",["vec"]]]],[11,"write_length_delimited_to_writer","","Write the message to the writer, prepend the message with message length encoded as varint.",126,[[["self"],["write"]],["protobufresult"]]],[11,"write_length_delimited_to_bytes","","Write the message to the bytes vec, prepend the message with message length encoded as varint.",126,[[["self"]],["protobufresult",["vec"]]]],[10,"get_unknown_fields","","Get a reference to unknown fields.",126,[[["self"]],["unknownfields"]]],[10,"mut_unknown_fields","","Get a mutable reference to unknown fields.",126,[[["self"]],["unknownfields"]]],[11,"type_id","","Get type id for downcasting.",126,[[["self"]],["typeid"]]],[10,"as_any","","View self as `Any`.",126,[[["self"]],["any"]]],[11,"as_any_mut","","View self as mutable `Any`.",126,[[["self"]],["any"]]],[11,"into_any","","Convert boxed self to boxed `Any`.",126,[[["box"]],["box",["any"]]]],[10,"new","","Create an empty message object.",126,[[],["self"]]],[11,"descriptor_static","","Get message descriptor for message type.",126,[[],["messagedescriptor"]]],[10,"default_instance","","Return a pointer to default immutable message.",126,[[],["self"]]],[8,"ProtobufEnum","","Trait implemented by all protobuf enum types.",N,N],[10,"value","","Get enum `i32` value.",127,[[["self"]],["i32"]]],[10,"from_i32","","Try to create an enum from `i32` value. Return `None` if value is unknown.",127,[[["i32"]],["option"]]],[11,"values","","Get all enum values for enum type.",127,N],[11,"descriptor","","Get enum value descriptor.",127,[[["self"]],["enumvaluedescriptor"]]],[11,"enum_descriptor","","Get enum descriptor.",127,[[["self"]],["enumdescriptor"]]],[11,"enum_descriptor_static","","Get enum descriptor by type.",127,[[],["enumdescriptor"]]],[11,"into","protobuf::descriptor","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","protobuf::plugin","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"write_to","protobuf","Write the message to the stream.",126,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"write_length_delimited_to","","Write the message to the stream prepending the message with message length encoded as varint.",126,[[["self"],["codedoutputstream"]],["protobufresult"]]],[11,"write_length_delimited_to_vec","","Write the message to the vec, prepend the message with message length encoded as varint.",126,[[["self"],["vec"]],["protobufresult"]]],[11,"merge_from_bytes","","Update this message object with fields read from given stream.",126,N],[11,"check_initialized","","Check if all required fields of this object are initialized.",126,[[["self"]],["protobufresult"]]],[11,"write_to_writer","","Write the message to the writer.",126,[[["self"],["write"]],["protobufresult"]]],[11,"write_to_vec","","Write the message to bytes vec.",126,[[["self"],["vec"]],["protobufresult"]]],[11,"write_to_bytes","","Write the message to bytes vec.",126,[[["self"]],["protobufresult",["vec"]]]],[11,"write_length_delimited_to_writer","","Write the message to the writer, prepend the message with message length encoded as varint.",126,[[["self"],["write"]],["protobufresult"]]],[11,"write_length_delimited_to_bytes","","Write the message to the bytes vec, prepend the message with message length encoded as varint.",126,[[["self"]],["protobufresult",["vec"]]]],[11,"type_id","","Get type id for downcasting.",126,[[["self"]],["typeid"]]],[11,"as_any_mut","","View self as mutable `Any`.",126,[[["self"]],["any"]]],[11,"into_any","","Convert boxed self to boxed `Any`.",126,[[["box"]],["box",["any"]]]],[11,"descriptor_static","","Get message descriptor for message type.",126,[[],["messagedescriptor"]]],[11,"values","","Get all enum values for enum type.",127,N],[11,"descriptor","","Get enum value descriptor.",127,[[["self"]],["enumvaluedescriptor"]]],[11,"enum_descriptor","","Get enum descriptor.",127,[[["self"]],["enumdescriptor"]]],[11,"enum_descriptor_static","","Get enum descriptor by type.",127,[[],["enumdescriptor"]]],[11,"into","protobuf::lazy","",39,[[["self"]],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","protobuf::reflect","",47,[[["self"]],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"is_non_zero","","",46,[[["self"]],["bool"]]],[11,"as_ref_copy","","",46,[[["self"]],["protobufvalueref"]]],[11,"into","protobuf::stream","",55,[[["self"]],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","protobuf::stream::wire_format","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","protobuf::error","",57,[[["self"]],["u"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","protobuf::types","",60,[[["self"]],["u"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into","protobuf::ext","",108,[[["self"]],["u"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"into","protobuf::descriptorx","",110,[[["self"]],["u"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]]],"paths":[[3,"UnknownFields"],[3,"UnknownValues"],[4,"UnknownValue"],[4,"UnknownValueRef"],[4,"FieldDescriptorProto_Type"],[4,"FieldDescriptorProto_Label"],[4,"FileOptions_OptimizeMode"],[4,"FieldOptions_CType"],[4,"FieldOptions_JSType"],[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"DescriptorProto_ExtensionRange"],[3,"DescriptorProto_ReservedRange"],[3,"FieldDescriptorProto"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[3,"MessageOptions"],[3,"FieldOptions"],[3,"OneofOptions"],[3,"EnumOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[3,"UninterpretedOption"],[3,"UninterpretedOption_NamePart"],[3,"SourceCodeInfo"],[3,"SourceCodeInfo_Location"],[3,"GeneratedCodeInfo"],[3,"GeneratedCodeInfo_Annotation"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[3,"CodeGeneratorResponse_File"],[8,"ProtobufVarint"],[8,"ProtobufVarintZigzag"],[3,"Lazy"],[3,"RepeatedField"],[3,"SingularField"],[3,"SingularPtrField"],[4,"ProtobufValueRef"],[4,"ReflectFieldRef"],[8,"FieldAccessor"],[8,"ProtobufValue"],[3,"FieldDescriptor"],[3,"MessageDescriptor"],[3,"EnumValueDescriptor"],[3,"EnumDescriptor"],[4,"WireType"],[3,"Tag"],[8,"WithCodedOutputStream"],[8,"WithCodedInputStream"],[3,"CodedInputStream"],[3,"CodedOutputStream"],[4,"WireError"],[4,"ProtobufError"],[8,"ProtobufType"],[3,"ProtobufTypeFloat"],[3,"ProtobufTypeDouble"],[3,"ProtobufTypeInt32"],[3,"ProtobufTypeInt64"],[3,"ProtobufTypeUint32"],[3,"ProtobufTypeUint64"],[3,"ProtobufTypeSint32"],[3,"ProtobufTypeSint64"],[3,"ProtobufTypeFixed32"],[3,"ProtobufTypeFixed64"],[3,"ProtobufTypeSfixed32"],[3,"ProtobufTypeSfixed64"],[3,"ProtobufTypeBool"],[3,"ProtobufTypeString"],[3,"ProtobufTypeBytes"],[3,"ProtobufTypeEnum"],[3,"ProtobufTypeMessage"],[3,"Any"],[3,"Api"],[3,"Method"],[3,"Mixin"],[3,"Duration"],[3,"FieldMask"],[3,"SourceContext"],[3,"Struct"],[3,"Value"],[3,"ListValue"],[3,"Timestamp"],[3,"Type"],[3,"Field"],[3,"Enum"],[3,"EnumValue"],[3,"Option"],[3,"DoubleValue"],[3,"FloatValue"],[3,"Int64Value"],[3,"UInt64Value"],[3,"Int32Value"],[3,"UInt32Value"],[3,"BoolValue"],[3,"StringValue"],[3,"BytesValue"],[4,"Value_oneof_kind"],[4,"NullValue"],[4,"Field_Kind"],[4,"Field_Cardinality"],[4,"Syntax"],[3,"Empty"],[3,"ExtFieldOptional"],[3,"ExtFieldRepeated"],[3,"RootScope"],[3,"FileScope"],[3,"Scope"],[3,"MessageWithScope"],[3,"EnumWithScope"],[3,"FieldWithContext"],[3,"OneofVariantWithContext"],[3,"OneofWithContext"],[4,"Syntax"],[4,"MessageOrEnumWithScope"],[8,"WithScope"],[8,"EnumValueDescriptorEx"],[3,"UnknownValuesIter"],[3,"UnknownFieldsIter"],[3,"CachedSize"],[8,"Clear"],[8,"Message"],[8,"ProtobufEnum"],[3,"ProtobufTypeChars"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust syntax tree data structures into tokens of source code.","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending tokens.",N,N],[10,"append","","",0,[[["self"],["u"]]]],[10,"append_all","","",0,[[["self"],["i"]]]],[10,"append_separated","","",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`] invocation.",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rust_cast"]={"doc":"","items":[[3,"CastDevice","rust_cast","Structure that manages connection to a cast device.",N,N],[12,"connection","","Channel that manages connection responses/requests.",0,N],[12,"heartbeat","","Channel that allows connection to stay alive (via ping-pong requests/responses).",0,N],[12,"media","","Channel that manages various media stuff.",0,N],[12,"receiver","","Channel that manages receiving platform (e.g. Chromecast).",0,N],[4,"ChannelMessage","","Supported channel message types.",N,N],[13,"Connection","","Message to be processed by `ConnectionChannel`.",1,N],[13,"Heartbeat","","Message to be processed by `HeartbeatChannel`.",1,N],[13,"Media","","Message to be processed by `MediaChannel`.",1,N],[13,"Receiver","","Message to be processed by `ReceiverChannel`.",1,N],[13,"Raw","","Raw message is returned when built-in channels can't process it (e.g. because of unknown `namespace`).",1,N],[0,"channels","","",N,N],[0,"connection","rust_cast::channels","",N,N],[3,"ConnectionChannel","rust_cast::channels::connection","",N,N],[4,"ConnectionResponse","","",N,N],[13,"Connect","","",2,N],[13,"Close","","",2,N],[13,"NotImplemented","","",2,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"new","","",3,[[["s"],["rc",["messagemanager"]]],["connectionchannel"]]],[11,"connect","","",3,[[["self"],["s"]],["result",["error"]]]],[11,"disconnect","","",3,[[["self"],["s"]],["result",["error"]]]],[11,"can_handle","","",3,[[["self"],["castmessage"]],["bool"]]],[11,"parse","","",3,[[["self"],["castmessage"]],["result",["connectionresponse","error"]]]],[0,"heartbeat","rust_cast::channels","",N,N],[3,"HeartbeatChannel","rust_cast::channels::heartbeat","",N,N],[4,"HeartbeatResponse","","",N,N],[13,"Ping","","",4,N],[13,"Pong","","",4,N],[13,"NotImplemented","","",4,N],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"new","","",5,[[["s"],["s"],["rc",["messagemanager"]]],["heartbeatchannel"]]],[11,"ping","","",5,[[["self"]],["result",["error"]]]],[11,"pong","","",5,[[["self"]],["result",["error"]]]],[11,"can_handle","","",5,[[["self"],["castmessage"]],["bool"]]],[11,"parse","","",5,[[["self"],["castmessage"]],["result",["heartbeatresponse","error"]]]],[0,"media","rust_cast::channels","",N,N],[3,"GenericMediaMetadata","rust_cast::channels::media","Generic media metadata.",N,N],[12,"title","","Descriptive title of the content.",6,N],[12,"subtitle","","Descriptive subtitle of the content.",6,N],[12,"images","","Zero or more URLs to an image associated with the content.",6,N],[12,"release_date","","Date and time the content was released, formatted as ISO 8601.",6,N],[3,"MovieMediaMetadata","","Movie media metadata.",N,N],[12,"title","","Title of the movie.",7,N],[12,"subtitle","","Subtitle of the movie.",7,N],[12,"studio","","Studio which released the movie.",7,N],[12,"images","","Zero or more URLs to an image associated with the content.",7,N],[12,"release_date","","Date and time the movie was released, formatted as ISO 8601.",7,N],[3,"TvShowMediaMetadata","","TV show media metadata.",N,N],[12,"series_title","","Title of the TV series.",8,N],[12,"episode_title","","Title of the episode.",8,N],[12,"season","","Season number of the TV show.",8,N],[12,"episode","","Episode number (in the season) of the episode.",8,N],[12,"images","","Zero or more URLs to an image associated with the content.",8,N],[12,"original_air_date","","Date and time this episode was released, formatted as ISO 8601.",8,N],[3,"MusicTrackMediaMetadata","","Music track media metadata.",N,N],[12,"album_name","","Album or collection from which the track is taken.",9,N],[12,"title","","Name of the track (for example, song title).",9,N],[12,"album_artist","","Name of the artist associated with the album featuring this track.",9,N],[12,"artist","","Name of the artist associated with the track.",9,N],[12,"composer","","Name of the composer associated with the track.",9,N],[12,"track_number","","Number of the track on the album.",9,N],[12,"disc_number","","Number of the volume (for example, a disc) of the album.",9,N],[12,"images","","Zero or more URLs to an image associated with the content.",9,N],[12,"release_date","","Date and time the content was released, formatted as ISO 8601.",9,N],[3,"PhotoMediaMetadata","","Photo media metadata.",N,N],[12,"title","","Title of the photograph.",10,N],[12,"artist","","Name of the photographer.",10,N],[12,"location","","Verbal location where the photograph was taken, for example “Madrid, Spain”.",10,N],[12,"latitude_longitude","","Latitude and longitude of the location where the photograph was taken.",10,N],[12,"dimensions","","Width and height of the photograph in pixels.",10,N],[12,"creation_date_time","","Date and time the photograph was taken, formatted as ISO 8601.",10,N],[3,"Image","","Image URL and optionally size metadata.",N,N],[12,"url","","URL of the image.",11,N],[12,"dimensions","","Width and height of the image.",11,N],[3,"Media","","This data structure describes a media stream.",N,N],[12,"content_id","","Service-specific identifier of the content currently loaded by the media player. This is a free form string and is specific to the application. In most cases, this will be the URL to the media, but the sender can choose to pass a string that the receiver can interpret properly. Max length: 1k.",12,N],[12,"stream_type","","Describes the type of media artifact.",12,N],[12,"content_type","","MIME content type of the media being played.",12,N],[12,"metadata","","Generic, movie, TV show, music track, or photo metadata.",12,N],[12,"duration","","Duration of the currently playing stream in seconds.",12,N],[3,"Status","","Describes the current status of the media artifact with respect to the session.",N,N],[12,"request_id","","Unique id of the request that requested the status.",13,N],[12,"entries","","Detailed status of every media status entry.",13,N],[3,"StatusEntry","","Detailed status of the media artifact with respect to the session.",N,N],[12,"media_session_id","","Unique ID for the playback of this specific session. This ID is set by the receiver at LOAD and can be used to identify a specific instance of a playback. For example, two playbacks of \"Wish you were here\" within the same session would each have a unique mediaSessionId.",14,N],[12,"media","","Full description of the content that is being played back. Only be returned in a status messages if the Media has changed.",14,N],[12,"playback_rate","","Indicates whether the media time is progressing, and at what rate. This is independent of the player state since the media time can stop in any state. 1.0 is regular time, 0.5 is slow motion.",14,N],[12,"player_state","","Describes the state of the player.",14,N],[12,"idle_reason","","If the player_state is IDLE and the reason it became IDLE is known, this property is provided. If the player is IDLE because it just started, this property will not be provided. If the player is in any other state this property should not be provided.",14,N],[12,"current_time","","The current position of the media player since the beginning of the content, in seconds. If this a live stream content, then this field represents the time in seconds from the beginning of the event that should be known to the player.",14,N],[12,"supported_media_commands","","Flags describing which media commands the media player supports: * `1` `Pause`; * `2` `Seek`; * `4` `Stream volume`; * `8` `Stream mute`; * `16` `Skip forward`; * `32` `Skip backward`. Combinations are described as summations; for example, Pause+Seek+StreamVolume+Mute == 15.",14,N],[3,"LoadCancelled","","Describes the load cancelled error.",N,N],[12,"request_id","","Unique id of the request that caused this error.",15,N],[3,"LoadFailed","","Describes the load failed error.",N,N],[12,"request_id","","Unique id of the request that caused this error.",16,N],[3,"InvalidPlayerState","","Describes the invalid player state error.",N,N],[12,"request_id","","Unique id of the request that caused this error.",17,N],[3,"InvalidRequest","","Describes the invalid request error.",N,N],[12,"request_id","","Unique id of the invalid request.",18,N],[12,"reason","","Description of the invalid request reason if available.",18,N],[3,"MediaChannel","","",N,N],[4,"StreamType","","Describes the way cast device should stream content.",N,N],[13,"None","","This variant allows cast device to automatically choose whatever way it's most comfortable with.",19,N],[13,"Buffered","","Cast device should buffer some portion of the content and only then start streaming.",19,N],[13,"Live","","Cast device should display content as soon as it gets any portion of it.",19,N],[4,"Metadata","","Generic, movie, TV show, music track, or photo metadata.",N,N],[13,"Generic","","",20,N],[13,"Movie","","",20,N],[13,"TvShow","","",20,N],[13,"MusicTrack","","",20,N],[13,"Photo","","",20,N],[4,"PlayerState","","Describes possible player states.",N,N],[13,"Idle","","Player has not been loaded yet.",21,N],[13,"Playing","","Player is actively playing content.",21,N],[13,"Buffering","","Player is in PLAY mode but not actively playing content (currentTime is not changing).",21,N],[13,"Paused","","Player is paused.",21,N],[4,"IdleReason","","Describes possible player idle reasons.",N,N],[13,"Cancelled","","A sender requested to stop playback using the STOP command.",22,N],[13,"Interrupted","","A sender requested playing a different media using the LOAD command.",22,N],[13,"Finished","","The media playback completed.",22,N],[13,"Error","","The media was interrupted due to an error; For example, if the player could not download the media due to network issues.",22,N],[4,"ResumeState","","Describes the operation to perform with playback while seeking.",N,N],[13,"PlaybackStart","","Forces media to start.",23,N],[13,"PlaybackPause","","Forces media to pause.",23,N],[4,"MediaResponse","","Represents all currently supported incoming messages that media channel can handle.",N,N],[13,"Status","","Statuses of the currently active media.",24,N],[13,"LoadCancelled","","Sent when the load request was cancelled (a second load request was received).",24,N],[13,"LoadFailed","","Sent when the load request failed. The player state will be IDLE.",24,N],[13,"InvalidPlayerState","","Sent when the request by the sender can not be fulfilled because the player is not in a valid state. For example, if the application has not created a media element yet.",24,N],[13,"InvalidRequest","","Error indicating that request is not valid.",24,N],[13,"NotImplemented","","Used every time when channel can't parse the message. Associated data contains `type` string field and raw JSON data returned from cast device.",24,N],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",19,[[["str"]],["result",["streamtype","error"]]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"new","","",11,[[["string"]],["image"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",21,[[["str"]],["result",["playerstate","error"]]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",22,[[["str"]],["result",["idlereason","error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",23,[[["str"]],["result",["resumestate","error"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"new","","",25,[[["s"],["rc",["messagemanager"]]],["mediachannel"]]],[11,"get_status","","Retrieves status of the cast device media session.",25,[[["self"],["s"],["option",["i32"]]],["result",["status","error"]]]],[11,"load","","Loads provided media to the application.",25,[[["self"],["s"],["s"],["media"]],["result",["status","error"]]]],[11,"pause","","Pauses playback of the current content. Triggers a STATUS event notification to all sender applications.",25,[[["self"],["s"],["i32"]],["result",["statusentry","error"]]]],[11,"play","","Begins playback of the content that was loaded with the load call, playback is continued from the current time position.",25,[[["self"],["s"],["i32"]],["result",["statusentry","error"]]]],[11,"stop","","Stops playback of the current content. Triggers a STATUS event notification to all sender applications. After this command the content will no longer be loaded and the media_session_id is invalidated.",25,[[["self"],["s"],["i32"]],["result",["statusentry","error"]]]],[11,"seek","","Sets the current position in the stream. Triggers a STATUS event notification to all sender applications. If the position provided is outside the range of valid positions for the current content, then the player should pick a valid position as close to the requested position as possible.",25,[[["self"],["s"],["i32"],["option",["f32"]],["option",["resumestate"]]],["result",["statusentry","error"]]]],[11,"can_handle","","",25,[[["self"],["castmessage"]],["bool"]]],[11,"parse","","",25,[[["self"],["castmessage"]],["result",["mediaresponse","error"]]]],[0,"receiver","rust_cast::channels","",N,N],[3,"Volume","rust_cast::channels::receiver","Structure that describes possible cast device volume options.",N,N],[12,"level","","Volume level.",26,N],[12,"muted","","Mute/unmute state.",26,N],[3,"Application","","Structure that describes currently run Cast Device application.",N,N],[12,"app_id","","The identifier of the Cast application. Not for display.",27,N],[12,"session_id","","Session id of the currently active application.",27,N],[12,"transport_id","","Name of the `pipe` to talk to the application.",27,N],[12,"namespaces","","A list of the namespaces supported by the receiver application.",27,N],[12,"display_name","","The human-readable name of the Cast application, for example, \"YouTube\".",27,N],[12,"status_text","","Descriptive text for the current application content, for example “My vacations”.",27,N],[3,"Status","","Describes the current status of the receiver cast device.",N,N],[12,"request_id","","Unique id of the request that requested the status.",28,N],[12,"applications","","Contains the list of applications that are currently run.",28,N],[12,"is_active_input","","Determines whether the Cast device is the active input or not.",28,N],[12,"is_stand_by","","Determines whether the Cast device is in stand by mode.",28,N],[12,"volume","","Volume parameters of the currently active cast device.",28,N],[3,"LaunchError","","Describes the application launch error.",N,N],[12,"request_id","","Unique id of the request that tried to launch application.",29,N],[12,"reason","","Description of the launch error reason if available.",29,N],[3,"InvalidRequest","","Describes the invalid request error.",N,N],[12,"request_id","","Unique id of the invalid request.",30,N],[12,"reason","","Description of the invalid request reason if available.",30,N],[3,"ReceiverChannel","","",N,N],[4,"ReceiverResponse","","Represents all currently supported incoming messages that receiver channel can handle.",N,N],[13,"Status","","Status of the currently active receiver.",31,N],[13,"LaunchError","","Error indicating that receiver failed to launch application.",31,N],[13,"InvalidRequest","","Error indicating that request is not valid.",31,N],[13,"NotImplemented","","Used every time when channel can't parse the message. Associated data contains `type` string field and raw JSON data returned from cast device.",31,N],[4,"CastDeviceApp","","",N,N],[13,"DefaultMediaReceiver","","",32,N],[13,"Backdrop","","",32,N],[13,"YouTube","","",32,N],[13,"Custom","","",32,N],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"eq","","",32,[[["self"],["castdeviceapp"]],["bool"]]],[11,"ne","","",32,[[["self"],["castdeviceapp"]],["bool"]]],[11,"clone","","",32,[[["self"]],["castdeviceapp"]]],[11,"from_str","","",32,[[["str"]],["result",["castdeviceapp"]]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"new","","",33,[[["s"],["s"],["rc",["messagemanager"]]],["receiverchannel"]]],[11,"launch_app","","Launches the specified receiver's application.",33,[[["self"],["castdeviceapp"]],["result",["application","error"]]]],[11,"stop_app","","Stops currently active app using corresponding `session_id`.",33,[[["self"],["s"]],["result",["error"]]]],[11,"get_status","","Retrieves status of the cast device receiver.",33,[[["self"]],["result",["status","error"]]]],[11,"set_volume","","Sets volume for the active cast device.",33,[[["self"],["t"]],["result",["volume","error"]]]],[11,"can_handle","","",33,[[["self"],["castmessage"]],["bool"]]],[11,"parse","","",33,[[["self"],["castmessage"]],["result",["receiverresponse","error"]]]],[0,"errors","rust_cast","",N,N],[4,"SslError","rust_cast::errors","Consolidates possible error types that can occur in the OpenSSL lib.",N,N],[13,"Generic","","This variant includes everything related to the existing SSL connection.",34,N],[13,"Handshake","","This variant describes an error or intermediate state after a TLS handshake attempt.",34,N],[4,"Error","","Consolidates possible error types that can occur in the lib.",N,N],[13,"Internal","","This variant is used when error occurs in the lib logic.",35,N],[13,"Io","","This variant includes everything related to the network connection.",35,N],[13,"Protobuf","","This variant includes all possible errors that come from Protobuf layer.",35,N],[13,"Serialization","","This variant includes everything related to (de)serialization of incoming and outgoing messages.",35,N],[13,"Ssl","","This variant includes any error that comes from OpenSSL.",35,N],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"description","","",34,[[["self"]],["str"]]],[11,"cause","","",34,[[["self"]],["option",["stderror"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"description","","",35,[[["self"]],["str"]]],[11,"cause","","",35,[[["self"]],["option",["stderror"]]]],[11,"from","","",35,[[["ioerror"]],["error"]]],[11,"from","","",35,[[["protobuferror"]],["error"]]],[11,"from","","",35,[[["serializationerror"]],["error"]]],[11,"from","","",35,[[["errorstack"]],["error"]]],[11,"from","","",35,[[["handshakeerror",["tcpstream"]]],["error"]]],[0,"message_manager","rust_cast","",N,N],[3,"CastMessage","rust_cast::message_manager","Base structure that represents messages that are exchanged between Receiver and Sender.",N,N],[12,"namespace","","A namespace is a labeled protocol. That is, messages that are exchanged throughout the Cast ecosystem utilize namespaces to identify the protocol of the message being sent.",36,N],[12,"source","","Unique identifier of the `sender` application.",36,N],[12,"destination","","Unique identifier of the `receiver` application.",36,N],[12,"payload","","Payload data attached to the message (either string or binary).",36,N],[3,"MessageManager","","Static structure that is responsible for (de)serializing and sending/receiving Cast protocol messages.",N,N],[4,"CastMessagePayload","","Type of the payload that `CastMessage` can have.",N,N],[13,"String","","Payload represented by UTF-8 string (usually it's just a JSON string).",37,N],[13,"Binary","","Payload represented by binary data.",37,N],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"clone","","",37,[[["self"]],["castmessagepayload"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"clone","","",36,[[["self"]],["castmessage"]]],[11,"new","","",38,[[["s"]],["self"]]],[11,"send","","Sends `message` to the Cast Device.",38,[[["self"],["castmessage"]],["result",["error"]]]],[11,"receive","","Waits for the next `CastMessage` available. Can also return existing message from the internal message buffer containing messages that have been received previously, but haven't been consumed for some reason (e.g. during `receive_find_map` call).",38,[[["self"]],["result",["castmessage","error"]]]],[11,"receive_find_map","","Waits for the next `CastMessage` for which `f` returns valid mapped value. Messages in which `f` is not interested are placed into internal message buffer and can be later retrieved with `receive`. This method always reads from the stream.",38,[[["self"],["f"]],["result",["error"]]]],[11,"generate_request_id","","Generates unique integer number that is used in some requests to map them with the response.",38,[[["self"]],["i32"]]],[11,"connect","rust_cast","Connects to the cast device using host name and port.",0,[[["s"],["u16"]],["result",["castdevice","error"]]]],[11,"connect_without_host_verification","","Connects to the cast device using host name and port without host verification. Use on your own risk!",0,[[["s"],["u16"]],["result",["castdevice","error"]]]],[11,"receive","","Waits for any message returned by cast device (e.g. Chromecast) and returns its parsed version.",0,[[["self"]],["result",["channelmessage","error"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","rust_cast::channels::connection","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","rust_cast::channels::heartbeat","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","rust_cast::channels::media","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","rust_cast::channels::receiver","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","rust_cast::errors","",34,[[["self"]],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","rust_cast::message_manager","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]]],"paths":[[3,"CastDevice"],[4,"ChannelMessage"],[4,"ConnectionResponse"],[3,"ConnectionChannel"],[4,"HeartbeatResponse"],[3,"HeartbeatChannel"],[3,"GenericMediaMetadata"],[3,"MovieMediaMetadata"],[3,"TvShowMediaMetadata"],[3,"MusicTrackMediaMetadata"],[3,"PhotoMediaMetadata"],[3,"Image"],[3,"Media"],[3,"Status"],[3,"StatusEntry"],[3,"LoadCancelled"],[3,"LoadFailed"],[3,"InvalidPlayerState"],[3,"InvalidRequest"],[4,"StreamType"],[4,"Metadata"],[4,"PlayerState"],[4,"IdleReason"],[4,"ResumeState"],[4,"MediaResponse"],[3,"MediaChannel"],[3,"Volume"],[3,"Application"],[3,"Status"],[3,"LaunchError"],[3,"InvalidRequest"],[4,"ReceiverResponse"],[4,"CastDeviceApp"],[3,"ReceiverChannel"],[4,"SslError"],[4,"Error"],[3,"CastMessage"],[4,"CastMessagePayload"],[3,"MessageManager"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any one of the `Visitor` trait methods.",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",0,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that was not expected.",0,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or `i64` that was not expected.",0,N],[13,"Float","","The input contained a floating point `f32` or `f64` that was not expected.",0,N],[13,"Char","","The input contained a `char` that was not expected.",0,N],[13,"Str","","The input contained a `&str` or `String` that was not expected.",0,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not expected.",0,N],[13,"Unit","","The input contained a unit `()` that was not expected.",0,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,N],[13,"Seq","","The input contained a sequence that was not expected.",0,N],[13,"Map","","The input contained a map that was not expected.",0,N],[13,"Enum","","The input contained an enum that was not expected.",0,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,N],[13,"Other","","A message stating what uncategorized thing the input contained that was not expected.",0,N],[0,"value","","Building blocks for deserializing basic values using the `IntoDeserializer` trait.",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can occur using the `IntoDeserializer` trait.",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"I128Deserializer","","A deserializer holding an `i128`.",N,N],[3,"U128Deserializer","","A deserializer holding a `u128`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to another deserializer.",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to another deserializer.",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"clone","","",1,[[["self"]],["error"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"custom","","",1,[[["t"]],["self"]]],[11,"custom","","",1,[[["t"]],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_enum","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"deserialize_bool","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",3,N],[11,"deserialize_enum","","",3,N],[11,"deserialize_identifier","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["self"],["v"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"deserialize_bool","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",5,N],[11,"deserialize_enum","","",5,N],[11,"deserialize_identifier","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",5,[[["self"],["v"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"deserialize_bool","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",6,N],[11,"deserialize_enum","","",6,N],[11,"deserialize_identifier","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",6,[[["self"],["v"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["self"]]],[11,"deserialize_bool","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",7,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",7,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",7,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",7,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",7,N],[11,"deserialize_enum","","",7,N],[11,"deserialize_identifier","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",7,[[["self"],["v"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"deserialize_bool","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",8,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",8,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",8,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",8,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",8,N],[11,"deserialize_enum","","",8,N],[11,"deserialize_identifier","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",8,[[["self"],["v"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"deserialize_bool","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",9,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",9,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",9,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",9,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",9,N],[11,"deserialize_enum","","",9,N],[11,"deserialize_identifier","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",9,[[["self"],["v"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["self"]]],[11,"deserialize_bool","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",10,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",10,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",10,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",10,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",10,N],[11,"deserialize_enum","","",10,N],[11,"deserialize_identifier","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",10,[[["self"],["v"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"deserialize_bool","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",11,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",11,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",11,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",11,N],[11,"deserialize_enum","","",11,N],[11,"deserialize_identifier","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",11,[[["self"],["v"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["self"]]],[11,"deserialize_bool","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",12,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",12,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",12,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",12,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",12,N],[11,"deserialize_enum","","",12,N],[11,"deserialize_identifier","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",12,[[["self"],["v"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"deserialize_bool","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",13,N],[11,"deserialize_enum","","",13,N],[11,"deserialize_identifier","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",13,[[["self"],["v"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"deserialize_bool","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",14,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",14,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",14,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",14,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",14,N],[11,"deserialize_enum","","",14,N],[11,"deserialize_identifier","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",14,[[["self"],["v"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"deserialize_bool","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",15,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",15,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",15,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",15,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",15,N],[11,"deserialize_enum","","",15,N],[11,"deserialize_identifier","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",15,[[["self"],["v"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"clone","","",16,[[["self"]],["self"]]],[11,"deserialize_bool","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",16,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",16,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",16,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",16,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",16,N],[11,"deserialize_enum","","",16,N],[11,"deserialize_identifier","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",16,[[["self"],["v"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"deserialize_bool","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",17,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",17,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",17,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",17,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",17,N],[11,"deserialize_enum","","",17,N],[11,"deserialize_identifier","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",17,[[["self"],["v"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"deserialize_bool","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",18,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",18,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",18,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",18,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",18,N],[11,"deserialize_identifier","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",18,N],[11,"variant_seed","","",18,[[["self"],["t"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"deserialize_any","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",19,N],[11,"deserialize_bool","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",19,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",19,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",19,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",19,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",19,N],[11,"deserialize_identifier","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",19,[[["self"],["v"]],["result"]]],[11,"variant_seed","","",19,[[["self"],["t"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"new","","Create a new borrowed deserializer from the given string.",20,[[["str"]],["borrowedstrdeserializer"]]],[11,"deserialize_any","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",20,N],[11,"deserialize_bool","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",20,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",20,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",20,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",20,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",20,N],[11,"deserialize_identifier","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",20,[[["self"],["v"]],["result"]]],[11,"variant_seed","","",20,[[["self"],["t"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"deserialize_any","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",21,N],[11,"deserialize_bool","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",21,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",21,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",21,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",21,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",21,N],[11,"deserialize_identifier","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",21,[[["self"],["v"]],["result"]]],[11,"variant_seed","","",21,[[["self"],["t"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"clone","","",22,[[["self"]],["self"]]],[11,"deserialize_any","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",22,N],[11,"deserialize_bool","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",22,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",22,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",22,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",22,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",22,N],[11,"deserialize_identifier","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",22,[[["self"],["v"]],["result"]]],[11,"variant_seed","","",22,[[["self"],["t"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"clone","","",23,[[["self"]],["self"]]],[11,"new","","Create a new borrowed deserializer from the given byte slice.",23,N],[11,"deserialize_any","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",23,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",23,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",23,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",23,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",23,N],[11,"deserialize_identifier","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",23,N],[11,"clone","","",24,[[["self"]],["seqdeserializer"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",24,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a `SeqDeserializer` to `Visitor::visit_seq`.",24,[[["self"]],["result"]]],[11,"deserialize_any","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",24,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",24,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",24,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",24,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",24,N],[11,"deserialize_enum","","",24,N],[11,"deserialize_identifier","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",24,[[["self"],["v"]],["result"]]],[11,"next_element_seed","","",24,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",24,[[["self"]],["option",["usize"]]]],[11,"clone","","",25,[[["self"]],["seqaccessdeserializer"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",25,[[["a"]],["self"]]],[11,"deserialize_any","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",25,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",25,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",25,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",25,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",25,N],[11,"deserialize_enum","","",25,N],[11,"deserialize_identifier","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",25,[[["self"],["v"]],["result"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",26,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a `MapDeserializer` to `Visitor::visit_map`.",26,[[["self"]],["result"]]],[11,"deserialize_any","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",26,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",26,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",26,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",26,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",26,N],[11,"deserialize_enum","","",26,N],[11,"deserialize_identifier","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",26,[[["self"],["v"]],["result"]]],[11,"next_key_seed","","",26,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",26,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",26,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",26,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",26,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",26,[[["self"]],["option",["usize"]]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"clone","","",27,[[["self"]],["mapaccessdeserializer"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",27,[[["a"]],["self"]]],[11,"deserialize_any","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",27,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",27,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",27,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",27,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",27,N],[11,"deserialize_enum","","",27,N],[11,"deserialize_identifier","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",27,[[["self"],["v"]],["result"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"expecting","","",28,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",28,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",28,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",28,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",28,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",28,[[["self"],["str"]],["result"]]],[11,"visit_none","","",28,[[["self"]],["result"]]],[11,"visit_some","","",28,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",28,[[["self"]],["result"]]],[11,"visit_seq","","",28,[[["self"],["a"]],["result"]]],[11,"visit_map","","",28,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",28,N],[11,"deserialize","","",28,[[["d"]],["result",["ignoredany"]]]],[8,"Error","","The `Error` trait allows `Deserialize` implementations to create descriptive error messages belonging to the `Deserializer` against which they are currently running.",N,N],[10,"custom","","Raised when there is general error when deserializing a type.",29,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from what it was expecting.",29,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right type but that is wrong for some other reason.",29,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input data contains too many or too few elements.",29,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant with an unrecognized name.",29,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field with an unrecognized name.",29,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to receive a required field with a particular name but that field was not present in the input.",29,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the same field.",29,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a `Visitor` was expecting to receive.",N,N],[10,"fmt","","Format an explanation of what data was being expected. Same signature as the `Display` and `Debug` traits.",30,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",31,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without borrowing any data from the deserializer.",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the `Deserialize` trait. If you ever find yourself looking for a way to pass data into a `Deserialize` impl, this trait is the way to do it.",N,N],[16,"Value","","The type produced by using this seed.",32,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize` method, except with some initial piece of data (the seed) passed in.",32,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",33,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",33,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",33,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",33,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",33,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",33,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",33,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",33,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",N,N],[16,"Value","","The value produced by this visitor.",34,N],[10,"expecting","","Format a message stating what data this Visitor expects to receive.",34,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",34,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",34,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",34,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",34,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",34,[[["self"],["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",34,[[["self"],["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",34,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",34,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",34,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",34,[[["self"],["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",34,[[["self"],["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",34,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",34,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",34,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is ephemeral and it may be destroyed after this method returns.",34,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as the `Deserializer`.",34,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is being given to the `Visitor`.",34,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte array is ephemeral and it may be destroyed after this method returns.",34,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as long as the `Deserializer`.",34,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte array is being given to the `Visitor`.",34,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",34,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",34,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",34,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",34,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",34,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",34,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",34,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",35,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",35,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",35,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, if known.",35,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",36,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",36,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",36,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",36,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",36,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",36,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",36,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if known.",36,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",37,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content of the enum variant.",37,N],[10,"variant_seed","","`variant` is called to identify which variant to deserialize.",37,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to deserialize.",37,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the `Deserializer` and passed to the `Deserialize` to deserialize the content of a particular enum variant.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization. Must match the error type of our `EnumAccess`.",38,N],[10,"unit_variant","","Called when deserializing a variant with no values.",38,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",38,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",38,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",38,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",38,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from which other values can be deserialized.",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",39,N],[10,"into_deserializer","","Convert this value into a deserializer.",39,N],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"eq","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not support serializing one of the compound types.",N,N],[11,"serialize_element","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_element","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_field","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_field","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_key","","",40,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_field","","",40,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_field","","",40,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[8,"Error","","Trait used by `Serialize` implementations to generically construct errors belonging to the `Serializer` against which they are currently running.",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any error while serializing a type.",41,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",42,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",N,N],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",43,N],[16,"Error","","The error type when some error occurs during serialization.",43,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",43,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",43,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",43,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",43,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",43,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",43,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",43,N],[10,"serialize_bool","","Serialize a `bool` value.",43,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",43,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",43,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",43,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",43,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",43,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",43,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",43,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",43,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",43,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",43,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",43,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",43,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",43,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",43,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",43,N],[10,"serialize_none","","Serialize a [`None`] value.",43,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",43,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",43,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",43,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",43,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",43,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",43,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",43,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",43,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",43,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",43,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",43,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",43,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",43,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",44,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",44,N],[10,"serialize_element","","Serialize a sequence element.",44,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",44,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",45,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",45,N],[10,"serialize_element","","Serialize a tuple element.",45,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",45,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",46,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",46,N],[10,"serialize_field","","Serialize a tuple struct field.",46,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",46,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",47,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",47,N],[10,"serialize_field","","Serialize a tuple variant field.",47,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",47,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",48,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",48,N],[10,"serialize_key","","Serialize a map key.",48,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",48,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",48,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",48,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",49,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",49,N],[10,"serialize_field","","Serialize a struct field.",49,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",49,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",49,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",50,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",50,N],[10,"serialize_field","","Serialize a struct variant field.",50,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",50,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",50,[[["self"]],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data format supported by Serde.",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",31,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",33,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",33,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",33,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",33,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",33,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",33,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",33,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",33,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",42,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",N,N],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",43,N],[16,"Error","","The error type when some error occurs during serialization.",43,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",43,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",43,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",43,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",43,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",43,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",43,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",43,N],[10,"serialize_bool","","Serialize a `bool` value.",43,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",43,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",43,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",43,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",43,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",43,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",43,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",43,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",43,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",43,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",43,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",43,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",43,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",43,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",43,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",43,N],[10,"serialize_none","","Serialize a [`None`] value.",43,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",43,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",43,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",43,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",43,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",43,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",43,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",43,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",43,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",43,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",43,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",43,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",43,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",43,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of a new data format for Serde.",N,N],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is built with support for 128-bit integers.",N,N],[11,"into","serde::de","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","serde::de::value","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]]],"paths":[[4,"Unexpected"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[3,"IgnoredAny"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[3,"Impossible"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[5,"derive_serialize","serde_derive","",N,[[["tokenstream"]],["tokenstream"]]],[5,"derive_deserialize","","",N,[[["tokenstream"]],["tokenstream"]]]],"paths":[]};
searchIndex["serde_json"]={"doc":"Serde JSON","items":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",N,N],[3,"Error","","This type represents all possible errors that can occur when serializing or deserializing JSON data.",N,N],[3,"Serializer","","A structure for serializing Rust values into JSON.",N,N],[3,"Map","","Represents a JSON key/value type.",N,N],[3,"Number","","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of JSON.",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON text.",N,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO stream.",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON into the IO stream.",N,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum that can represent any valid JSON data.",N,[[["t"]],["result",["value","error"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead","serde_json::de","JSON input source that reads from a std::io input stream.",N,N],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",N,N],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",N,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of JSON.",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON text.",N,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input. This is manually \"specialized\" for iterating over &[u8]. Once feature(specialization) is stable we can use actual specialization.",N,N],[11,"new","","Create a JSON deserializer from one of the possible serde_json input sources.",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,N],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a value has been fully deserialized. This allows the `Deserializer` to validate that the input stream is at the end or that it only has trailing whitespace.",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of type T.",1,[[["self"]],["streamdeserializer"]]],[11,"from_str","serde_json","",2,[[["str"]],["result"]]],[11,"new","serde_json::de","Create a JSON stream deserializer from one of the possible serde_json input sources.",3,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a successful `T`.",3,[[["self"]],["usize"]]],[11,"next","","",3,[[["self"]],["option",["result"]]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",N,N],[3,"Error","serde_json::error","This type represents all possible errors that can occur when serializing or deserializing JSON data.",N,N],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io","","The error was caused by a failure to read or write bytes on an IO stream.",4,N],[13,"Syntax","","The error was caused by input that was not syntactically valid JSON.",4,N],[13,"Data","","The error was caused by input data that was semantically incorrect.",4,N],[13,"Eof","","The error was caused by prematurely reaching the end of the input data.",4,N],[6,"Result","","Alias for a `Result` with the error type `serde_json::Error`.",N,N],[11,"line","","One-based line number at which the error was detected.",5,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",5,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",5,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read or write bytes on an IO stream.",5,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was not syntactically valid JSON.",5,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that was semantically incorrect.",5,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely reaching the end of the input data.",5,[[["self"]],["bool"]]],[11,"clone","","",4,[[["self"]],["category"]]],[11,"eq","","",4,[[["self"],["category"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"custom","","",5,[[["t"]],["error"]]],[11,"invalid_type","","",5,[[["unexpected"],["expected"]],["self"]]],[11,"custom","","",5,[[["t"]],["error"]]],[0,"map","serde_json","A map of String to serde_json::Value.",N,N],[3,"Map","serde_json::map","Represents a JSON key/value type.",N,N],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter","","An iterator over a serde_json::Map's entries.",N,N],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",N,N],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys","","An iterator over a serde_json::Map's keys.",N,N],[3,"Values","","An iterator over a serde_json::Map's values.",N,N],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied. This enum is constructed from the [`entry`] method on [`Map`].",N,N],[13,"Vacant","","A vacant Entry.",6,N],[13,"Occupied","","An occupied Entry.",6,N],[11,"new","","Makes a new empty Map.",7,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",7,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",7,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",7,[[["self"],["q"]],["option",["value"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified key.",7,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",7,[[["self"],["q"]],["option",["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",7,[[["self"],["string"],["value"]],["option",["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key if the key was previously in the map.",7,[[["self"],["q"]],["option",["value"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",7,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",7,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",7,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",7,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",7,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",7,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",7,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",7,[[["self"]],["valuesmut"]]],[11,"default","","",7,[[],["self"]]],[11,"clone","","",7,[[["self"]],["self"]]],[11,"eq","","",7,[[["self"],["self"]],["bool"]]],[11,"index","","",7,[[["self"],["q"]],["value"]]],[11,"index_mut","","",7,[[["self"],["q"]],["value"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"serialize","","",7,[[["self"],["s"]],["result"]]],[11,"deserialize","","",7,[[["d"]],["result"]]],[11,"from_iter","","",7,[[["t"]],["self"]]],[11,"extend","","",7,[[["self"],["t"]]]],[11,"key","","Returns a reference to this entry's key.",6,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns a mutable reference to the value in the entry.",6,[[["self"],["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty, and returns a mutable reference to the value in the entry.",6,[[["self"],["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when inserting a value through the VacantEntry.",8,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key, and returns a mutable reference to it.",8,[[["self"],["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",9,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",9,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",9,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",9,[[["self"]],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s key, and returns the entry's old value.",9,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",9,[[["self"]],["value"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"into_iter","","",7,N],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"len","","",13,[[["self"]],["usize"]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"next_back","","",14,[[["self"]],["option"]]],[11,"len","","",14,[[["self"]],["usize"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"len","","",15,[[["self"]],["usize"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",N,N],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",N,N],[3,"CompactFormatter","","This structure compacts a JSON value with no extra whitespace.",N,N],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human readable.",N,N],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",N,N],[13,"Quote","","An escaped quote `\"`",16,N],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",16,N],[13,"Solidus","","An escaped solidus `/`",16,N],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",16,N],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",16,N],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",16,N],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as `\\r`)",16,N],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",16,N],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped as `\\u00XX` where `XX` are two hex characters)",16,N],[5,"to_writer","","Serialize the given data structure as JSON into the IO stream.",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON into the IO stream.",N,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed String of JSON.",N,[[["t"]],["result",["string"]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control characters, which allows the user to optionally pretty print the JSON output.",N,N],[11,"write_null","","Writes a `null` value to the specified writer.",17,[[["self"],["w"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",17,[[["self"],["w"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",17,[[["self"],["w"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",17,[[["self"],["w"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",17,[[["self"],["w"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",17,[[["self"],["w"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",17,[[["self"],["w"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",17,[[["self"],["w"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",17,[[["self"],["w"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",17,[[["self"],["w"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the specified writer.",17,[[["self"],["w"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the specified writer.",17,[[["self"],["w"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",17,[[["self"],["w"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and `write_char_escape`.  Writes a `\"` to the specified writer.",17,[[["self"],["w"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and `write_char_escape`.  Writes a `\"` to the specified writer.",17,[[["self"],["w"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to the specified writer.",17,[[["self"],["w"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",17,[[["self"],["w"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array.  Writes a `[` to the specified writer.",17,[[["self"],["w"]],["result"]]],[11,"end_array","","Called after every array.  Writes a `]` to the specified writer.",17,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","Called before every array value.  Writes a `,` if needed to the specified writer.",17,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",17,[[["self"],["w"]],["result"]]],[11,"begin_object","","Called before every object.  Writes a `{` to the specified writer.",17,[[["self"],["w"]],["result"]]],[11,"end_object","","Called after every object.  Writes a `}` to the specified writer.",17,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","Called before every object key.",17,[[["self"],["w"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key.  A `:` should be written to the specified writer by either this method or `begin_object_value`.",17,[[["self"],["w"]],["result"]]],[11,"begin_object_value","","Called before every object value.  A `:` should be written to the specified writer by either this method or `end_object_key`.",17,[[["self"],["w"]],["result"]]],[11,"end_object_value","","Called after every object value.",17,[[["self"],["w"]],["result"]]],[11,"new","","Creates a new JSON serializer.",18,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",18,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to the writer specified.",18,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",18,[[["self"]],["w"]]],[11,"clone","","",19,[[["self"]],["compactformatter"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"clone","","",20,[[["self"]],["prettyformatter"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a pretty printer formatter that defaults to using two spaces for indentation.",20,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the `indent` string for indentation.",20,N],[11,"default","","",20,[[],["self"]]],[11,"begin_array","","",20,[[["self"],["w"]],["result"]]],[11,"end_array","","",20,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","",20,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","",20,[[["self"],["w"]],["result"]]],[11,"begin_object","","",20,[[["self"],["w"]],["result"]]],[11,"end_object","","",20,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","",20,[[["self"],["w"],["bool"]],["result"]]],[11,"begin_object_value","","",20,[[["self"],["w"]],["result"]]],[11,"end_object_value","","",20,[[["self"],["w"]],["result"]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any valid JSON value.",N,N],[3,"Number","serde_json::value","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum that can represent any valid JSON data.",N,[[["t"]],["result",["value","error"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[11,"deserialize","","",0,[[["d"]],["result",["value"]]]],[11,"from_str","","",0,[[["str"]],["result",["value","error"]]]],[11,"deserialize_any","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_option","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]],[11,"from","","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["map",["string","value"]]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,N],[11,"from_iter","","Convert an iteratable type to a `Value`",0,[[["i"]],["self"]]],[11,"index","","Index into a `serde_json::Value` using the syntax `value[0]` or `value[\"k\"]`.",0,[[["self"],["i"]],["value"]]],[11,"index_mut","","Write into a `serde_json::Value` using the syntax `value[0] = ...` or `value[\"k\"] = ...`.",0,[[["self"],["i"]],["value"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["string"]],["bool"]]],[11,"eq","","",0,[[["self"],["i8"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["self"],["i64"]],["bool"]]],[11,"eq","","",0,[[["self"],["isize"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["self"],["u16"]],["bool"]]],[11,"eq","","",0,[[["self"],["u32"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["self"],["f32"]],["bool"]]],[11,"eq","","",0,[[["self"],["f64"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"serialize","","",0,[[["self"],["s"]],["result"]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",N,N],[11,"clone","","",0,[[["self"]],["value"]]],[11,"eq","","",0,[[["self"],["value"]],["bool"]]],[11,"ne","","",0,[[["self"],["value"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Display a JSON value as a string.",0,[[["self"],["formatter"]],["result"]]],[11,"get","","Index into a JSON array or map. A string index can be used to access a value in a map, and a usize index can be used to access an element of an array.",0,[[["self"],["i"]],["option",["value"]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can be used to access a value in a map, and a usize index can be used to access an element of an array.",0,[[["self"],["i"]],["option",["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map. Returns None otherwise.",0,[[["self"]],["option",["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable Map. Returns None otherwise.",0,[[["self"]],["option",["map"]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector. Returns None otherwise.",0,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector. Returns None otherwise.",0,[[["self"]],["option",["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str. Returns None otherwise.",0,[[["self"]],["option",["str"]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between `i64::MIN` and `i64::MAX`.",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and `u64::MAX`.",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be represented by f64.",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if possible. Returns None otherwise.",0,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if possible. Returns None otherwise.",0,[[["self"]],["option",["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if possible. Returns None otherwise.",0,[[["self"]],["option",["f64"]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool. Returns None otherwise.",0,[[["self"]],["option",["bool"]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None otherwise.",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["self"],["str"]],["option",["value"]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable reference to that value.",0,[[["self"],["str"]],["option",["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in its place.",0,[[["self"]],["value"]]],[11,"default","","",0,[[],["value"]]],[11,"clone","serde_json","",2,[[["self"]],["number"]]],[11,"eq","","",2,[[["self"],["number"]],["bool"]]],[11,"ne","","",2,[[["self"],["number"]],["bool"]]],[11,"is_i64","","Returns true if the `Number` is an integer between `i64::MIN` and `i64::MAX`.",2,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero and `u64::MAX`.",2,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",2,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if possible. Returns None otherwise.",2,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if possible. Returns None otherwise.",2,[[["self"]],["option",["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None otherwise.",2,[[["self"]],["option",["f64"]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN values are not JSON numbers.",2,[[["f64"]],["option",["number"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"serialize","","",2,[[["self"],["s"]],["result"]]],[11,"deserialize","","",2,[[["d"]],["result",["number"]]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_enum","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"from","","",2,[[["u8"]],["self"]]],[11,"from","","",2,[[["u16"]],["self"]]],[11,"from","","",2,[[["u32"]],["self"]]],[11,"from","","",2,[[["u64"]],["self"]]],[11,"from","","",2,[[["usize"]],["self"]]],[11,"from","","",2,[[["i8"]],["self"]]],[11,"from","","",2,[[["i16"]],["self"]]],[11,"from","","",2,[[["i32"]],["self"]]],[11,"from","","",2,[[["i64"]],["self"]]],[11,"from","","",2,[[["isize"]],["self"]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input stream.",21,[[["r"]],["self"]]],[11,"next","","",21,[[["self"]],["result",["option"]]]],[11,"peek","","",21,[[["self"]],["result",["option"]]]],[11,"discard","","",21,[[["self"]]]],[11,"position","","",21,[[["self"]],["position"]]],[11,"peek_position","","",21,[[["self"]],["position"]]],[11,"byte_offset","","",21,[[["self"]],["usize"]]],[11,"parse_str","","",21,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",21,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",21,[[["self"]],["result"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",22,N],[11,"next","","",22,[[["self"]],["result",["option"]]]],[11,"peek","","",22,[[["self"]],["result",["option"]]]],[11,"discard","","",22,[[["self"]]]],[11,"position","","",22,[[["self"]],["position"]]],[11,"peek_position","","",22,[[["self"]],["position"]]],[11,"byte_offset","","",22,[[["self"]],["usize"]]],[11,"parse_str","","",22,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",22,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",22,[[["self"]],["result"]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",23,[[["str"]],["self"]]],[11,"next","","",23,[[["self"]],["result",["option"]]]],[11,"peek","","",23,[[["self"]],["result",["option"]]]],[11,"discard","","",23,[[["self"]]]],[11,"position","","",23,[[["self"]],["position"]]],[11,"peek_position","","",23,[[["self"]],["position"]]],[11,"byte_offset","","",23,[[["self"]],["usize"]]],[11,"parse_str","","",23,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",23,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",23,[[["self"]],["result"]]],[6,"Result","serde_json","Alias for a `Result` with the error type `serde_json::Error`.",N,N],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"into","serde_json::de","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","serde_json::error","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","serde_json::ser","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","serde_json::map","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","serde_json::value","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","serde_json::error","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","serde_json::map","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","serde_json::ser","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]]],"paths":[[4,"Value"],[3,"Deserializer"],[3,"Number"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"CompactFormatter"],[3,"PrettyFormatter"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[12,"is_sugared_doc","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy, Clone)`.",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",10,N],[12,"left","","",10,N],[12,"op","","",10,N],[12,"right","","",10,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional expression.",N,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",11,N],[12,"func","","",11,N],[12,"paren_token","","",11,N],[12,"args","","",11,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",12,N],[12,"expr","","",12,N],[12,"as_token","","",12,N],[12,"ty","","",12,N],[3,"ExprCatch","","A catch expression: `do catch { ... }`.",N,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",N,N],[12,"attrs","","",13,N],[12,"base","","",13,N],[12,"dot_token","","",13,N],[12,"member","","",13,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",N,N],[3,"ExprIfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",N,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",14,N],[12,"expr","","",14,N],[12,"bracket_token","","",14,N],[12,"index","","",14,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",15,N],[12,"lit","","",15,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",N,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",16,N],[12,"paren_token","","",16,N],[12,"expr","","",16,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",N,N],[12,"attrs","","",17,N],[12,"qself","","",17,N],[12,"path","","",17,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[3,"ExprRepeat","","An array literal constructed from one repeated element: `[0u8; N]`.",N,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",18,N],[12,"op","","",18,N],[12,"expr","","",18,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",19,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[3,"ExprWhileLet","","A while-let loop: `while let pat = expr { ... }`.",N,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",20,N],[12,"span","","",20,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",21,N],[12,"lt_token","","",21,N],[12,"lifetimes","","",21,N],[12,"gt_token","","",21,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",22,N],[12,"const_token","","",22,N],[12,"ident","","",22,N],[12,"colon_token","","",22,N],[12,"ty","","",22,N],[12,"eq_token","","",22,N],[12,"default","","",22,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",N,N],[12,"lt_token","","",23,N],[12,"params","","",23,N],[12,"gt_token","","",23,N],[12,"where_clause","","",23,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",24,N],[12,"lifetime","","",24,N],[12,"colon_token","","",24,N],[12,"bounds","","",24,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",25,N],[12,"eq_token","","",25,N],[12,"rhs_ty","","",25,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",26,N],[12,"colon_token","","",26,N],[12,"bounds","","",26,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",27,N],[12,"bounded_ty","","The type being bounded",27,N],[12,"colon_token","","",27,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",28,N],[12,"modifier","","",28,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",29,N],[12,"ident","","",29,N],[12,"colon_token","","",29,N],[12,"bounds","","",29,N],[12,"eq_token","","",29,N],[12,"default","","",29,N],[3,"WhereClause","","A `where` clause in a definition: `where T: Deserialize<'de>, D: 'static`.",N,N],[12,"where_token","","",30,N],[12,"predicates","","",30,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",31,N],[12,"ident","","",31,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",32,N],[12,"span","","",32,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",N,N],[12,"token","","",33,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",34,N],[12,"bang_token","","",34,N],[12,"delimiter","","",34,N],[12,"tts","","",34,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",35,N],[12,"brace_token","","",35,N],[12,"variants","","",35,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",36,N],[12,"fields","","",36,N],[12,"semi_token","","",36,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",37,N],[12,"fields","","",37,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,N],[12,"vis","","Visibility of the struct or enum.",38,N],[12,"ident","","Name of the struct or enum.",38,N],[12,"generics","","Generics required to complete the definition.",38,N],[12,"data","","Data within the struct or enum.",38,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",39,N],[12,"name","","",39,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize) -> bool`.",N,N],[12,"name","","",40,N],[12,"ty","","",40,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",41,N],[12,"elem","","",41,N],[12,"semi_token","","",41,N],[12,"len","","",41,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"unsafety","","",42,N],[12,"abi","","",42,N],[12,"fn_token","","",42,N],[12,"lifetimes","","",42,N],[12,"paren_token","","",42,N],[12,"inputs","","",42,N],[12,"variadic","","",42,N],[12,"output","","",42,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",43,N],[12,"elem","","",43,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",N,N],[12,"impl_token","","",44,N],[12,"bounds","","",44,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler: `_`.",N,N],[12,"underscore_token","","",45,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",46,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",47,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",48,N],[12,"elem","","",48,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",N,N],[12,"qself","","",49,N],[12,"path","","",49,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",50,N],[12,"const_token","","",50,N],[12,"mutability","","",50,N],[12,"elem","","",50,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",51,N],[12,"lifetime","","",51,N],[12,"mutability","","",51,N],[12,"elem","","",51,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",52,N],[12,"elem","","",52,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",N,N],[12,"dyn_token","","",53,N],[12,"bounds","","",53,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",54,N],[12,"elems","","",54,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",55,N],[3,"PathTokens","","A helper for printing a self-type qualified path as tokens.",N,N],[12,"0","","",56,N],[12,"1","","",56,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K, V>`.",N,N],[12,"colon2_token","","",57,N],[12,"lt_token","","",57,N],[12,"args","","",57,N],[12,"gt_token","","",57,N],[3,"Binding","","A binding (equality constraint) on an associated type: `Item = u8`.",N,N],[12,"ident","","",58,N],[12,"eq_token","","",58,N],[12,"ty","","",58,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) -> C`.",N,N],[12,"paren_token","","",59,N],[12,"inputs","","`(A, B)`",59,N],[12,"output","","`C`",59,N],[3,"Path","","A path at which a named item is exported: `std::collections::HashMap`.",N,N],[12,"leading_colon","","",60,N],[12,"segments","","",60,N],[3,"PathSegment","","A segment of a path together with any path arguments on that segment.",N,N],[12,"ident","","",61,N],[12,"arguments","","",61,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T as Display>::fmt`.",N,N],[12,"lt_token","","",62,N],[12,"ty","","",62,N],[12,"position","","",62,N],[12,"as_token","","",62,N],[12,"gt_token","","",62,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and attributes that are contained within an item.",N,N],[13,"Outer","","",63,N],[13,"Inner","","",63,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",64,N],[13,"List","","A structured list within an attribute, like `derive(Copy, Clone)`.",64,N],[13,"NameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",64,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in `#[derive(Copy)]` which would be a nested `Meta::Word`.",65,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.",65,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",66,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",66,N],[13,"Unit","","Unit struct or unit variant such as `None`.",66,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or `pub(restricted)`.",N,N],[13,"Public","","A public visibility level: `pub`.",67,N],[13,"Crate","","A crate-level visibility: `crate`.",67,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",67,N],[13,"Inherited","","An inherited visibility, which usually means private.",67,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",68,N],[13,"InPlace","","A placement expression: `place <- value`.",68,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,N],[13,"Call","","A function call expression: `invoke(a, b)`.",68,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,N],[13,"Unary","","A unary operation: `!x`, `*x`.",68,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,N],[13,"Cast","","A cast expression: `foo as f64`.",68,N],[13,"Type","","A type ascription expression: `foo: f64`.",68,N],[13,"If","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",68,N],[13,"IfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",68,N],[13,"While","","A while loop: `while expr { ... }`.",68,N],[13,"WhileLet","","A while-let loop: `while let pat = expr { ... }`.",68,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",68,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,N],[13,"Block","","A blocked scope: `{ ... }`.",68,N],[13,"Assign","","An assignment expression: `a = compute()`.",68,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",68,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,N],[13,"Path","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",68,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,N],[13,"Break","","A `break`, with an optional label to break and an optional expression.",68,N],[13,"Continue","","A `continue`, with an optional label.",68,N],[13,"Return","","A `return`, with an optional value to be returned.",68,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,N],[13,"Repeat","","An array literal constructed from one repeated element: `[0u8; N]`.",68,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,N],[13,"Group","","An expression contained within invisible delimiters.",68,N],[13,"Try","","A try-expression: `expr?`.",68,N],[13,"Catch","","A catch expression: `do catch { ... }`.",68,N],[13,"Yield","","A yield expression: `yield expr`.",68,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,N],[4,"Member","","A struct or tuple struct field accessed in a struct literal or field expression.",N,N],[13,"Named","","A named field like `self.x`.",69,N],[13,"Unnamed","","An unnamed field like `self.0`.",69,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T: Into<String>`, `'a: 'b`, `const LEN: usize`.",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the `?` in `?Sized`.",N,N],[13,"None","","",71,N],[13,"Maybe","","",71,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",72,N],[13,"Lifetime","","",72,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T: Deserialize<'de>`.",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",73,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the `f32` in `1.0f32`.",N,N],[13,"F32","","",74,N],[13,"F64","","",74,N],[13,"None","","",74,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in `127u8`.",N,N],[13,"I8","","",75,N],[13,"I16","","",75,N],[13,"I32","","",75,N],[13,"I64","","",75,N],[13,"I128","","",75,N],[13,"Isize","","",75,N],[13,"U8","","",75,N],[13,"U16","","",75,N],[13,"U32","","",75,N],[13,"U64","","",75,N],[13,"U128","","",75,N],[13,"Usize","","",75,N],[13,"None","","",75,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,N],[13,"Byte","","A byte literal: `b'f'`.",76,N],[13,"Char","","A character literal: `'a'`.",76,N],[13,"Int","","An integer literal: `1` or `1u16`.",76,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,N],[13,"Bool","","A boolean literal: `true` or `false`.",76,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",76,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a raw string like `r##\"data\"##`.",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",77,N],[13,"Raw","","A raw string like `r##\"data\"##`.",77,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.",N,N],[13,"Paren","","",78,N],[13,"Brace","","",78,N],[13,"Bracket","","",78,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",80,N],[13,"Sub","","The `-` operator (subtraction)",80,N],[13,"Mul","","The `*` operator (multiplication)",80,N],[13,"Div","","The `/` operator (division)",80,N],[13,"Rem","","The `%` operator (modulus)",80,N],[13,"And","","The `&&` operator (logical and)",80,N],[13,"Or","","The `||` operator (logical or)",80,N],[13,"BitXor","","The `^` operator (bitwise xor)",80,N],[13,"BitAnd","","The `&` operator (bitwise and)",80,N],[13,"BitOr","","The `|` operator (bitwise or)",80,N],[13,"Shl","","The `<<` operator (shift left)",80,N],[13,"Shr","","The `>>` operator (shift right)",80,N],[13,"Eq","","The `==` operator (equality)",80,N],[13,"Lt","","The `<` operator (less than)",80,N],[13,"Le","","The `<=` operator (less than or equal to)",80,N],[13,"Ne","","The `!=` operator (not equal to)",80,N],[13,"Ge","","The `>=` operator (greater than or equal to)",80,N],[13,"Gt","","The `>` operator (greater than)",80,N],[13,"AddEq","","The `+=` operator",80,N],[13,"SubEq","","The `-=` operator",80,N],[13,"MulEq","","The `*=` operator",80,N],[13,"DivEq","","The `/=` operator",80,N],[13,"RemEq","","The `%=` operator",80,N],[13,"BitXorEq","","The `^=` operator",80,N],[13,"BitAndEq","","The `&=` operator",80,N],[13,"BitOrEq","","The `|=` operator",80,N],[13,"ShlEq","","The `<<=` operator",80,N],[13,"ShrEq","","The `>>=` operator",80,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",81,N],[13,"Not","","The `!` operator for logical inversion",81,N],[13,"Neg","","The `-` operator for negation",81,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n: usize)`.",N,N],[13,"Named","","Argument given a name.",82,N],[13,"Wild","","Argument not given a name, matched with `_`.",82,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",83,N],[13,"Type","","A particular type is returned.",83,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,N],[13,"Array","","A fixed size array type: `[T; n]`.",84,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,N],[13,"Never","","The never type: `!`.",84,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",84,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",84,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",84,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,N],[13,"Group","","A type contained within invisible delimiters.",84,N],[13,"Infer","","Indication that a type should be inferred by the compiler: `_`.",84,N],[13,"Macro","","A macro in the type position.",84,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item = T`.",N,N],[13,"Lifetime","","A lifetime argument.",85,N],[13,"Type","","A type argument.",85,N],[13,"Binding","","A binding (equality constraint) on an associated type: the `Item = u8` in `Iterator<Item = u8>`.",85,N],[13,"Const","","A const expression. Must be inside of a block.",85,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path segment.",N,N],[13,"None","","",86,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree node.",N,[[["tokenstream"]],["result",["parseerror"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",N,[[["tokenstream"]],["result",["parseerror"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",N,[[["str"]],["result",["parseerror"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and delimiters.",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"0","","",87,N],[3,"Apostrophe","","`'`",N,N],[12,"0","","",88,N],[3,"Add","","`+`",N,N],[12,"0","","",89,N],[3,"AddEq","","`+=`",N,N],[12,"0","","",90,N],[3,"And","","`&`",N,N],[12,"0","","",91,N],[3,"AndAnd","","`&&`",N,N],[12,"0","","",92,N],[3,"AndEq","","`&=`",N,N],[12,"0","","",93,N],[3,"At","","`@`",N,N],[12,"0","","",94,N],[3,"Bang","","`!`",N,N],[12,"0","","",95,N],[3,"Caret","","`^`",N,N],[12,"0","","",96,N],[3,"CaretEq","","`^=`",N,N],[12,"0","","",97,N],[3,"Colon","","`:`",N,N],[12,"0","","",98,N],[3,"Colon2","","`::`",N,N],[12,"0","","",99,N],[3,"Comma","","`,`",N,N],[12,"0","","",100,N],[3,"Div","","`/`",N,N],[12,"0","","",101,N],[3,"DivEq","","`/=`",N,N],[12,"0","","",102,N],[3,"Dollar","","`$`",N,N],[12,"0","","",103,N],[3,"Dot","","`.`",N,N],[12,"0","","",104,N],[3,"Dot2","","`..`",N,N],[12,"0","","",105,N],[3,"Dot3","","`...`",N,N],[12,"0","","",106,N],[3,"DotDotEq","","`..=`",N,N],[12,"0","","",107,N],[3,"Eq","","`=`",N,N],[12,"0","","",108,N],[3,"EqEq","","`==`",N,N],[12,"0","","",109,N],[3,"Ge","","`>=`",N,N],[12,"0","","",110,N],[3,"Gt","","`>`",N,N],[12,"0","","",111,N],[3,"Le","","`<=`",N,N],[12,"0","","",112,N],[3,"Lt","","`<`",N,N],[12,"0","","",113,N],[3,"MulEq","","`*=`",N,N],[12,"0","","",114,N],[3,"Ne","","`!=`",N,N],[12,"0","","",115,N],[3,"Or","","`|`",N,N],[12,"0","","",116,N],[3,"OrEq","","`|=`",N,N],[12,"0","","",117,N],[3,"OrOr","","`||`",N,N],[12,"0","","",118,N],[3,"Pound","","`#`",N,N],[12,"0","","",119,N],[3,"Question","","`?`",N,N],[12,"0","","",120,N],[3,"RArrow","","`->`",N,N],[12,"0","","",121,N],[3,"LArrow","","`<-`",N,N],[12,"0","","",122,N],[3,"Rem","","`%`",N,N],[12,"0","","",123,N],[3,"RemEq","","`%=`",N,N],[12,"0","","",124,N],[3,"FatArrow","","`=>`",N,N],[12,"0","","",125,N],[3,"Semi","","`;`",N,N],[12,"0","","",126,N],[3,"Shl","","`<<`",N,N],[12,"0","","",127,N],[3,"ShlEq","","`<<=`",N,N],[12,"0","","",128,N],[3,"Shr","","`>>`",N,N],[12,"0","","",129,N],[3,"ShrEq","","`>>=`",N,N],[12,"0","","",130,N],[3,"Star","","`*`",N,N],[12,"0","","",131,N],[3,"Sub","","`-`",N,N],[12,"0","","",132,N],[3,"SubEq","","`-=`",N,N],[12,"0","","",133,N],[3,"Brace","","`{...}`",N,N],[12,"0","","",134,N],[3,"Bracket","","`[...]`",N,N],[12,"0","","",135,N],[3,"Paren","","`(...)`",N,N],[12,"0","","",136,N],[3,"Group","","None-delimited group",N,N],[12,"0","","",137,N],[3,"As","","`as`",N,N],[12,"0","","",138,N],[3,"Async","","`async`",N,N],[12,"0","","",139,N],[3,"Auto","","`auto`",N,N],[12,"0","","",140,N],[3,"Box","","`box`",N,N],[12,"0","","",141,N],[3,"Break","","`break`",N,N],[12,"0","","",142,N],[3,"CapSelf","","`Self`",N,N],[12,"0","","",143,N],[3,"Catch","","`catch`",N,N],[12,"0","","",144,N],[3,"Const","","`const`",N,N],[12,"0","","",145,N],[3,"Continue","","`continue`",N,N],[12,"0","","",146,N],[3,"Crate","","`crate`",N,N],[12,"0","","",147,N],[3,"Default","","`default`",N,N],[12,"0","","",148,N],[3,"Do","","`do`",N,N],[12,"0","","",149,N],[3,"Dyn","","`dyn`",N,N],[12,"0","","",150,N],[3,"Else","","`else`",N,N],[12,"0","","",151,N],[3,"Enum","","`enum`",N,N],[12,"0","","",152,N],[3,"Extern","","`extern`",N,N],[12,"0","","",153,N],[3,"Fn","","`fn`",N,N],[12,"0","","",154,N],[3,"For","","`for`",N,N],[12,"0","","",155,N],[3,"If","","`if`",N,N],[12,"0","","",156,N],[3,"Impl","","`impl`",N,N],[12,"0","","",157,N],[3,"In","","`in`",N,N],[12,"0","","",158,N],[3,"Let","","`let`",N,N],[12,"0","","",159,N],[3,"Loop","","`loop`",N,N],[12,"0","","",160,N],[3,"Macro","","`macro`",N,N],[12,"0","","",161,N],[3,"Match","","`match`",N,N],[12,"0","","",162,N],[3,"Mod","","`mod`",N,N],[12,"0","","",163,N],[3,"Move","","`move`",N,N],[12,"0","","",164,N],[3,"Mut","","`mut`",N,N],[12,"0","","",165,N],[3,"Pub","","`pub`",N,N],[12,"0","","",166,N],[3,"Ref","","`ref`",N,N],[12,"0","","",167,N],[3,"Return","","`return`",N,N],[12,"0","","",168,N],[3,"Self_","","`self`",N,N],[12,"0","","",169,N],[3,"Static","","`static`",N,N],[12,"0","","",170,N],[3,"Struct","","`struct`",N,N],[12,"0","","",171,N],[3,"Super","","`super`",N,N],[12,"0","","",172,N],[3,"Trait","","`trait`",N,N],[12,"0","","",173,N],[3,"Type","","`type`",N,N],[12,"0","","",174,N],[3,"Union","","`union`",N,N],[12,"0","","",175,N],[3,"Unsafe","","`unsafe`",N,N],[12,"0","","",176,N],[3,"Use","","`use`",N,N],[12,"0","","",177,N],[3,"Where","","`where`",N,N],[12,"0","","",178,N],[3,"While","","`while`",N,N],[12,"0","","",179,N],[3,"Yield","","`yield`",N,N],[12,"0","","",180,N],[11,"clone","","",87,[[["self"]],["underscore"]]],[11,"new","","",87,[[["span"]],["self"]]],[11,"default","","",87,[[],["self"]]],[11,"from","","",87,[[["span"]],["self"]]],[11,"to_tokens","","",87,[[["self"],["tokenstream"]]]],[11,"parse","","",87,[[["cursor"]],["presult",["underscore"]]]],[11,"description","","",87,[[],["option",["str"]]]],[11,"clone","","",88,[[["self"]],["apostrophe"]]],[11,"new","","",88,[[["span"]],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"from","","",88,[[["span"]],["self"]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"parse","","",88,[[["cursor"]],["presult",["apostrophe"]]]],[11,"description","","",88,[[],["option",["str"]]]],[11,"clone","","",89,[[["self"]],["add"]]],[11,"new","","",89,[[["span"]],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"from","","",89,[[["span"]],["self"]]],[11,"clone","","",90,[[["self"]],["addeq"]]],[11,"new","","",90,[[["span"]],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"from","","",90,[[["span"]],["self"]]],[11,"clone","","",91,[[["self"]],["and"]]],[11,"new","","",91,[[["span"]],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"from","","",91,[[["span"]],["self"]]],[11,"clone","","",92,[[["self"]],["andand"]]],[11,"new","","",92,[[["span"]],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"from","","",92,[[["span"]],["self"]]],[11,"clone","","",93,[[["self"]],["andeq"]]],[11,"new","","",93,[[["span"]],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"from","","",93,[[["span"]],["self"]]],[11,"clone","","",94,[[["self"]],["at"]]],[11,"new","","",94,[[["span"]],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"from","","",94,[[["span"]],["self"]]],[11,"clone","","",95,[[["self"]],["bang"]]],[11,"new","","",95,[[["span"]],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"from","","",95,[[["span"]],["self"]]],[11,"clone","","",96,[[["self"]],["caret"]]],[11,"new","","",96,[[["span"]],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"from","","",96,[[["span"]],["self"]]],[11,"clone","","",97,[[["self"]],["careteq"]]],[11,"new","","",97,[[["span"]],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"from","","",97,[[["span"]],["self"]]],[11,"clone","","",98,[[["self"]],["colon"]]],[11,"new","","",98,[[["span"]],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"from","","",98,[[["span"]],["self"]]],[11,"clone","","",99,[[["self"]],["colon2"]]],[11,"new","","",99,[[["span"]],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"from","","",99,[[["span"]],["self"]]],[11,"clone","","",100,[[["self"]],["comma"]]],[11,"new","","",100,[[["span"]],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"from","","",100,[[["span"]],["self"]]],[11,"clone","","",101,[[["self"]],["div"]]],[11,"new","","",101,[[["span"]],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"from","","",101,[[["span"]],["self"]]],[11,"clone","","",102,[[["self"]],["diveq"]]],[11,"new","","",102,[[["span"]],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"from","","",102,[[["span"]],["self"]]],[11,"clone","","",103,[[["self"]],["dollar"]]],[11,"new","","",103,[[["span"]],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"from","","",103,[[["span"]],["self"]]],[11,"clone","","",104,[[["self"]],["dot"]]],[11,"new","","",104,[[["span"]],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"from","","",104,[[["span"]],["self"]]],[11,"clone","","",105,[[["self"]],["dot2"]]],[11,"new","","",105,[[["span"]],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"from","","",105,[[["span"]],["self"]]],[11,"clone","","",106,[[["self"]],["dot3"]]],[11,"new","","",106,[[["span"]],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"from","","",106,[[["span"]],["self"]]],[11,"clone","","",107,[[["self"]],["dotdoteq"]]],[11,"new","","",107,[[["span"]],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"from","","",107,[[["span"]],["self"]]],[11,"clone","","",108,[[["self"]],["eq"]]],[11,"new","","",108,[[["span"]],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"from","","",108,[[["span"]],["self"]]],[11,"clone","","",109,[[["self"]],["eqeq"]]],[11,"new","","",109,[[["span"]],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"from","","",109,[[["span"]],["self"]]],[11,"clone","","",110,[[["self"]],["ge"]]],[11,"new","","",110,[[["span"]],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"from","","",110,[[["span"]],["self"]]],[11,"clone","","",111,[[["self"]],["gt"]]],[11,"new","","",111,[[["span"]],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"from","","",111,[[["span"]],["self"]]],[11,"clone","","",112,[[["self"]],["le"]]],[11,"new","","",112,[[["span"]],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"from","","",112,[[["span"]],["self"]]],[11,"clone","","",113,[[["self"]],["lt"]]],[11,"new","","",113,[[["span"]],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"from","","",113,[[["span"]],["self"]]],[11,"clone","","",114,[[["self"]],["muleq"]]],[11,"new","","",114,[[["span"]],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"from","","",114,[[["span"]],["self"]]],[11,"clone","","",115,[[["self"]],["ne"]]],[11,"new","","",115,[[["span"]],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"from","","",115,[[["span"]],["self"]]],[11,"clone","","",116,[[["self"]],["or"]]],[11,"new","","",116,[[["span"]],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"from","","",116,[[["span"]],["self"]]],[11,"clone","","",117,[[["self"]],["oreq"]]],[11,"new","","",117,[[["span"]],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"from","","",117,[[["span"]],["self"]]],[11,"clone","","",118,[[["self"]],["oror"]]],[11,"new","","",118,[[["span"]],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"from","","",118,[[["span"]],["self"]]],[11,"clone","","",119,[[["self"]],["pound"]]],[11,"new","","",119,[[["span"]],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"from","","",119,[[["span"]],["self"]]],[11,"clone","","",120,[[["self"]],["question"]]],[11,"new","","",120,[[["span"]],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"from","","",120,[[["span"]],["self"]]],[11,"clone","","",121,[[["self"]],["rarrow"]]],[11,"new","","",121,[[["span"]],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"from","","",121,[[["span"]],["self"]]],[11,"clone","","",122,[[["self"]],["larrow"]]],[11,"new","","",122,[[["span"]],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"from","","",122,[[["span"]],["self"]]],[11,"clone","","",123,[[["self"]],["rem"]]],[11,"new","","",123,[[["span"]],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"from","","",123,[[["span"]],["self"]]],[11,"clone","","",124,[[["self"]],["remeq"]]],[11,"new","","",124,[[["span"]],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"from","","",124,[[["span"]],["self"]]],[11,"clone","","",125,[[["self"]],["fatarrow"]]],[11,"new","","",125,[[["span"]],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"from","","",125,[[["span"]],["self"]]],[11,"clone","","",126,[[["self"]],["semi"]]],[11,"new","","",126,[[["span"]],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"from","","",126,[[["span"]],["self"]]],[11,"clone","","",127,[[["self"]],["shl"]]],[11,"new","","",127,[[["span"]],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"from","","",127,[[["span"]],["self"]]],[11,"clone","","",128,[[["self"]],["shleq"]]],[11,"new","","",128,[[["span"]],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"from","","",128,[[["span"]],["self"]]],[11,"clone","","",129,[[["self"]],["shr"]]],[11,"new","","",129,[[["span"]],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"from","","",129,[[["span"]],["self"]]],[11,"clone","","",130,[[["self"]],["shreq"]]],[11,"new","","",130,[[["span"]],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"from","","",130,[[["span"]],["self"]]],[11,"clone","","",131,[[["self"]],["star"]]],[11,"new","","",131,[[["span"]],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"from","","",131,[[["span"]],["self"]]],[11,"clone","","",132,[[["self"]],["sub"]]],[11,"new","","",132,[[["span"]],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"from","","",132,[[["span"]],["self"]]],[11,"clone","","",133,[[["self"]],["subeq"]]],[11,"new","","",133,[[["span"]],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"from","","",133,[[["span"]],["self"]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"parse","","",89,[[["cursor"]],["presult",["add"]]]],[11,"description","","",89,[[],["option",["str"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"parse","","",90,[[["cursor"]],["presult",["addeq"]]]],[11,"description","","",90,[[],["option",["str"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"parse","","",91,[[["cursor"]],["presult",["and"]]]],[11,"description","","",91,[[],["option",["str"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"parse","","",92,[[["cursor"]],["presult",["andand"]]]],[11,"description","","",92,[[],["option",["str"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"parse","","",93,[[["cursor"]],["presult",["andeq"]]]],[11,"description","","",93,[[],["option",["str"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"parse","","",94,[[["cursor"]],["presult",["at"]]]],[11,"description","","",94,[[],["option",["str"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"parse","","",95,[[["cursor"]],["presult",["bang"]]]],[11,"description","","",95,[[],["option",["str"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"parse","","",96,[[["cursor"]],["presult",["caret"]]]],[11,"description","","",96,[[],["option",["str"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"parse","","",97,[[["cursor"]],["presult",["careteq"]]]],[11,"description","","",97,[[],["option",["str"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"parse","","",98,[[["cursor"]],["presult",["colon"]]]],[11,"description","","",98,[[],["option",["str"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"parse","","",99,[[["cursor"]],["presult",["colon2"]]]],[11,"description","","",99,[[],["option",["str"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"parse","","",100,[[["cursor"]],["presult",["comma"]]]],[11,"description","","",100,[[],["option",["str"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"parse","","",101,[[["cursor"]],["presult",["div"]]]],[11,"description","","",101,[[],["option",["str"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"parse","","",102,[[["cursor"]],["presult",["diveq"]]]],[11,"description","","",102,[[],["option",["str"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"parse","","",103,[[["cursor"]],["presult",["dollar"]]]],[11,"description","","",103,[[],["option",["str"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"parse","","",104,[[["cursor"]],["presult",["dot"]]]],[11,"description","","",104,[[],["option",["str"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"parse","","",105,[[["cursor"]],["presult",["dot2"]]]],[11,"description","","",105,[[],["option",["str"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"parse","","",106,[[["cursor"]],["presult",["dot3"]]]],[11,"description","","",106,[[],["option",["str"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"parse","","",107,[[["cursor"]],["presult",["dotdoteq"]]]],[11,"description","","",107,[[],["option",["str"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"parse","","",108,[[["cursor"]],["presult",["eq"]]]],[11,"description","","",108,[[],["option",["str"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"parse","","",109,[[["cursor"]],["presult",["eqeq"]]]],[11,"description","","",109,[[],["option",["str"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"parse","","",110,[[["cursor"]],["presult",["ge"]]]],[11,"description","","",110,[[],["option",["str"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"parse","","",111,[[["cursor"]],["presult",["gt"]]]],[11,"description","","",111,[[],["option",["str"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"parse","","",112,[[["cursor"]],["presult",["le"]]]],[11,"description","","",112,[[],["option",["str"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"parse","","",113,[[["cursor"]],["presult",["lt"]]]],[11,"description","","",113,[[],["option",["str"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"parse","","",114,[[["cursor"]],["presult",["muleq"]]]],[11,"description","","",114,[[],["option",["str"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"parse","","",115,[[["cursor"]],["presult",["ne"]]]],[11,"description","","",115,[[],["option",["str"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"parse","","",116,[[["cursor"]],["presult",["or"]]]],[11,"description","","",116,[[],["option",["str"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"parse","","",117,[[["cursor"]],["presult",["oreq"]]]],[11,"description","","",117,[[],["option",["str"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"parse","","",118,[[["cursor"]],["presult",["oror"]]]],[11,"description","","",118,[[],["option",["str"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"parse","","",119,[[["cursor"]],["presult",["pound"]]]],[11,"description","","",119,[[],["option",["str"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"parse","","",120,[[["cursor"]],["presult",["question"]]]],[11,"description","","",120,[[],["option",["str"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"parse","","",121,[[["cursor"]],["presult",["rarrow"]]]],[11,"description","","",121,[[],["option",["str"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"parse","","",122,[[["cursor"]],["presult",["larrow"]]]],[11,"description","","",122,[[],["option",["str"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"parse","","",123,[[["cursor"]],["presult",["rem"]]]],[11,"description","","",123,[[],["option",["str"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"parse","","",124,[[["cursor"]],["presult",["remeq"]]]],[11,"description","","",124,[[],["option",["str"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"parse","","",125,[[["cursor"]],["presult",["fatarrow"]]]],[11,"description","","",125,[[],["option",["str"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"parse","","",126,[[["cursor"]],["presult",["semi"]]]],[11,"description","","",126,[[],["option",["str"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"parse","","",127,[[["cursor"]],["presult",["shl"]]]],[11,"description","","",127,[[],["option",["str"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"parse","","",128,[[["cursor"]],["presult",["shleq"]]]],[11,"description","","",128,[[],["option",["str"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"parse","","",129,[[["cursor"]],["presult",["shr"]]]],[11,"description","","",129,[[],["option",["str"]]]],[11,"to_tokens","","",130,[[["self"],["tokenstream"]]]],[11,"parse","","",130,[[["cursor"]],["presult",["shreq"]]]],[11,"description","","",130,[[],["option",["str"]]]],[11,"to_tokens","","",131,[[["self"],["tokenstream"]]]],[11,"parse","","",131,[[["cursor"]],["presult",["star"]]]],[11,"description","","",131,[[],["option",["str"]]]],[11,"to_tokens","","",132,[[["self"],["tokenstream"]]]],[11,"parse","","",132,[[["cursor"]],["presult",["sub"]]]],[11,"description","","",132,[[],["option",["str"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"parse","","",133,[[["cursor"]],["presult",["subeq"]]]],[11,"description","","",133,[[],["option",["str"]]]],[11,"clone","","",134,[[["self"]],["brace"]]],[11,"default","","",134,[[],["self"]]],[11,"surround","","",134,[[["self"],["tokenstream"],["f"]]]],[11,"parse","","",134,[[["cursor"],["f"]],["presult"]]],[11,"from","","",134,[[["span"]],["self"]]],[11,"clone","","",135,[[["self"]],["bracket"]]],[11,"default","","",135,[[],["self"]]],[11,"surround","","",135,[[["self"],["tokenstream"],["f"]]]],[11,"parse","","",135,[[["cursor"],["f"]],["presult"]]],[11,"from","","",135,[[["span"]],["self"]]],[11,"clone","","",136,[[["self"]],["paren"]]],[11,"default","","",136,[[],["self"]]],[11,"surround","","",136,[[["self"],["tokenstream"],["f"]]]],[11,"parse","","",136,[[["cursor"],["f"]],["presult"]]],[11,"from","","",136,[[["span"]],["self"]]],[11,"clone","","",137,[[["self"]],["group"]]],[11,"default","","",137,[[],["self"]]],[11,"surround","","",137,[[["self"],["tokenstream"],["f"]]]],[11,"parse","","",137,[[["cursor"],["f"]],["presult"]]],[11,"from","","",137,[[["span"]],["self"]]],[11,"clone","","",138,[[["self"]],["as"]]],[11,"default","","",138,[[],["self"]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"parse","","",138,[[["cursor"]],["presult",["as"]]]],[11,"description","","",138,[[],["option",["str"]]]],[11,"from","","",138,[[["span"]],["self"]]],[11,"clone","","",139,[[["self"]],["async"]]],[11,"default","","",139,[[],["self"]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"parse","","",139,[[["cursor"]],["presult",["async"]]]],[11,"description","","",139,[[],["option",["str"]]]],[11,"from","","",139,[[["span"]],["self"]]],[11,"clone","","",140,[[["self"]],["auto"]]],[11,"default","","",140,[[],["self"]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"parse","","",140,[[["cursor"]],["presult",["auto"]]]],[11,"description","","",140,[[],["option",["str"]]]],[11,"from","","",140,[[["span"]],["self"]]],[11,"clone","","",141,[[["self"]],["box"]]],[11,"default","","",141,[[],["self"]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"parse","","",141,[[["cursor"]],["presult",["box"]]]],[11,"description","","",141,[[],["option",["str"]]]],[11,"from","","",141,[[["span"]],["self"]]],[11,"clone","","",142,[[["self"]],["break"]]],[11,"default","","",142,[[],["self"]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"parse","","",142,[[["cursor"]],["presult",["break"]]]],[11,"description","","",142,[[],["option",["str"]]]],[11,"from","","",142,[[["span"]],["self"]]],[11,"clone","","",143,[[["self"]],["capself"]]],[11,"default","","",143,[[],["self"]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"parse","","",143,[[["cursor"]],["presult",["capself"]]]],[11,"description","","",143,[[],["option",["str"]]]],[11,"from","","",143,[[["span"]],["self"]]],[11,"clone","","",144,[[["self"]],["catch"]]],[11,"default","","",144,[[],["self"]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"parse","","",144,[[["cursor"]],["presult",["catch"]]]],[11,"description","","",144,[[],["option",["str"]]]],[11,"from","","",144,[[["span"]],["self"]]],[11,"clone","","",145,[[["self"]],["const"]]],[11,"default","","",145,[[],["self"]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"parse","","",145,[[["cursor"]],["presult",["const"]]]],[11,"description","","",145,[[],["option",["str"]]]],[11,"from","","",145,[[["span"]],["self"]]],[11,"clone","","",146,[[["self"]],["continue"]]],[11,"default","","",146,[[],["self"]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"parse","","",146,[[["cursor"]],["presult",["continue"]]]],[11,"description","","",146,[[],["option",["str"]]]],[11,"from","","",146,[[["span"]],["self"]]],[11,"clone","","",147,[[["self"]],["crate"]]],[11,"default","","",147,[[],["self"]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"parse","","",147,[[["cursor"]],["presult",["crate"]]]],[11,"description","","",147,[[],["option",["str"]]]],[11,"from","","",147,[[["span"]],["self"]]],[11,"clone","","",148,[[["self"]],["default"]]],[11,"default","","",148,[[],["self"]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"parse","","",148,[[["cursor"]],["presult",["default"]]]],[11,"description","","",148,[[],["option",["str"]]]],[11,"from","","",148,[[["span"]],["self"]]],[11,"clone","","",149,[[["self"]],["do"]]],[11,"default","","",149,[[],["self"]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"parse","","",149,[[["cursor"]],["presult",["do"]]]],[11,"description","","",149,[[],["option",["str"]]]],[11,"from","","",149,[[["span"]],["self"]]],[11,"clone","","",150,[[["self"]],["dyn"]]],[11,"default","","",150,[[],["self"]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"parse","","",150,[[["cursor"]],["presult",["dyn"]]]],[11,"description","","",150,[[],["option",["str"]]]],[11,"from","","",150,[[["span"]],["self"]]],[11,"clone","","",151,[[["self"]],["else"]]],[11,"default","","",151,[[],["self"]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"parse","","",151,[[["cursor"]],["presult",["else"]]]],[11,"description","","",151,[[],["option",["str"]]]],[11,"from","","",151,[[["span"]],["self"]]],[11,"clone","","",152,[[["self"]],["enum"]]],[11,"default","","",152,[[],["self"]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"parse","","",152,[[["cursor"]],["presult",["enum"]]]],[11,"description","","",152,[[],["option",["str"]]]],[11,"from","","",152,[[["span"]],["self"]]],[11,"clone","","",153,[[["self"]],["extern"]]],[11,"default","","",153,[[],["self"]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"parse","","",153,[[["cursor"]],["presult",["extern"]]]],[11,"description","","",153,[[],["option",["str"]]]],[11,"from","","",153,[[["span"]],["self"]]],[11,"clone","","",154,[[["self"]],["fn"]]],[11,"default","","",154,[[],["self"]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"parse","","",154,[[["cursor"]],["presult",["fn"]]]],[11,"description","","",154,[[],["option",["str"]]]],[11,"from","","",154,[[["span"]],["self"]]],[11,"clone","","",155,[[["self"]],["for"]]],[11,"default","","",155,[[],["self"]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"parse","","",155,[[["cursor"]],["presult",["for"]]]],[11,"description","","",155,[[],["option",["str"]]]],[11,"from","","",155,[[["span"]],["self"]]],[11,"clone","","",156,[[["self"]],["if"]]],[11,"default","","",156,[[],["self"]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"parse","","",156,[[["cursor"]],["presult",["if"]]]],[11,"description","","",156,[[],["option",["str"]]]],[11,"from","","",156,[[["span"]],["self"]]],[11,"clone","","",157,[[["self"]],["impl"]]],[11,"default","","",157,[[],["self"]]],[11,"to_tokens","","",157,[[["self"],["tokenstream"]]]],[11,"parse","","",157,[[["cursor"]],["presult",["impl"]]]],[11,"description","","",157,[[],["option",["str"]]]],[11,"from","","",157,[[["span"]],["self"]]],[11,"clone","","",158,[[["self"]],["in"]]],[11,"default","","",158,[[],["self"]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"parse","","",158,[[["cursor"]],["presult",["in"]]]],[11,"description","","",158,[[],["option",["str"]]]],[11,"from","","",158,[[["span"]],["self"]]],[11,"clone","","",159,[[["self"]],["let"]]],[11,"default","","",159,[[],["self"]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"parse","","",159,[[["cursor"]],["presult",["let"]]]],[11,"description","","",159,[[],["option",["str"]]]],[11,"from","","",159,[[["span"]],["self"]]],[11,"clone","","",160,[[["self"]],["loop"]]],[11,"default","","",160,[[],["self"]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"parse","","",160,[[["cursor"]],["presult",["loop"]]]],[11,"description","","",160,[[],["option",["str"]]]],[11,"from","","",160,[[["span"]],["self"]]],[11,"clone","","",161,[[["self"]],["macro"]]],[11,"default","","",161,[[],["self"]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"parse","","",161,[[["cursor"]],["presult",["macro"]]]],[11,"description","","",161,[[],["option",["str"]]]],[11,"from","","",161,[[["span"]],["self"]]],[11,"clone","","",162,[[["self"]],["match"]]],[11,"default","","",162,[[],["self"]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"parse","","",162,[[["cursor"]],["presult",["match"]]]],[11,"description","","",162,[[],["option",["str"]]]],[11,"from","","",162,[[["span"]],["self"]]],[11,"clone","","",163,[[["self"]],["mod"]]],[11,"default","","",163,[[],["self"]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"parse","","",163,[[["cursor"]],["presult",["mod"]]]],[11,"description","","",163,[[],["option",["str"]]]],[11,"from","","",163,[[["span"]],["self"]]],[11,"clone","","",164,[[["self"]],["move"]]],[11,"default","","",164,[[],["self"]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"parse","","",164,[[["cursor"]],["presult",["move"]]]],[11,"description","","",164,[[],["option",["str"]]]],[11,"from","","",164,[[["span"]],["self"]]],[11,"clone","","",165,[[["self"]],["mut"]]],[11,"default","","",165,[[],["self"]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"parse","","",165,[[["cursor"]],["presult",["mut"]]]],[11,"description","","",165,[[],["option",["str"]]]],[11,"from","","",165,[[["span"]],["self"]]],[11,"clone","","",166,[[["self"]],["pub"]]],[11,"default","","",166,[[],["self"]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"parse","","",166,[[["cursor"]],["presult",["pub"]]]],[11,"description","","",166,[[],["option",["str"]]]],[11,"from","","",166,[[["span"]],["self"]]],[11,"clone","","",167,[[["self"]],["ref"]]],[11,"default","","",167,[[],["self"]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"parse","","",167,[[["cursor"]],["presult",["ref"]]]],[11,"description","","",167,[[],["option",["str"]]]],[11,"from","","",167,[[["span"]],["self"]]],[11,"clone","","",168,[[["self"]],["return"]]],[11,"default","","",168,[[],["self"]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"parse","","",168,[[["cursor"]],["presult",["return"]]]],[11,"description","","",168,[[],["option",["str"]]]],[11,"from","","",168,[[["span"]],["self"]]],[11,"clone","","",169,[[["self"]],["self_"]]],[11,"default","","",169,[[],["self"]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"parse","","",169,[[["cursor"]],["presult",["self_"]]]],[11,"description","","",169,[[],["option",["str"]]]],[11,"from","","",169,[[["span"]],["self"]]],[11,"clone","","",170,[[["self"]],["static"]]],[11,"default","","",170,[[],["self"]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"parse","","",170,[[["cursor"]],["presult",["static"]]]],[11,"description","","",170,[[],["option",["str"]]]],[11,"from","","",170,[[["span"]],["self"]]],[11,"clone","","",171,[[["self"]],["struct"]]],[11,"default","","",171,[[],["self"]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"parse","","",171,[[["cursor"]],["presult",["struct"]]]],[11,"description","","",171,[[],["option",["str"]]]],[11,"from","","",171,[[["span"]],["self"]]],[11,"clone","","",172,[[["self"]],["super"]]],[11,"default","","",172,[[],["self"]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"parse","","",172,[[["cursor"]],["presult",["super"]]]],[11,"description","","",172,[[],["option",["str"]]]],[11,"from","","",172,[[["span"]],["self"]]],[11,"clone","","",173,[[["self"]],["trait"]]],[11,"default","","",173,[[],["self"]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"parse","","",173,[[["cursor"]],["presult",["trait"]]]],[11,"description","","",173,[[],["option",["str"]]]],[11,"from","","",173,[[["span"]],["self"]]],[11,"clone","","",174,[[["self"]],["type"]]],[11,"default","","",174,[[],["self"]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"parse","","",174,[[["cursor"]],["presult",["type"]]]],[11,"description","","",174,[[],["option",["str"]]]],[11,"from","","",174,[[["span"]],["self"]]],[11,"clone","","",175,[[["self"]],["union"]]],[11,"default","","",175,[[],["self"]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"parse","","",175,[[["cursor"]],["presult",["union"]]]],[11,"description","","",175,[[],["option",["str"]]]],[11,"from","","",175,[[["span"]],["self"]]],[11,"clone","","",176,[[["self"]],["unsafe"]]],[11,"default","","",176,[[],["self"]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"parse","","",176,[[["cursor"]],["presult",["unsafe"]]]],[11,"description","","",176,[[],["option",["str"]]]],[11,"from","","",176,[[["span"]],["self"]]],[11,"clone","","",177,[[["self"]],["use"]]],[11,"default","","",177,[[],["self"]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"parse","","",177,[[["cursor"]],["presult",["use"]]]],[11,"description","","",177,[[],["option",["str"]]]],[11,"from","","",177,[[["span"]],["self"]]],[11,"clone","","",178,[[["self"]],["where"]]],[11,"default","","",178,[[],["self"]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"parse","","",178,[[["cursor"]],["presult",["where"]]]],[11,"description","","",178,[[],["option",["str"]]]],[11,"from","","",178,[[["span"]],["self"]]],[11,"clone","","",179,[[["self"]],["while"]]],[11,"default","","",179,[[],["self"]]],[11,"to_tokens","","",179,[[["self"],["tokenstream"]]]],[11,"parse","","",179,[[["cursor"]],["presult",["while"]]]],[11,"description","","",179,[[],["option",["str"]]]],[11,"from","","",179,[[["span"]],["self"]]],[11,"clone","","",180,[[["self"]],["yield"]]],[11,"default","","",180,[[],["self"]]],[11,"to_tokens","","",180,[[["self"],["tokenstream"]]]],[11,"parse","","",180,[[["cursor"]],["presult",["yield"]]]],[11,"description","","",180,[[],["option",["str"]]]],[11,"from","","",180,[[["span"]],["self"]]],[11,"from","syn","",181,[[["self_"]],["ident"]]],[11,"from","","",181,[[["capself"]],["ident"]]],[11,"from","","",181,[[["super"]],["ident"]]],[11,"from","","",181,[[["crate"]],["ident"]]],[11,"from","","",181,[[["extern"]],["ident"]]],[11,"parse_inner","","",0,[[["cursor"]],["presult"]]],[11,"parse_outer","","",0,[[["cursor"]],["presult"]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"clone","","",0,[[["self"]],["attribute"]]],[11,"interpret_meta","","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["option",["meta"]]]],[11,"clone","","",63,[[["self"]],["attrstyle"]]],[11,"clone","","",64,[[["self"]],["meta"]]],[11,"from","","",64,[[["ident"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"from","","",64,[[["metalist"]],["meta"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"from","","",64,[[["metanamevalue"]],["meta"]]],[11,"to_tokens","","",64,[[["self"],["tokenstream"]]]],[11,"name","","Returns the identifier that begins this structured meta item.",64,[[["self"]],["ident"]]],[11,"clone","","",65,[[["self"]],["nestedmeta"]]],[11,"from","","",65,[[["meta"]],["nestedmeta"]]],[11,"from","","",65,[[["lit"]],["nestedmeta"]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"parse","","",6,[[["cursor"]],["presult"]]],[11,"description","","",6,[[],["option",["str"]]]],[11,"parse","","",4,[[["cursor"]],["presult"]]],[11,"description","","",4,[[],["option",["str"]]]],[11,"parse","","",5,[[["cursor"]],["presult"]]],[11,"description","","",5,[[],["option",["str"]]]],[11,"parse_named","","",3,[[["cursor"]],["presult"]]],[11,"parse_unnamed","","",3,[[["cursor"]],["presult"]]],[11,"parse","","",67,[[["cursor"]],["presult"]]],[11,"description","","",67,[[],["option",["str"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",66,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"from","","",66,[[["fieldsnamed"]],["fields"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"from","","",66,[[["fieldsunnamed"]],["fields"]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",66,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",66,[[["self"]],["itermut",["field"]]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",67,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"from","","",67,[[["vispublic"]],["visibility"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"from","","",67,[[["viscrate"]],["visibility"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"from","","",67,[[["visrestricted"]],["visibility"]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"parse","","",68,[[["cursor"]],["presult"]]],[11,"description","","",68,[[],["option",["str"]]]],[11,"parse","","",15,[[["cursor"]],["presult"]]],[11,"description","","",15,[[],["option",["str"]]]],[11,"parse","","",16,[[["cursor"]],["presult"]]],[11,"description","","",16,[[],["option",["str"]]]],[11,"parse","","",17,[[["cursor"]],["presult"]]],[11,"description","","",17,[[],["option",["str"]]]],[11,"parse","","",69,[[["cursor"]],["presult"]]],[11,"description","","",69,[[],["option",["str"]]]],[11,"parse","","",20,[[["cursor"]],["presult"]]],[11,"description","","",20,[[],["option",["str"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"clone","","",68,[[["self"]],["expr"]]],[11,"clone","","",182,[[["self"]],["exprbox"]]],[11,"from","","",68,[[["exprbox"]],["expr"]]],[11,"clone","","",183,[[["self"]],["exprinplace"]]],[11,"from","","",68,[[["exprinplace"]],["expr"]]],[11,"clone","","",184,[[["self"]],["exprarray"]]],[11,"from","","",68,[[["exprarray"]],["expr"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"from","","",68,[[["exprcall"]],["expr"]]],[11,"clone","","",185,[[["self"]],["exprmethodcall"]]],[11,"from","","",68,[[["exprmethodcall"]],["expr"]]],[11,"clone","","",186,[[["self"]],["exprtuple"]]],[11,"from","","",68,[[["exprtuple"]],["expr"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"from","","",68,[[["exprbinary"]],["expr"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"from","","",68,[[["exprunary"]],["expr"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"from","","",68,[[["exprlit"]],["expr"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"from","","",68,[[["exprcast"]],["expr"]]],[11,"clone","","",187,[[["self"]],["exprtype"]]],[11,"from","","",68,[[["exprtype"]],["expr"]]],[11,"clone","","",188,[[["self"]],["exprif"]]],[11,"from","","",68,[[["exprif"]],["expr"]]],[11,"clone","","",189,[[["self"]],["expriflet"]]],[11,"from","","",68,[[["expriflet"]],["expr"]]],[11,"clone","","",190,[[["self"]],["exprwhile"]]],[11,"from","","",68,[[["exprwhile"]],["expr"]]],[11,"clone","","",191,[[["self"]],["exprwhilelet"]]],[11,"from","","",68,[[["exprwhilelet"]],["expr"]]],[11,"clone","","",192,[[["self"]],["exprforloop"]]],[11,"from","","",68,[[["exprforloop"]],["expr"]]],[11,"clone","","",193,[[["self"]],["exprloop"]]],[11,"from","","",68,[[["exprloop"]],["expr"]]],[11,"clone","","",194,[[["self"]],["exprmatch"]]],[11,"from","","",68,[[["exprmatch"]],["expr"]]],[11,"clone","","",195,[[["self"]],["exprclosure"]]],[11,"from","","",68,[[["exprclosure"]],["expr"]]],[11,"clone","","",196,[[["self"]],["exprunsafe"]]],[11,"from","","",68,[[["exprunsafe"]],["expr"]]],[11,"clone","","",197,[[["self"]],["exprblock"]]],[11,"from","","",68,[[["exprblock"]],["expr"]]],[11,"clone","","",198,[[["self"]],["exprassign"]]],[11,"from","","",68,[[["exprassign"]],["expr"]]],[11,"clone","","",199,[[["self"]],["exprassignop"]]],[11,"from","","",68,[[["exprassignop"]],["expr"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"from","","",68,[[["exprfield"]],["expr"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"from","","",68,[[["exprindex"]],["expr"]]],[11,"clone","","",200,[[["self"]],["exprrange"]]],[11,"from","","",68,[[["exprrange"]],["expr"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"from","","",68,[[["exprpath"]],["expr"]]],[11,"clone","","",201,[[["self"]],["exprreference"]]],[11,"from","","",68,[[["exprreference"]],["expr"]]],[11,"clone","","",202,[[["self"]],["exprbreak"]]],[11,"from","","",68,[[["exprbreak"]],["expr"]]],[11,"clone","","",203,[[["self"]],["exprcontinue"]]],[11,"from","","",68,[[["exprcontinue"]],["expr"]]],[11,"clone","","",204,[[["self"]],["exprreturn"]]],[11,"from","","",68,[[["exprreturn"]],["expr"]]],[11,"clone","","",205,[[["self"]],["exprmacro"]]],[11,"from","","",68,[[["exprmacro"]],["expr"]]],[11,"clone","","",206,[[["self"]],["exprstruct"]]],[11,"from","","",68,[[["exprstruct"]],["expr"]]],[11,"clone","","",207,[[["self"]],["exprrepeat"]]],[11,"from","","",68,[[["exprrepeat"]],["expr"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"from","","",68,[[["exprparen"]],["expr"]]],[11,"clone","","",208,[[["self"]],["exprgroup"]]],[11,"from","","",68,[[["exprgroup"]],["expr"]]],[11,"clone","","",209,[[["self"]],["exprtry"]]],[11,"from","","",68,[[["exprtry"]],["expr"]]],[11,"clone","","",210,[[["self"]],["exprcatch"]]],[11,"from","","",68,[[["exprcatch"]],["expr"]]],[11,"clone","","",211,[[["self"]],["expryield"]]],[11,"from","","",68,[[["expryield"]],["expr"]]],[11,"clone","","",19,[[["self"]],["exprverbatim"]]],[11,"from","","",68,[[["exprverbatim"]],["expr"]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"clone","","",69,[[["self"]],["member"]]],[11,"clone","","",20,[[["self"]],["index"]]],[11,"from","","",20,[[["usize"]],["index"]]],[11,"parse","","",23,[[["cursor"]],["presult"]]],[11,"description","","",23,[[],["option",["str"]]]],[11,"parse","","",70,[[["cursor"]],["presult"]]],[11,"description","","",70,[[],["option",["str"]]]],[11,"parse","","",24,[[["cursor"]],["presult"]]],[11,"description","","",24,[[],["option",["str"]]]],[11,"parse","","",21,[[["cursor"]],["presult"]]],[11,"description","","",21,[[],["option",["str"]]]],[11,"parse","","",29,[[["cursor"]],["presult"]]],[11,"description","","",29,[[],["option",["str"]]]],[11,"parse","","",72,[[["cursor"]],["presult"]]],[11,"description","","",72,[[],["option",["str"]]]],[11,"parse","","",28,[[["cursor"]],["presult"]]],[11,"description","","",28,[[],["option",["str"]]]],[11,"parse","","",71,[[["cursor"]],["presult"]]],[11,"description","","",71,[[],["option",["str"]]]],[11,"parse","","",22,[[["cursor"]],["presult"]]],[11,"description","","",22,[[],["option",["str"]]]],[11,"parse","","",30,[[["cursor"]],["presult"]]],[11,"description","","",30,[[],["option",["str"]]]],[11,"parse","","",73,[[["cursor"]],["presult"]]],[11,"description","","",73,[[],["option",["str"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",212,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",213,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",214,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"default","","",23,[[],["generics"]]],[11,"clone","","",23,[[["self"]],["generics"]]],[11,"clone","","",70,[[["self"]],["genericparam"]]],[11,"clone","","",29,[[["self"]],["typeparam"]]],[11,"from","","",70,[[["typeparam"]],["genericparam"]]],[11,"clone","","",24,[[["self"]],["lifetimedef"]]],[11,"from","","",70,[[["lifetimedef"]],["genericparam"]]],[11,"clone","","",22,[[["self"]],["constparam"]]],[11,"from","","",70,[[["constparam"]],["genericparam"]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type parameters in `self.params`.",23,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type parameters in `self.params`.",23,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime parameters in `self.params`.",23,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the lifetime parameters in `self.params`.",23,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant parameters in `self.params`.",23,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the constant parameters in `self.params`.",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one present already.",23,[[["self"]],["whereclause"]]],[11,"clone","","",212,[[["self"]],["implgenerics"]]],[11,"clone","","",213,[[["self"]],["typegenerics"]]],[11,"clone","","",214,[[["self"]],["turbofish"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",23,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",213,[[["self"]],["turbofish"]]],[11,"default","","",21,[[],["boundlifetimes"]]],[11,"clone","","",21,[[["self"]],["boundlifetimes"]]],[11,"new","","",24,[[["lifetime"]],["self"]]],[11,"from","","",29,[[["ident"]],["self"]]],[11,"clone","","",72,[[["self"]],["typeparambound"]]],[11,"from","","",72,[[["traitbound"]],["typeparambound"]]],[11,"from","","",72,[[["lifetime"]],["typeparambound"]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"clone","","",28,[[["self"]],["traitbound"]]],[11,"clone","","",71,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",30,[[["self"]],["whereclause"]]],[11,"clone","","",73,[[["self"]],["wherepredicate"]]],[11,"clone","","",27,[[["self"]],["predicatetype"]]],[11,"from","","",73,[[["predicatetype"]],["wherepredicate"]]],[11,"clone","","",26,[[["self"]],["predicatelifetime"]]],[11,"from","","",73,[[["predicatelifetime"]],["wherepredicate"]]],[11,"clone","","",25,[[["self"]],["predicateeq"]]],[11,"from","","",73,[[["predicateeq"]],["wherepredicate"]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"parse","","",31,[[["cursor"]],["presult"]]],[11,"description","","",31,[[],["option",["str"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"clone","","",31,[[["self"]],["lifetime"]]],[11,"new","","",31,[[["str"],["span"]],["self"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"eq","","",31,[[["self"],["lifetime"]],["bool"]]],[11,"partial_cmp","","",31,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"cmp","","",31,[[["self"],["lifetime"]],["ordering"]]],[11,"hash","","",31,[[["self"],["h"]]]],[11,"parse","","",76,[[["cursor"]],["presult"]]],[11,"description","","",76,[[],["option",["str"]]]],[11,"parse","","",215,[[["cursor"]],["presult"]]],[11,"description","","",215,[[],["option",["str"]]]],[11,"parse","","",216,[[["cursor"]],["presult"]]],[11,"description","","",216,[[],["option",["str"]]]],[11,"parse","","",217,[[["cursor"]],["presult"]]],[11,"description","","",217,[[],["option",["str"]]]],[11,"parse","","",218,[[["cursor"]],["presult"]]],[11,"description","","",218,[[],["option",["str"]]]],[11,"parse","","",219,[[["cursor"]],["presult"]]],[11,"description","","",219,[[],["option",["str"]]]],[11,"parse","","",220,[[["cursor"]],["presult"]]],[11,"description","","",220,[[],["option",["str"]]]],[11,"parse","","",32,[[["cursor"]],["presult"]]],[11,"description","","",32,[[],["option",["str"]]]],[11,"to_tokens","","",215,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",216,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",217,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",218,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",219,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",220,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,[[["literal"]],["self"]]],[11,"clone","","",76,[[["self"]],["lit"]]],[11,"clone","","",215,[[["self"]],["litstr"]]],[11,"from","","",76,[[["litstr"]],["lit"]]],[11,"clone","","",216,[[["self"]],["litbytestr"]]],[11,"from","","",76,[[["litbytestr"]],["lit"]]],[11,"clone","","",217,[[["self"]],["litbyte"]]],[11,"from","","",76,[[["litbyte"]],["lit"]]],[11,"clone","","",218,[[["self"]],["litchar"]]],[11,"from","","",76,[[["litchar"]],["lit"]]],[11,"clone","","",219,[[["self"]],["litint"]]],[11,"from","","",76,[[["litint"]],["lit"]]],[11,"clone","","",220,[[["self"]],["litfloat"]]],[11,"from","","",76,[[["litfloat"]],["lit"]]],[11,"clone","","",32,[[["self"]],["litbool"]]],[11,"from","","",76,[[["litbool"]],["lit"]]],[11,"clone","","",33,[[["self"]],["litverbatim"]]],[11,"from","","",76,[[["litverbatim"]],["lit"]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"new","","",215,[[["str"],["span"]],["self"]]],[11,"value","","",215,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string literal.",215,[[["self"]],["result",["parseerror"]]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"set_span","","",215,[[["self"],["span"]]]],[11,"new","","",216,N],[11,"value","","",216,[[["self"]],["vec",["u8"]]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"set_span","","",216,[[["self"],["span"]]]],[11,"new","","",217,[[["u8"],["span"]],["self"]]],[11,"value","","",217,[[["self"]],["u8"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"set_span","","",217,[[["self"],["span"]]]],[11,"new","","",218,[[["char"],["span"]],["self"]]],[11,"value","","",218,[[["self"]],["char"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"set_span","","",218,[[["self"],["span"]]]],[11,"new","","",219,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",219,[[["self"]],["u64"]]],[11,"suffix","","",219,[[["self"]],["intsuffix"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"set_span","","",219,[[["self"],["span"]]]],[11,"new","","",220,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",220,[[["self"]],["f64"]]],[11,"suffix","","",220,[[["self"]],["floatsuffix"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"set_span","","",220,[[["self"],["span"]]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"set_span","","",33,[[["self"],["span"]]]],[11,"clone","","",77,[[["self"]],["strstyle"]]],[11,"clone","","",75,[[["self"]],["intsuffix"]]],[11,"clone","","",74,[[["self"]],["floatsuffix"]]],[11,"parse","","",34,[[["cursor"]],["presult"]]],[11,"description","","",34,[[],["option",["str"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"clone","","",34,[[["self"]],["macro"]]],[11,"clone","","",78,[[["self"]],["macrodelimiter"]]],[11,"parse","","",38,[[["cursor"]],["presult"]]],[11,"description","","",38,[[],["option",["str"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"clone","","",38,[[["self"]],["deriveinput"]]],[11,"clone","","",79,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datastruct"]]],[11,"from","","",79,[[["datastruct"]],["data"]]],[11,"clone","","",35,[[["self"]],["dataenum"]]],[11,"from","","",79,[[["dataenum"]],["data"]]],[11,"clone","","",37,[[["self"]],["dataunion"]]],[11,"from","","",79,[[["dataunion"]],["data"]]],[11,"parse_binop","","",80,[[["cursor"]],["presult"]]],[11,"parse","","",81,[[["cursor"]],["presult"]]],[11,"description","","",81,[[],["option",["str"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"clone","","",80,[[["self"]],["binop"]]],[11,"clone","","",81,[[["self"]],["unop"]]],[11,"parse","","",84,[[["cursor"]],["presult"]]],[11,"description","","",84,[[],["option",["str"]]]],[11,"without_plus","","",84,[[["cursor"]],["presult"]]],[11,"parse","","",52,[[["cursor"]],["presult"]]],[11,"description","","",52,[[],["option",["str"]]]],[11,"parse","","",41,[[["cursor"]],["presult"]]],[11,"description","","",41,[[],["option",["str"]]]],[11,"parse","","",50,[[["cursor"]],["presult"]]],[11,"description","","",50,[[],["option",["str"]]]],[11,"parse","","",51,[[["cursor"]],["presult"]]],[11,"description","","",51,[[],["option",["str"]]]],[11,"parse","","",42,[[["cursor"]],["presult"]]],[11,"description","","",42,[[],["option",["str"]]]],[11,"parse","","",47,[[["cursor"]],["presult"]]],[11,"description","","",47,[[],["option",["str"]]]],[11,"parse","","",45,[[["cursor"]],["presult"]]],[11,"description","","",45,[[],["option",["str"]]]],[11,"parse","","",54,[[["cursor"]],["presult"]]],[11,"description","","",54,[[],["option",["str"]]]],[11,"parse","","",46,[[["cursor"]],["presult"]]],[11,"description","","",46,[[],["option",["str"]]]],[11,"parse","","",49,[[["cursor"]],["presult"]]],[11,"description","","",49,[[],["option",["str"]]]],[11,"without_plus","","",83,[[["cursor"]],["presult"]]],[11,"parse","","",83,[[["cursor"]],["presult"]]],[11,"description","","",83,[[],["option",["str"]]]],[11,"parse","","",53,[[["cursor"]],["presult"]]],[11,"description","","",53,[[],["option",["str"]]]],[11,"without_plus","","",53,[[["cursor"]],["presult"]]],[11,"parse","","",44,[[["cursor"]],["presult"]]],[11,"description","","",44,[[],["option",["str"]]]],[11,"parse","","",43,[[["cursor"]],["presult"]]],[11,"description","","",43,[[],["option",["str"]]]],[11,"parse","","",48,[[["cursor"]],["presult"]]],[11,"description","","",48,[[],["option",["str"]]]],[11,"parse","","",40,[[["cursor"]],["presult"]]],[11,"description","","",40,[[],["option",["str"]]]],[11,"parse","","",82,[[["cursor"]],["presult"]]],[11,"description","","",82,[[],["option",["str"]]]],[11,"parse","","",39,[[["cursor"]],["presult"]]],[11,"description","","",39,[[],["option",["str"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"clone","","",84,[[["self"]],["type"]]],[11,"clone","","",52,[[["self"]],["typeslice"]]],[11,"from","","",84,[[["typeslice"]],["type"]]],[11,"clone","","",41,[[["self"]],["typearray"]]],[11,"from","","",84,[[["typearray"]],["type"]]],[11,"clone","","",50,[[["self"]],["typeptr"]]],[11,"from","","",84,[[["typeptr"]],["type"]]],[11,"clone","","",51,[[["self"]],["typereference"]]],[11,"from","","",84,[[["typereference"]],["type"]]],[11,"clone","","",42,[[["self"]],["typebarefn"]]],[11,"from","","",84,[[["typebarefn"]],["type"]]],[11,"clone","","",47,[[["self"]],["typenever"]]],[11,"from","","",84,[[["typenever"]],["type"]]],[11,"clone","","",54,[[["self"]],["typetuple"]]],[11,"from","","",84,[[["typetuple"]],["type"]]],[11,"clone","","",49,[[["self"]],["typepath"]]],[11,"from","","",84,[[["typepath"]],["type"]]],[11,"clone","","",53,[[["self"]],["typetraitobject"]]],[11,"from","","",84,[[["typetraitobject"]],["type"]]],[11,"clone","","",44,[[["self"]],["typeimpltrait"]]],[11,"from","","",84,[[["typeimpltrait"]],["type"]]],[11,"clone","","",48,[[["self"]],["typeparen"]]],[11,"from","","",84,[[["typeparen"]],["type"]]],[11,"clone","","",43,[[["self"]],["typegroup"]]],[11,"from","","",84,[[["typegroup"]],["type"]]],[11,"clone","","",45,[[["self"]],["typeinfer"]]],[11,"from","","",84,[[["typeinfer"]],["type"]]],[11,"clone","","",46,[[["self"]],["typemacro"]]],[11,"from","","",84,[[["typemacro"]],["type"]]],[11,"clone","","",55,[[["self"]],["typeverbatim"]]],[11,"from","","",84,[[["typeverbatim"]],["type"]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"clone","","",39,[[["self"]],["abi"]]],[11,"clone","","",40,[[["self"]],["barefnarg"]]],[11,"clone","","",82,[[["self"]],["barefnargname"]]],[11,"clone","","",83,[[["self"]],["returntype"]]],[11,"parse","","",60,[[["cursor"]],["presult"]]],[11,"description","","",60,[[],["option",["str"]]]],[11,"parse","","",85,[[["cursor"]],["presult"]]],[11,"parse","","",57,[[["cursor"]],["presult"]]],[11,"description","","",57,[[],["option",["str"]]]],[11,"parse","","",59,[[["cursor"]],["presult"]]],[11,"description","","",59,[[],["option",["str"]]]],[11,"parse","","",61,[[["cursor"]],["presult"]]],[11,"description","","",61,[[],["option",["str"]]]],[11,"parse","","",58,[[["cursor"]],["presult"]]],[11,"description","","",58,[[],["option",["str"]]]],[11,"parse_mod_style","","",60,[[["cursor"]],["presult"]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"clone","","",60,[[["self"]],["path"]]],[11,"global","","",60,[[["self"]],["bool"]]],[11,"clone","","",56,[[["self"]],["pathtokens"]]],[11,"from","","",60,[[["t"]],["self"]]],[11,"clone","","",61,[[["self"]],["pathsegment"]]],[11,"from","","",61,[[["t"]],["self"]]],[11,"clone","","",86,[[["self"]],["patharguments"]]],[11,"default","","",86,[[],["self"]]],[11,"is_empty","","",86,[[["self"]],["bool"]]],[11,"clone","","",85,[[["self"]],["genericargument"]]],[11,"clone","","",57,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",58,[[["self"]],["binding"]]],[11,"clone","","",59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",62,[[["self"]],["qself"]]],[0,"buffer","","A stably addressed token buffer supporting efficient traversal based on a cheaply copyable cursor.",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times, unlike `TokenStream` which requires a deep copy in order to traverse more than once.",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",221,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",221,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer and able to traverse until the end of the buffer.",221,[[["self"]],["cursor"]]],[11,"clone","","",222,[[["self"]],["cursor"]]],[11,"eq","","",222,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",222,[[["self"],["cursor"]],["bool"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",222,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end of its valid scope.",222,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given delimiter, returns a cursor into that group and one pointing to the next `TokenTree`.",222,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along with a cursor pointing at the next `TokenTree`.",222,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along with a cursor pointing at the next `TokenTree`.",222,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along with a cursor pointing at the next `TokenTree`.",222,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into a `TokenStream`.",222,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it along with a cursor pointing at the next `TokenTree`.",222,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or `Span::call_site()` if this cursor points to eof.",222,[[["self"]],["span"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by punctuation.",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`.",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any.",N,N],[13,"Punctuated","","",223,N],[13,"End","","",223,N],[11,"to_tokens","","",224,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",223,[[["self"],["tokenstream"]]]],[11,"clone","","",224,[[["self"]],["punctuated"]]],[11,"new","","Creates an empty punctuated sequence.",224,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, meaning it contains no syntax tree nodes or punctuation.",224,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated sequence.",224,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",224,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",224,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",224,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of type `&T`.",224,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree nodes of type `&mut T`.",224,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as borrowed punctuated pairs.",224,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as mutably borrowed punctuated pairs.",224,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as owned punctuated pairs.",224,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated sequence. The sequence must previously have a trailing punctuation.",224,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this punctuated sequence. The sequence must be non-empty and must not already have trailing punctuation.",224,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or `None` if the sequence is empty.",224,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a trailing punctuation.",224,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it has a trailing punctuation.",224,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated sequence.",224,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",224,[[["self"],["usize"],["t"]]]],[11,"from_iter","","",224,[[["i"]],["self"]]],[11,"extend","","",224,[[["self"],["i"]]]],[11,"from_iter","","",224,[[["i"]],["self"]]],[11,"extend","","",224,[[["self"],["i"]]]],[11,"into_iter","","",224,N],[11,"default","","",224,[[],["self"]]],[11,"next","","",225,[[["self"]],["option"]]],[11,"len","","",225,[[["self"]],["usize"]]],[11,"next","","",226,[[["self"]],["option"]]],[11,"len","","",226,[[["self"]],["usize"]]],[11,"next","","",227,[[["self"]],["option"]]],[11,"len","","",227,[[["self"]],["usize"]]],[11,"next","","",228,[[["self"]],["option"]]],[11,"len","","",228,[[["self"]],["usize"]]],[11,"next","","",229,[[["self"]],["option"]]],[11,"len","","",229,[[["self"]],["usize"]]],[11,"next","","",230,[[["self"]],["option"]]],[11,"len","","",230,[[["self"]],["usize"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, discarding the following punctuation.",223,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",223,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated pair.",223,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless this pair is the final one and there is no trailing punctuation.",223,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an optional following punctuation.",223,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree node and optional following punctuation.",223,N],[11,"index","","",224,N],[11,"index_mut","","",224,N],[11,"parse_separated","","Parse zero or more syntax tree nodes with punctuation in between and no trailing punctuation.",224,[[["cursor"]],["presult"]]],[11,"parse_separated_nonempty","","Parse one or more syntax tree nodes with punctuation in bewteen and no trailing punctuation. allowing trailing punctuation.",224,[[["cursor"]],["presult"]]],[11,"parse_terminated","","Parse zero or more syntax tree nodes with punctuation in between and optional trailing punctuation.",224,[[["cursor"]],["presult"]]],[11,"parse_terminated_nonempty","","Parse one or more syntax tree nodes with punctuation in between and optional trailing punctuation.",224,[[["cursor"]],["presult"]]],[11,"parse_separated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",224,N],[11,"parse_separated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",224,N],[11,"parse_terminated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",224,N],[11,"parse_terminated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",224,N],[0,"synom","syn","Parsing interface for parsing a token stream into a syntax tree node.",N,N],[3,"ParseError","syn::synom","Error returned when a `Synom` parser cannot parse the input tokens.",N,N],[0,"ext","","Extension traits that are made available within the `call!` parser.",N,N],[8,"IdentExt","syn::synom::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",231,[[["cursor"]],["presult"]]],[11,"parse_any","syn","",181,[[["cursor"]],["presult"]]],[6,"PResult","syn::synom","The result of a `Synom` parser.",N,N],[8,"Synom","","Parsing interface implemented by all types that can be parsed in a default way from a token stream.",N,N],[10,"parse","","",232,[[["cursor"]],["presult"]]],[11,"description","","A short name of the type being parsed.",232,[[],["option",["str"]]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax tree node.",N,N],[16,"Output","","",233,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",233,[[["self"],["tokenstream"]],["result",["parseerror"]]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree node.",233,[[["self"],["tokenstream"]],["result",["parseerror"]]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",233,[[["self"],["str"]],["result",["parseerror"]]]],[11,"parse","syn","",181,[[["cursor"]],["presult"]]],[11,"description","","",181,[[],["option",["str"]]]],[0,"spanned","","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[10,"span","","Returns a `Span` covering the complete contents of this syntax tree node, or [`Span::call_site()`] if this node is empty.",234,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax tree.",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax tree.",N,N],[11,"visit_abi","","",235,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",235,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",235,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",235,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",235,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",235,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",235,[[["self"],["binop"]]]],[11,"visit_binding","","",235,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",235,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",235,[[["self"],["constparam"]]]],[11,"visit_data","","",235,[[["self"],["data"]]]],[11,"visit_data_enum","","",235,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",235,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",235,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",235,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",235,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",235,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",235,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",235,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",235,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",235,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",235,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",235,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",235,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",235,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",235,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",235,[[["self"],["field"]]]],[11,"visit_fields","","",235,[[["self"],["fields"]]]],[11,"visit_fields_named","","",235,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",235,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",235,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",235,[[["self"],["genericparam"]]]],[11,"visit_generics","","",235,[[["self"],["generics"]]]],[11,"visit_ident","","",235,[[["self"],["ident"]]]],[11,"visit_index","","",235,[[["self"],["index"]]]],[11,"visit_lifetime","","",235,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",235,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",235,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",235,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",235,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",235,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",235,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",235,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",235,[[["self"],["litint"]]]],[11,"visit_lit_str","","",235,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",235,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",235,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",235,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",235,[[["self"],["member"]]]],[11,"visit_meta","","",235,[[["self"],["meta"]]]],[11,"visit_meta_list","","",235,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",235,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",235,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",235,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",235,[[["self"],["path"]]]],[11,"visit_path_arguments","","",235,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",235,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",235,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",235,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",235,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",235,[[["self"],["qself"]]]],[11,"visit_return_type","","",235,[[["self"],["returntype"]]]],[11,"visit_span","","",235,[[["self"],["span"]]]],[11,"visit_trait_bound","","",235,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",235,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",235,[[["self"],["type"]]]],[11,"visit_type_array","","",235,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",235,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",235,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",235,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",235,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",235,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",235,[[["self"],["typenever"]]]],[11,"visit_type_param","","",235,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",235,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",235,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",235,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",235,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",235,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",235,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",235,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",235,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",235,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",235,[[["self"],["unop"]]]],[11,"visit_variant","","",235,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",235,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",235,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",235,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",235,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",235,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",235,[[["self"],["wherepredicate"]]]],[11,"fmt","syn::synom","",236,[[["self"],["formatter"]],["result"]]],[11,"description","","",236,[[["self"]],["str"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[14,"named","syn","Define a parser function with the signature expected by syn parser combinators.",N,N],[14,"call","","Invoke the given parser function with zero or more arguments.",N,N],[14,"map","","Transform the result of a parser by applying a function or closure.",N,N],[14,"not","","Invert the result of a parser by parsing successfully if the given parser fails to parse and vice versa.",N,N],[14,"cond","","Execute a parser only if a condition is met, otherwise return None.",N,N],[14,"cond_reduce","","Execute a parser only if a condition is met, otherwise fail to parse.",N,N],[14,"many0","","Parse zero or more values using the given parser.",N,N],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",N,N],[14,"value","","Produce the given value without parsing anything.",N,N],[14,"reject","","Unconditionally fail to parse anything.",N,N],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",N,N],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",N,N],[14,"do_parse","","Run a series of parsers, optionally naming each intermediate result, followed by a step to combine the intermediate results.",N,N],[14,"input_end","","Parse nothing and succeed only if the end of the enclosing block has been reached.",N,N],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",N,N],[14,"epsilon","","Parses nothing and always succeeds.",N,N],[14,"syn","","Parse any type that implements the `Synom` trait.",N,N],[14,"custom_keyword","","Parse the given word as a keyword.",N,N],[14,"parens","","Parse inside of `(` `)` parentheses.",N,N],[14,"brackets","","Parse inside of `[` `]` square brackets.",N,N],[14,"braces","","Parse inside of `{` `}` curly braces.",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type representation of a given token.",N,N],[14,"punct","","Parse a single Rust punctuation token.",N,N],[14,"keyword","","Parse a single Rust keyword token.",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the [`quote!`] macro but uses type inference to figure out a return type for those tokens.",N,N],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",181,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",181,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",181,N],[11,"span","","",181,[[["self"]],["span"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"to_string","","",181,[[["self"]],["string"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"not_found","","",181,[[["str"],["str"]],["e"]]],[11,"eq","","",181,[[["self"],["ident"]],["bool"]]],[11,"eq","","",181,[[["self"],["t"]],["bool"]]],[11,"hash","","",181,N],[11,"fmt","","",181,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",181,[[["self"]],["ident"]]],[11,"partial_cmp","","",181,[[["self"],["ident"]],["option",["ordering"]]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result",["error"]]]],[11,"cmp","","",181,[[["self"],["ident"]],["ordering"]]],[11,"to_tokens","","",181,N],[11,"span","syn::token","",87,[[["self"]],["span"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"not_found","","",87,[[["str"],["str"]],["e"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"not_found","","",88,[[["str"],["str"]],["e"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"not_found","","",89,[[["str"],["str"]],["e"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"not_found","","",90,[[["str"],["str"]],["e"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"not_found","","",91,[[["str"],["str"]],["e"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"not_found","","",92,[[["str"],["str"]],["e"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"not_found","","",93,[[["str"],["str"]],["e"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"not_found","","",94,[[["str"],["str"]],["e"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"not_found","","",95,[[["str"],["str"]],["e"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"not_found","","",96,[[["str"],["str"]],["e"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"not_found","","",97,[[["str"],["str"]],["e"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"not_found","","",98,[[["str"],["str"]],["e"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"not_found","","",99,[[["str"],["str"]],["e"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"not_found","","",100,[[["str"],["str"]],["e"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"not_found","","",101,[[["str"],["str"]],["e"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"not_found","","",102,[[["str"],["str"]],["e"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"not_found","","",103,[[["str"],["str"]],["e"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"not_found","","",104,[[["str"],["str"]],["e"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"not_found","","",105,[[["str"],["str"]],["e"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"not_found","","",106,[[["str"],["str"]],["e"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"not_found","","",107,[[["str"],["str"]],["e"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"not_found","","",108,[[["str"],["str"]],["e"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"not_found","","",109,[[["str"],["str"]],["e"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"not_found","","",110,[[["str"],["str"]],["e"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"not_found","","",111,[[["str"],["str"]],["e"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"not_found","","",112,[[["str"],["str"]],["e"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"not_found","","",113,[[["str"],["str"]],["e"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"not_found","","",114,[[["str"],["str"]],["e"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"not_found","","",115,[[["str"],["str"]],["e"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"not_found","","",116,[[["str"],["str"]],["e"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"not_found","","",117,[[["str"],["str"]],["e"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"not_found","","",118,[[["str"],["str"]],["e"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"not_found","","",119,[[["str"],["str"]],["e"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"not_found","","",120,[[["str"],["str"]],["e"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"not_found","","",121,[[["str"],["str"]],["e"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"not_found","","",122,[[["str"],["str"]],["e"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"not_found","","",123,[[["str"],["str"]],["e"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"not_found","","",124,[[["str"],["str"]],["e"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"not_found","","",125,[[["str"],["str"]],["e"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"not_found","","",126,[[["str"],["str"]],["e"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"not_found","","",127,[[["str"],["str"]],["e"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"not_found","","",128,[[["str"],["str"]],["e"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"not_found","","",129,[[["str"],["str"]],["e"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"not_found","","",130,[[["str"],["str"]],["e"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"not_found","","",131,[[["str"],["str"]],["e"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"not_found","","",132,[[["str"],["str"]],["e"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"not_found","","",133,[[["str"],["str"]],["e"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"not_found","","",134,[[["str"],["str"]],["e"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"not_found","","",135,[[["str"],["str"]],["e"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"not_found","","",136,[[["str"],["str"]],["e"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"not_found","","",137,[[["str"],["str"]],["e"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"not_found","","",138,[[["str"],["str"]],["e"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"not_found","","",139,[[["str"],["str"]],["e"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"not_found","","",140,[[["str"],["str"]],["e"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"not_found","","",141,[[["str"],["str"]],["e"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"not_found","","",142,[[["str"],["str"]],["e"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"not_found","","",143,[[["str"],["str"]],["e"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"not_found","","",144,[[["str"],["str"]],["e"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"not_found","","",145,[[["str"],["str"]],["e"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"not_found","","",146,[[["str"],["str"]],["e"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"not_found","","",147,[[["str"],["str"]],["e"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"not_found","","",148,[[["str"],["str"]],["e"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"not_found","","",149,[[["str"],["str"]],["e"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"not_found","","",150,[[["str"],["str"]],["e"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"not_found","","",151,[[["str"],["str"]],["e"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"not_found","","",152,[[["str"],["str"]],["e"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"not_found","","",153,[[["str"],["str"]],["e"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"not_found","","",154,[[["str"],["str"]],["e"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"not_found","","",155,[[["str"],["str"]],["e"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"not_found","","",156,[[["str"],["str"]],["e"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"not_found","","",157,[[["str"],["str"]],["e"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"not_found","","",158,[[["str"],["str"]],["e"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"not_found","","",159,[[["str"],["str"]],["e"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"not_found","","",160,[[["str"],["str"]],["e"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"not_found","","",161,[[["str"],["str"]],["e"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"not_found","","",162,[[["str"],["str"]],["e"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"not_found","","",163,[[["str"],["str"]],["e"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"not_found","","",164,[[["str"],["str"]],["e"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"not_found","","",165,[[["str"],["str"]],["e"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"not_found","","",166,[[["str"],["str"]],["e"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"from","","",167,[[["t"]],["t"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"not_found","","",167,[[["str"],["str"]],["e"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"not_found","","",168,[[["str"],["str"]],["e"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"not_found","","",169,[[["str"],["str"]],["e"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"not_found","","",170,[[["str"],["str"]],["e"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"from","","",171,[[["t"]],["t"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"not_found","","",171,[[["str"],["str"]],["e"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"not_found","","",172,[[["str"],["str"]],["e"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"not_found","","",173,[[["str"],["str"]],["e"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"not_found","","",174,[[["str"],["str"]],["e"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"not_found","","",175,[[["str"],["str"]],["e"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"not_found","","",176,[[["str"],["str"]],["e"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"not_found","","",177,[[["str"],["str"]],["e"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"from","","",178,[[["t"]],["t"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"not_found","","",178,[[["str"],["str"]],["e"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"not_found","","",179,[[["str"],["str"]],["e"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"from","","",180,[[["t"]],["t"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"not_found","","",180,[[["str"],["str"]],["e"]]],[11,"into","syn::buffer","",221,[[["self"]],["u"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"not_found","","",221,[[["str"],["str"]],["e"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"not_found","","",222,[[["str"],["str"]],["e"]]],[11,"span","syn::punctuated","",224,[[["self"]],["span"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"into_iter","","",224,[[["self"]],["i"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"not_found","","",224,[[["str"],["str"]],["e"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into_iter","","",225,[[["self"]],["i"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"not_found","","",225,[[["str"],["str"]],["e"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into_iter","","",226,[[["self"]],["i"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"not_found","","",226,[[["str"],["str"]],["e"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into_iter","","",227,[[["self"]],["i"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"not_found","","",227,[[["str"],["str"]],["e"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into_iter","","",228,[[["self"]],["i"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"not_found","","",228,[[["str"],["str"]],["e"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into_iter","","",229,[[["self"]],["i"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"not_found","","",229,[[["str"],["str"]],["e"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into_iter","","",230,[[["self"]],["i"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"not_found","","",230,[[["str"],["str"]],["e"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"not_found","","",223,[[["str"],["str"]],["e"]]],[11,"visit_abi","syn::visit","",235,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",235,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",235,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",235,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",235,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",235,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",235,[[["self"],["binop"]]]],[11,"visit_binding","","",235,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",235,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",235,[[["self"],["constparam"]]]],[11,"visit_data","","",235,[[["self"],["data"]]]],[11,"visit_data_enum","","",235,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",235,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",235,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",235,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",235,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",235,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",235,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",235,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",235,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",235,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",235,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",235,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",235,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",235,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",235,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",235,[[["self"],["field"]]]],[11,"visit_fields","","",235,[[["self"],["fields"]]]],[11,"visit_fields_named","","",235,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",235,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",235,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",235,[[["self"],["genericparam"]]]],[11,"visit_generics","","",235,[[["self"],["generics"]]]],[11,"visit_ident","","",235,[[["self"],["ident"]]]],[11,"visit_index","","",235,[[["self"],["index"]]]],[11,"visit_lifetime","","",235,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",235,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",235,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",235,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",235,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",235,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",235,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",235,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",235,[[["self"],["litint"]]]],[11,"visit_lit_str","","",235,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",235,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",235,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",235,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",235,[[["self"],["member"]]]],[11,"visit_meta","","",235,[[["self"],["meta"]]]],[11,"visit_meta_list","","",235,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",235,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",235,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",235,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",235,[[["self"],["path"]]]],[11,"visit_path_arguments","","",235,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",235,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",235,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",235,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",235,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",235,[[["self"],["qself"]]]],[11,"visit_return_type","","",235,[[["self"],["returntype"]]]],[11,"visit_span","","",235,[[["self"],["span"]]]],[11,"visit_trait_bound","","",235,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",235,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",235,[[["self"],["type"]]]],[11,"visit_type_array","","",235,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",235,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",235,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",235,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",235,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",235,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",235,[[["self"],["typenever"]]]],[11,"visit_type_param","","",235,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",235,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",235,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",235,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",235,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",235,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",235,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",235,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",235,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",235,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",235,[[["self"],["unop"]]]],[11,"visit_variant","","",235,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",235,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",235,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",235,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",235,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",235,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",235,[[["self"],["wherepredicate"]]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"PathTokens"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Apostrophe"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Box"],[3,"Break"],[3,"CapSelf"],[3,"Catch"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Type"],[3,"Union"],[3,"Unsafe"],[3,"Use"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Ident"],[3,"ExprBox"],[3,"ExprInPlace"],[3,"ExprArray"],[3,"ExprMethodCall"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprIf"],[3,"ExprIfLet"],[3,"ExprWhile"],[3,"ExprWhileLet"],[3,"ExprForLoop"],[3,"ExprLoop"],[3,"ExprMatch"],[3,"ExprClosure"],[3,"ExprUnsafe"],[3,"ExprBlock"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprBreak"],[3,"ExprContinue"],[3,"ExprReturn"],[3,"ExprMacro"],[3,"ExprStruct"],[3,"ExprRepeat"],[3,"ExprGroup"],[3,"ExprTry"],[3,"ExprCatch"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"IdentExt"],[8,"Synom"],[8,"Parser"],[8,"Spanned"],[8,"Visit"],[3,"ParseError"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);
